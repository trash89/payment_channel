{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "recipientAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "claimTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expiration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newExpiration",
          "type": "uint256"
        }
      ],
      "name": "extend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_recipientAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expiration",
          "type": "uint256"
        }
      ],
      "name": "newChannel",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recipient",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sender",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/SimplePaymentChannel.sol",
    "1": "contracts/console.sol"
  },
  "ast": {
    "absolutePath": "contracts/SimplePaymentChannel.sol",
    "exportedSymbols": {
      "SimplePaymentChannel": [
        239
      ],
      "console": [
        8303
      ]
    },
    "id": 240,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:0"
      },
      {
        "absolutePath": "contracts/console.sol",
        "file": "./console.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 240,
        "sourceUnit": 8304,
        "src": "60:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SimplePaymentChannel",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 239,
        "linearizedBaseContracts": [
          239
        ],
        "name": "SimplePaymentChannel",
        "nameLocation": "94:20:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "67e404ce",
            "id": 4,
            "mutability": "mutable",
            "name": "sender",
            "nameLocation": "144:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 239,
            "src": "121:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "121:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "66d003ac",
            "id": 6,
            "mutability": "mutable",
            "name": "recipient",
            "nameLocation": "212:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 239,
            "src": "189:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "189:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4665096d",
            "id": 8,
            "mutability": "mutable",
            "name": "expiration",
            "nameLocation": "281:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 239,
            "src": "266:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "266:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "417:132:0",
              "statements": [
                {
                  "expression": {
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "427:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 18,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "444:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "444:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 17,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "436:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 16,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "436:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "436:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "427:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "427:28:0"
                },
                {
                  "expression": {
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "465:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24,
                      "name": "recipientAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "477:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "465:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "465:28:0"
                },
                {
                  "expression": {
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27,
                      "name": "expiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "503:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 31,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 28,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "516:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "516:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 30,
                        "name": "duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "534:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "516:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "503:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "503:39:0"
                }
              ]
            },
            "id": 35,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "recipientAddress",
                  "nameLocation": "373:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "357:32:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "399:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "391:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "356:52:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "417:0:0"
            },
            "scope": 239,
            "src": "345:204:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "660:127:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 42,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "678:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "678:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 44,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "692:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "678:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 41,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "670:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "670:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "670:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49,
                          "name": "newExpiration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "717:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 50,
                          "name": "expiration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "733:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "717:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "709:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "709:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "709:35:0"
                },
                {
                  "expression": {
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54,
                      "name": "expiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "754:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 55,
                      "name": "newExpiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "767:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "754:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "754:26:0"
                }
              ]
            },
            "documentation": {
              "id": 36,
              "nodeType": "StructuredDocumentation",
              "src": "555:52:0",
              "text": "the sender can extend the expiration at any time"
            },
            "functionSelector": "9714378c",
            "id": 59,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "extend",
            "nameLocation": "621:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "newExpiration",
                  "nameLocation": "636:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "628:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "627:23:0"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:0:0"
            },
            "scope": 239,
            "src": "612:175:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "958:161:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "1105:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 63,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "1092:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:20:0"
                }
              ]
            },
            "documentation": {
              "id": 60,
              "nodeType": "StructuredDocumentation",
              "src": "793:127:0",
              "text": "if the timeout is reached without the recipient closing the channel,\n then the Ether is released back to the sender."
            },
            "functionSelector": "0e1da6c3",
            "id": 68,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimTimeout",
            "nameLocation": "934:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:2:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:0:0"
            },
            "scope": 239,
            "src": "925:194:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1218:118:0",
              "statements": [
                {
                  "expression": {
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1228:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 78,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1245:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1245:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1237:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 76,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1237:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1228:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:28:0"
                },
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1266:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 84,
                      "name": "_recipientAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "1278:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1266:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1266:29:0"
                },
                {
                  "expression": {
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87,
                      "name": "expiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1305:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 88,
                      "name": "_expiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1318:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1305:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1305:24:0"
                }
              ]
            },
            "functionSelector": "f26c6aed",
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newChannel",
            "nameLocation": "1134:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "_recipientAddress",
                  "nameLocation": "1161:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1145:33:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "_expiration",
                  "nameLocation": "1188:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1180:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1144:56:0"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1218:0:0"
            },
            "scope": 239,
            "src": "1125:211:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "1610:205:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1628:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1628:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 103,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1642:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1628:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420726563697069656e74",
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1652:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_356fd710a5db01dff16365e70ff8a60dd0e2c8863b6f3320c261af1260e57be6",
                          "typeString": "literal_string \"not recipient\""
                        },
                        "value": "not recipient"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_356fd710a5db01dff16365e70ff8a60dd0e2c8863b6f3320c261af1260e57be6",
                          "typeString": "literal_string \"not recipient\""
                        }
                      ],
                      "id": 100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1620:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1620:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 110,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "1703:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 111,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "1711:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 109,
                          "name": "isValidSignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "1686:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256,bytes memory) view returns (bool)"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1686:35:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207369676e6174757265",
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1722:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a",
                          "typeString": "literal_string \"invalid signature\""
                        },
                        "value": "invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a",
                          "typeString": "literal_string \"invalid signature\""
                        }
                      ],
                      "id": 108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1678:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1678:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1678:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 119,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "1771:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 116,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1752:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1752:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1752:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1752:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 123,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "1801:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 122,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "1788:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1788:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1788:20:0"
                }
              ]
            },
            "documentation": {
              "id": 93,
              "nodeType": "StructuredDocumentation",
              "src": "1342:199:0",
              "text": "the recipient can close the channel at any time by presenting a\n signed amount from the sender. the recipient will be sent that amount,\n and the remainder will go back to the sender"
            },
            "functionSelector": "415ffba7",
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "close",
            "nameLocation": "1555:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1569:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1561:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "1590:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1577:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1577:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1560:40:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1610:0:0"
            },
            "scope": 239,
            "src": "1546:269:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "1944:209:0",
              "statements": [
                {
                  "assignments": [
                    137
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 137,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "1962:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 155,
                      "src": "1954:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 136,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1954:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 147,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 142,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2008:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SimplePaymentChannel_$239",
                                  "typeString": "contract SimplePaymentChannel"
                                }
                              },
                              {
                                "id": 143,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 129,
                                "src": "2014:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SimplePaymentChannel_$239",
                                  "typeString": "contract SimplePaymentChannel"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 140,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1991:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "1991:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1991:30:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 139,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1981:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1981:41:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 138,
                      "name": "prefixed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 238,
                      "src": "1972:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1972:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1954:69:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 149,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 137,
                          "src": "2117:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 150,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "2126:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 148,
                        "name": "recoverSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2103:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (bytes32,bytes memory) view returns (address)"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2103:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 152,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "2140:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2103:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 135,
                  "id": 154,
                  "nodeType": "Return",
                  "src": "2096:50:0"
                }
              ]
            },
            "id": 156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "1830:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1855:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1847:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1847:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "1876:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1863:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1863:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1846:40:0"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1934:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1934:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1933:6:0"
            },
            "scope": 239,
            "src": "1821:332:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "2277:181:0",
              "statements": [
                {
                  "assignments": [
                    166,
                    168,
                    170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 166,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "2294:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 194,
                      "src": "2288:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 165,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2288:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 168,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "2305:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 194,
                      "src": "2297:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 167,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2297:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 170,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "2316:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 194,
                      "src": "2308:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 169,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2308:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 174,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 172,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "2336:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 171,
                      "name": "splitSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 221,
                      "src": "2321:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (uint8,bytes32,bytes32)"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2321:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(uint8,bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2287:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "41646472657373206973202573",
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2362:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f11baed5134d330728365fb98131d1d1baca8a60595e830d89a288591447a357",
                          "typeString": "literal_string \"Address is %s\""
                        },
                        "value": "Address is %s"
                      },
                      {
                        "arguments": [
                          {
                            "id": 180,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 158,
                            "src": "2389:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 181,
                            "name": "v",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 166,
                            "src": "2398:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 182,
                            "name": "r",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "2401:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 183,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 170,
                            "src": "2404:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 179,
                          "name": "ecrecover",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -6,
                          "src": "2379:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                          }
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2379:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f11baed5134d330728365fb98131d1d1baca8a60595e830d89a288591447a357",
                          "typeString": "literal_string \"Address is %s\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 175,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8303,
                        "src": "2350:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8303_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 998,
                      "src": "2350:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2350:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2350:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 188,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "2434:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 189,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2443:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 190,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "2446:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 191,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "2449:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 187,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "2424:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2424:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 164,
                  "id": 193,
                  "nodeType": "Return",
                  "src": "2417:34:0"
                }
              ]
            },
            "id": 195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recoverSigner",
            "nameLocation": "2168:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "2190:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2182:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2182:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "2212:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2199:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2199:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2181:35:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2264:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2264:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2263:9:0"
            },
            "scope": 239,
            "src": "2159:299:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "2753:363:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 208,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "2771:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2771:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2785:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "2771:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2763:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2763:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "2763:25:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2807:277:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2876:24:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "sig",
                                  "nodeType": "YulIdentifier",
                                  "src": "2891:3:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2896:2:0",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2887:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2887:12:0"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2881:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2881:19:0"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "2876:1:0"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2944:24:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "sig",
                                  "nodeType": "YulIdentifier",
                                  "src": "2959:3:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2964:2:0",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2955:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2955:12:0"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2949:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2949:19:0"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "2944:1:0"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3041:33:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3051:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "sig",
                                      "nodeType": "YulIdentifier",
                                      "src": "3064:3:0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3069:2:0",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3060:3:0"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3060:12:0"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3054:5:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3054:19:0"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "3046:4:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3046:28:0"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "3041:1:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 203,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2876:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 205,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2944:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 198,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2891:3:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 198,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2959:3:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 198,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3064:3:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 201,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3041:1:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 214,
                  "nodeType": "InlineAssembly",
                  "src": "2798:286:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 215,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "3101:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 216,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "3104:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 217,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "3107:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 218,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3100:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(uint8,bytes32,bytes32)"
                    }
                  },
                  "functionReturnParameters": 206,
                  "id": 219,
                  "nodeType": "Return",
                  "src": "3093:16:0"
                }
              ]
            },
            "documentation": {
              "id": 196,
              "nodeType": "StructuredDocumentation",
              "src": "2464:114:0",
              "text": "All functions below this are just taken from the chapter\n 'creating and verifying signatures' chapter."
            },
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "splitSignature",
            "nameLocation": "2592:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "2620:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "2607:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2607:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2606:18:0"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "2691:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "2685:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2685:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "2714:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "2706:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2706:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "2737:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "2729:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2729:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2671:77:0"
            },
            "scope": 239,
            "src": "2583:533:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 237,
              "nodeType": "Block",
              "src": "3253:135:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3326:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n32"
                          },
                          {
                            "id": 233,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "3362:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 230,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3309:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3309:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3309:58:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 229,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3282:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3282:99:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 228,
                  "id": 236,
                  "nodeType": "Return",
                  "src": "3263:118:0"
                }
              ]
            },
            "documentation": {
              "id": 222,
              "nodeType": "StructuredDocumentation",
              "src": "3123:61:0",
              "text": "builds a prefixed hash to mimic the behavior of eth_sign."
            },
            "id": 238,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prefixed",
            "nameLocation": "3198:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3215:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "3207:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3207:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3206:14:0"
            },
            "returnParameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "3244:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3244:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3243:9:0"
            },
            "scope": 239,
            "src": "3189:199:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 240,
        "src": "85:3305:0",
        "usedErrors": []
      }
    ],
    "src": "36:3355:0"
  },
  "bytecode": "60806040526040516107a43803806107a483398101604081905261002291610060565b60008054336001600160a01b031991821617909155600180549091166001600160a01b038416179055610055814261009a565b600255506100c09050565b6000806040838503121561007357600080fd5b82516001600160a01b038116811461008a57600080fd5b6020939093015192949293505050565b600082198211156100bb57634e487b7160e01b600052601160045260246000fd5b500190565b6106d5806100cf6000396000f3fe6080604052600436106100705760003560e01c806366d003ac1161004e57806366d003ac146100d557806367e404ce1461010d5780639714378c1461012d578063f26c6aed1461014d57600080fd5b80630e1da6c314610075578063415ffba71461008c5780634665096d146100ac575b600080fd5b34801561008157600080fd5b5061008a61018f565b005b34801561009857600080fd5b5061008a6100a736600461052d565b61019d565b3480156100b857600080fd5b506100c260025481565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506001546100f5906001600160a01b031681565b6040516001600160a01b0390911681526020016100cc565b34801561011957600080fd5b506000546100f5906001600160a01b031681565b34801561013957600080fd5b5061008a6101483660046105e8565b61027f565b61008a61015b366004610601565b60008054336001600160a01b031991821617909155600180549091166001600160a01b039390931692909217909155600255565b6000546001600160a01b0316ff5b6001546001600160a01b031633146101ec5760405162461bcd60e51b815260206004820152600d60248201526c1b9bdd081c9958da5c1a595b9d609a1b60448201526064015b60405180910390fd5b6101f682826102a9565b6102365760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b60448201526064016101e3565b6001546040516001600160a01b039091169083156108fc029084906000818181858888f19350505050158015610270573d6000803e3d6000fd5b506000546001600160a01b0316ff5b6000546001600160a01b0316331461029657600080fd5b60025481116102a457600080fd5b600255565b6040516bffffffffffffffffffffffff193060601b16602082015260348101839052600090819061034090605401604051602081830303815290604052805190602001206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b6000549091506001600160a01b0316610359828561036b565b6001600160a01b031614949350505050565b60008060008061037a8561047e565b9250925092506104166040518060400160405280600d81526020016c4164647265737320697320257360981b815250600188868686604051600081526020016040526040516103e5949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610407573d6000803e3d6000fd5b505050602060405103516104ad565b60408051600081526020810180835288905260ff851691810191909152606081018390526080810182905260019060a0016020604051602081039080840390855afa158015610469573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411461049157600080fd5b5050506020810151604082015160609092015160001a92909190565b6104f282826040516024016104c3929190610639565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526104f6565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561054057600080fd5b82359150602083013567ffffffffffffffff8082111561055f57600080fd5b818501915085601f83011261057357600080fd5b81358181111561058557610585610517565b604051601f8201601f19908116603f011681019083821181831017156105ad576105ad610517565b816040528281528860208487010111156105c657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156105fa57600080fd5b5035919050565b6000806040838503121561061457600080fd5b82356001600160a01b038116811461062b57600080fd5b946020939093013593505050565b604081526000835180604084015260005b81811015610667576020818701810151606086840101520161064a565b81811115610679576000606083860101525b506001600160a01b0393909316602083015250601f91909101601f19160160600191905056fea2646970667358221220f1bd2658d37dd57436fe14872e041b1b5d28de30a641adeab2ef9b195b33da5064736f6c634300080e0033",
  "bytecodeSha1": "02aff598785df86a0a384b9b2f9a191c8219cb9a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "SimplePaymentChannel",
  "coverageMap": {
    "branches": {
      "0": {
        "SimplePaymentChannel.close": {
          "17": [
            1628,
            1651,
            true
          ],
          "18": [
            1686,
            1721,
            true
          ]
        },
        "SimplePaymentChannel.extend": {
          "19": [
            678,
            698,
            true
          ],
          "20": [
            717,
            743,
            true
          ]
        },
        "SimplePaymentChannel.splitSignature": {
          "21": [
            2771,
            2787,
            true
          ]
        }
      },
      "1": {}
    },
    "statements": {
      "0": {
        "SimplePaymentChannel.claimTimeout": {
          "3": [
            1092,
            1112
          ]
        },
        "SimplePaymentChannel.close": {
          "4": [
            1620,
            1668
          ],
          "5": [
            1678,
            1742
          ],
          "6": [
            1752,
            1778
          ],
          "7": [
            1788,
            1808
          ]
        },
        "SimplePaymentChannel.extend": {
          "8": [
            670,
            699
          ],
          "9": [
            709,
            744
          ],
          "10": [
            754,
            780
          ]
        },
        "SimplePaymentChannel.isValidSignature": {
          "12": [
            2096,
            2146
          ]
        },
        "SimplePaymentChannel.newChannel": {
          "0": [
            1228,
            1256
          ],
          "1": [
            1266,
            1295
          ],
          "2": [
            1305,
            1329
          ]
        },
        "SimplePaymentChannel.prefixed": {
          "11": [
            3263,
            3381
          ]
        },
        "SimplePaymentChannel.recoverSigner": {
          "13": [
            2350,
            2407
          ],
          "14": [
            2417,
            2451
          ]
        },
        "SimplePaymentChannel.splitSignature": {
          "15": [
            2763,
            2788
          ]
        }
      },
      "1": {
        "console.log": {
          "16": [
            6358,
            6429
          ]
        }
      }
    }
  },
  "dependencies": [
    "console"
  ],
  "deployedBytecode": "6080604052600436106100705760003560e01c806366d003ac1161004e57806366d003ac146100d557806367e404ce1461010d5780639714378c1461012d578063f26c6aed1461014d57600080fd5b80630e1da6c314610075578063415ffba71461008c5780634665096d146100ac575b600080fd5b34801561008157600080fd5b5061008a61018f565b005b34801561009857600080fd5b5061008a6100a736600461052d565b61019d565b3480156100b857600080fd5b506100c260025481565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506001546100f5906001600160a01b031681565b6040516001600160a01b0390911681526020016100cc565b34801561011957600080fd5b506000546100f5906001600160a01b031681565b34801561013957600080fd5b5061008a6101483660046105e8565b61027f565b61008a61015b366004610601565b60008054336001600160a01b031991821617909155600180549091166001600160a01b039390931692909217909155600255565b6000546001600160a01b0316ff5b6001546001600160a01b031633146101ec5760405162461bcd60e51b815260206004820152600d60248201526c1b9bdd081c9958da5c1a595b9d609a1b60448201526064015b60405180910390fd5b6101f682826102a9565b6102365760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b60448201526064016101e3565b6001546040516001600160a01b039091169083156108fc029084906000818181858888f19350505050158015610270573d6000803e3d6000fd5b506000546001600160a01b0316ff5b6000546001600160a01b0316331461029657600080fd5b60025481116102a457600080fd5b600255565b6040516bffffffffffffffffffffffff193060601b16602082015260348101839052600090819061034090605401604051602081830303815290604052805190602001206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b6000549091506001600160a01b0316610359828561036b565b6001600160a01b031614949350505050565b60008060008061037a8561047e565b9250925092506104166040518060400160405280600d81526020016c4164647265737320697320257360981b815250600188868686604051600081526020016040526040516103e5949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610407573d6000803e3d6000fd5b505050602060405103516104ad565b60408051600081526020810180835288905260ff851691810191909152606081018390526080810182905260019060a0016020604051602081039080840390855afa158015610469573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411461049157600080fd5b5050506020810151604082015160609092015160001a92909190565b6104f282826040516024016104c3929190610639565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526104f6565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561054057600080fd5b82359150602083013567ffffffffffffffff8082111561055f57600080fd5b818501915085601f83011261057357600080fd5b81358181111561058557610585610517565b604051601f8201601f19908116603f011681019083821181831017156105ad576105ad610517565b816040528281528860208487010111156105c657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156105fa57600080fd5b5035919050565b6000806040838503121561061457600080fd5b82356001600160a01b038116811461062b57600080fd5b946020939093013593505050565b604081526000835180604084015260005b81811015610667576020818701810151606086840101520161064a565b81811115610679576000606083860101525b506001600160a01b0393909316602083015250601f91909101601f19160160600191905056fea2646970667358221220f1bd2658d37dd57436fe14872e041b1b5d28de30a641adeab2ef9b195b33da5064736f6c634300080e0033",
  "deployedSourceMap": "85:3305:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;925:194;;;;;;;;;;;;;:::i;:::-;;1546:269;;;;;;;;;;-1:-1:-1;1546:269:0;;;;;:::i;:::-;;:::i;266:25::-;;;;;;;;;;;;;;;;;;;1286::2;;;1274:2;1259:18;266:25:0;;;;;;;;189:32;;;;;;;;;;-1:-1:-1;189:32:0;;;;-1:-1:-1;;;;;189:32:0;;;;;;-1:-1:-1;;;;;1502:32:2;;;1484:51;;1472:2;1457:18;189:32:0;1322:219:2;121:29:0;;;;;;;;;;-1:-1:-1;121:29:0;;;;-1:-1:-1;;;;;121:29:0;;;612:175;;;;;;;;;;-1:-1:-1;612:175:0;;;;;:::i;:::-;;:::i;1125:211::-;;;;;;:::i;:::-;1228:6;:28;;1245:10;-1:-1:-1;;;;;;1228:28:0;;;;;;;-1:-1:-1;1266:29:0;;;;;-1:-1:-1;;;;;1266:29:0;;;;;;;;;;;1305:10;:24;1125:211;925:194;1105:6;;-1:-1:-1;;;;;1105:6:0;1092:20;1546:269;1642:9;;-1:-1:-1;;;;;1642:9:0;1628:10;:23;1620:48;;;;-1:-1:-1;;;1620:48:0;;2300:2:2;1620:48:0;;;2282:21:2;2339:2;2319:18;;;2312:30;-1:-1:-1;;;2358:18:2;;;2351:43;2411:18;;1620:48:0;;;;;;;;;1686:35;1703:6;1711:9;1686:16;:35::i;:::-;1678:64;;;;-1:-1:-1;;;1678:64:0;;2642:2:2;1678:64:0;;;2624:21:2;2681:2;2661:18;;;2654:30;-1:-1:-1;;;2700:18:2;;;2693:47;2757:18;;1678:64:0;2440:341:2;1678:64:0;1752:9;;:26;;-1:-1:-1;;;;;1752:9:0;;;;:26;;;;;1771:6;;1752:9;:26;:9;:26;1771:6;1752:9;:26;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1801:6:0;;-1:-1:-1;;;;;1801:6:0;1788:20;612:175;692:6;;-1:-1:-1;;;;;692:6:0;678:10;:20;670:29;;;;;;733:10;;717:13;:26;709:35;;;;;;754:10;:26;612:175::o;1821:332::-;1991:30;;-1:-1:-1;;2008:4:0;2991:2:2;2987:15;2983:53;1991:30:0;;;2971:66:2;3053:12;;;3046:28;;;1934:4:0;;;;1972:51;;3090:12:2;;1991:30:0;;;;;;;;;;;;1981:41;;;;;;3309:58;;3355:66:2;3309:58:0;;;3343:79:2;3438:12;;;3431:28;;;3244:7:0;;3475:12:2;;3309:58:0;;;;;;;;;;;;3282:99;;;;;;3263:118;;3189:199;;;;1972:51;2140:6;;1954:69;;-1:-1:-1;;;;;;2140:6:0;2103:33;1954:69;2126:9;2103:13;:33::i;:::-;-1:-1:-1;;;;;2103:43:0;;;1821:332;-1:-1:-1;;;;1821:332:0:o;2159:299::-;2264:7;2288;2297:9;2308;2321:19;2336:3;2321:14;:19::i;:::-;2287:53;;;;;;2350:57;;;;;;;;;;;;;;-1:-1:-1;;;2350:57:0;;;2379:27;2389:7;2398:1;2401;2404;2379:27;;;;;;;;;;;;;;;;;3725:25:2;;;3798:4;3786:17;;;;3781:2;3766:18;;3759:45;3835:2;3820:18;;3813:34;3878:2;3863:18;;3856:34;3712:3;3697:19;;3498:398;2379:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2350:11;:57::i;:::-;2424:27;;;;;;;;;;;;3725:25:2;;;3798:4;3786:17;;3766:18;;;3759:45;;;;3820:18;;;3813:34;;;3863:18;;;3856:34;;;2424:27:0;;3697:19:2;;2424:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2424:27:0;;-1:-1:-1;;2424:27:0;;;2159:299;-1:-1:-1;;;;;;;2159:299:0:o;2583:533::-;2685:7;2706:9;2729;2771:3;:10;2785:2;2771:16;2763:25;;;;;;-1:-1:-1;;;2896:2:0;2887:12;;2881:19;2964:2;2955:12;;2949:19;3069:2;3060:12;;;3054:19;3051:1;3046:28;;2881:19;;2949;2583:533::o;6297:136:1:-;6358:71;6421:2;6425;6374:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6374:54:1;;;;;;;;;;;;;;-1:-1:-1;;;;;6374:54:1;-1:-1:-1;;;6374:54:1;;;6358:15;:71::i;:::-;6297:136;;:::o;175:288::-;263:14;;128:42;372:2;359:16;;239:21;;263:14;359:16;128:42;399:5;388:68;379:77;;334:126;;175:288;:::o;14:127:2:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:989;223:6;231;284:2;272:9;263:7;259:23;255:32;252:52;;;300:1;297;290:12;252:52;336:9;323:23;313:33;;397:2;386:9;382:18;369:32;420:18;461:2;453:6;450:14;447:34;;;477:1;474;467:12;447:34;515:6;504:9;500:22;490:32;;560:7;553:4;549:2;545:13;541:27;531:55;;582:1;579;572:12;531:55;618:2;605:16;640:2;636;633:10;630:36;;;646:18;;:::i;:::-;721:2;715:9;689:2;775:13;;-1:-1:-1;;771:22:2;;;795:2;767:31;763:40;751:53;;;819:18;;;839:22;;;816:46;813:72;;;865:18;;:::i;:::-;905:10;901:2;894:22;940:2;932:6;925:18;980:7;975:2;970;966;962:11;958:20;955:33;952:53;;;1001:1;998;991:12;952:53;1057:2;1052;1048;1044:11;1039:2;1031:6;1027:15;1014:46;1102:1;1097:2;1092;1084:6;1080:15;1076:24;1069:35;1123:6;1113:16;;;;;;;146:989;;;;;:::o;1546:180::-;1605:6;1658:2;1646:9;1637:7;1633:23;1629:32;1626:52;;;1674:1;1671;1664:12;1626:52;-1:-1:-1;1697:23:2;;1546:180;-1:-1:-1;1546:180:2:o;1731:362::-;1807:6;1815;1868:2;1856:9;1847:7;1843:23;1839:32;1836:52;;;1884:1;1881;1874:12;1836:52;1910:23;;-1:-1:-1;;;;;1962:31:2;;1952:42;;1942:70;;2008:1;2005;1998:12;1942:70;2031:5;2083:2;2068:18;;;;2055:32;;-1:-1:-1;;;1731:362:2:o;3901:679::-;4078:2;4067:9;4060:21;4041:4;4110:6;4104:13;4153:6;4148:2;4137:9;4133:18;4126:34;4178:1;4188:144;4202:6;4199:1;4196:13;4188:144;;;4315:4;4299:14;;;4295:25;;4289:32;4284:2;4265:17;;;4261:26;4254:68;4217:12;4188:144;;;4350:6;4347:1;4344:13;4341:91;;;4420:1;4415:2;4406:6;4395:9;4391:22;4387:31;4380:42;4341:91;-1:-1:-1;;;;;;4541:32:2;;;;4534:4;4519:20;;4512:62;-1:-1:-1;4493:2:2;4472:15;;;;-1:-1:-1;;4468:29:2;4453:45;4500:2;4449:54;;3901:679;-1:-1:-1;3901:679:2:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "claimTimeout()": {
        "notice": "if the timeout is reached without the recipient closing the channel, then the Ether is released back to the sender."
      },
      "close(uint256,bytes)": {
        "notice": "the recipient can close the channel at any time by presenting a signed amount from the sender. the recipient will be sent that amount, and the remainder will go back to the sender"
      },
      "extend(uint256)": {
        "notice": "the sender can extend the expiration at any time"
      }
    },
    "version": 1
  },
  "offset": [
    85,
    3390
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66D003AC GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x66D003AC EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x67E404CE EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x9714378C EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xF26C6AED EQ PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE1DA6C3 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x415FFBA7 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x4665096D EQ PUSH2 0xAC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH2 0x18F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH2 0xA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x19D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xF5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xF5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0x27F JUMP JUMPDEST PUSH2 0x8A PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x601 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1B9BDD081C9958DA5C1A595B9D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F6 DUP3 DUP3 PUSH2 0x2A9 JUMP JUMPDEST PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x696E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x270 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP2 GT PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT ADDRESS PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x340 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x359 DUP3 DUP6 PUSH2 0x36B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x37A DUP6 PUSH2 0x47E JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x416 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x41646472657373206973202573 PUSH1 0x98 SHL DUP2 MSTORE POP PUSH1 0x1 DUP9 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3E5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x407 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP9 SWAP1 MSTORE PUSH1 0xFF DUP6 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x469 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x0 BYTE SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x4F2 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4C3 SWAP3 SWAP2 SWAP1 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x319AF333 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x4F6 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 MLOAD PUSH11 0x636F6E736F6C652E6C6F67 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP1 DUP5 DUP4 DUP6 GAS STATICCALL POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x585 JUMPI PUSH2 0x585 PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x5AD JUMPI PUSH2 0x5AD PUSH2 0x517 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x667 JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x64A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x679 JUMPI PUSH1 0x0 PUSH1 0x60 DUP4 DUP7 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD PUSH1 0x60 ADD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xBD 0x26 PC 0xD3 PUSH30 0xD57436FE14872E041B1B5D28DE30A641ADEAB2EF9B195B33DA5064736F6C PUSH4 0x4300080E STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        85,
        3390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70"
    },
    "12": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x66D003AC"
    },
    "25": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x66D003AC"
    },
    "36": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5"
    },
    "40": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x67E404CE"
    },
    "47": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "51": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9714378C"
    },
    "58": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D"
    },
    "62": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF26C6AED"
    },
    "69": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D"
    },
    "73": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "REVERT",
      "path": "0"
    },
    "78": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "79": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "80": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE1DA6C3"
    },
    "85": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "EQ",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75"
    },
    "89": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x415FFBA7"
    },
    "96": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "EQ",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C"
    },
    "100": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4665096D"
    },
    "107": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC"
    },
    "111": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "115": {
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "116": {
      "first_revert": true,
      "fn": null,
      "offset": [
        85,
        3390
      ],
      "op": "REVERT",
      "path": "0"
    },
    "117": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "118": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "119": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "DUP1",
      "path": "0"
    },
    "120": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "121": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81"
    },
    "124": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "127": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "DUP1",
      "path": "0"
    },
    "128": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "REVERT",
      "path": "0"
    },
    "129": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "130": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "POP",
      "path": "0"
    },
    "131": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A"
    },
    "134": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F"
    },
    "137": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "jump": "i",
      "offset": [
        925,
        1119
      ],
      "op": "JUMP",
      "path": "0"
    },
    "138": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "139": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "STOP",
      "path": "0"
    },
    "140": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "141": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "142": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "DUP1",
      "path": "0"
    },
    "143": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "144": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98"
    },
    "147": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "148": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "150": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "DUP1",
      "path": "0"
    },
    "151": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "REVERT",
      "path": "0"
    },
    "152": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "153": {
      "op": "POP"
    },
    "154": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A"
    },
    "157": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA7"
    },
    "160": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "161": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "163": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52D"
    },
    "166": {
      "fn": "SimplePaymentChannel.close",
      "jump": "i",
      "offset": [
        1546,
        1815
      ],
      "op": "JUMP",
      "path": "0"
    },
    "167": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "168": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D"
    },
    "171": {
      "fn": "SimplePaymentChannel.close",
      "jump": "i",
      "offset": [
        1546,
        1815
      ],
      "op": "JUMP",
      "path": "0"
    },
    "172": {
      "offset": [
        266,
        291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "173": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "174": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "176": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "179": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "182": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "183": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "REVERT",
      "path": "0"
    },
    "184": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "185": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "POP",
      "path": "0"
    },
    "186": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2"
    },
    "189": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "191": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "192": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "DUP2",
      "path": "0"
    },
    "193": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "JUMP",
      "path": "0"
    },
    "194": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "195": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "197": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "198": {
      "op": "SWAP1"
    },
    "199": {
      "op": "DUP2"
    },
    "200": {
      "op": "MSTORE"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "203": {
      "op": "ADD"
    },
    "204": {
      "offset": [
        266,
        291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "205": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "207": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "208": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "209": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "210": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "SUB",
      "path": "0"
    },
    "211": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "212": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "RETURN",
      "path": "0"
    },
    "213": {
      "offset": [
        189,
        221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "214": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "215": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "DUP1",
      "path": "0"
    },
    "216": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "217": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE1"
    },
    "220": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "221": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "223": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "DUP1",
      "path": "0"
    },
    "224": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "REVERT",
      "path": "0"
    },
    "225": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "226": {
      "op": "POP"
    },
    "227": {
      "offset": [
        189,
        221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "229": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "230": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "233": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "240": {
      "op": "SHL"
    },
    "241": {
      "op": "SUB"
    },
    "242": {
      "offset": [
        189,
        221
      ],
      "op": "AND",
      "path": "0"
    },
    "243": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "244": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "245": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "246": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "248": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "255": {
      "op": "SHL"
    },
    "256": {
      "op": "SUB"
    },
    "257": {
      "op": "SWAP1"
    },
    "258": {
      "op": "SWAP2"
    },
    "259": {
      "op": "AND"
    },
    "260": {
      "op": "DUP2"
    },
    "261": {
      "op": "MSTORE"
    },
    "262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "264": {
      "op": "ADD"
    },
    "265": {
      "offset": [
        189,
        221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "268": {
      "op": "JUMP"
    },
    "269": {
      "offset": [
        121,
        150
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "270": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "271": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "DUP1",
      "path": "0"
    },
    "272": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "273": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x119"
    },
    "276": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "277": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "279": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "DUP1",
      "path": "0"
    },
    "280": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "REVERT",
      "path": "0"
    },
    "281": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "282": {
      "op": "POP"
    },
    "283": {
      "offset": [
        121,
        150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "285": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "286": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "289": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "296": {
      "op": "SHL"
    },
    "297": {
      "op": "SUB"
    },
    "298": {
      "offset": [
        121,
        150
      ],
      "op": "AND",
      "path": "0"
    },
    "299": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "DUP2",
      "path": "0"
    },
    "300": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "JUMP",
      "path": "0"
    },
    "301": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "302": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "303": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "DUP1",
      "path": "0"
    },
    "304": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "305": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139"
    },
    "308": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "309": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "311": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "DUP1",
      "path": "0"
    },
    "312": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "REVERT",
      "path": "0"
    },
    "313": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "314": {
      "op": "POP"
    },
    "315": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A"
    },
    "318": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x148"
    },
    "321": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "322": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "324": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E8"
    },
    "327": {
      "fn": "SimplePaymentChannel.extend",
      "jump": "i",
      "offset": [
        612,
        787
      ],
      "op": "JUMP",
      "path": "0"
    },
    "328": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "329": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F"
    },
    "332": {
      "fn": "SimplePaymentChannel.extend",
      "jump": "i",
      "offset": [
        612,
        787
      ],
      "op": "JUMP",
      "path": "0"
    },
    "333": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1125,
        1336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "334": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1125,
        1336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A"
    },
    "337": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1125,
        1336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15B"
    },
    "340": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1125,
        1336
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "341": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1125,
        1336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "343": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1125,
        1336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x601"
    },
    "346": {
      "fn": "SimplePaymentChannel.newChannel",
      "jump": "i",
      "offset": [
        1125,
        1336
      ],
      "op": "JUMP",
      "path": "0"
    },
    "347": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1125,
        1336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "348": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1234
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "350": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "DUP1",
      "path": "0"
    },
    "351": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "352": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1245,
        1255
      ],
      "op": "CALLER",
      "path": "0"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "359": {
      "op": "SHL"
    },
    "360": {
      "op": "SUB"
    },
    "361": {
      "op": "NOT"
    },
    "362": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "363": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "DUP3",
      "path": "0"
    },
    "364": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "AND",
      "path": "0"
    },
    "365": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "OR",
      "path": "0"
    },
    "366": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "367": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "368": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "371": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 1
    },
    "372": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "373": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "374": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "375": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "AND",
      "path": "0"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "382": {
      "op": "SHL"
    },
    "383": {
      "op": "SUB"
    },
    "384": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "385": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "386": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "387": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "AND",
      "path": "0"
    },
    "388": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "389": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "390": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "391": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "OR",
      "path": "0"
    },
    "392": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "393": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "394": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "395": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1305,
        1315
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x2"
    },
    "397": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1305,
        1329
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "398": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1125,
        1336
      ],
      "op": "JUMP",
      "path": "0"
    },
    "399": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "400": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        1105,
        1111
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x0"
    },
    "402": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        1105,
        1111
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "409": {
      "op": "SHL"
    },
    "410": {
      "op": "SUB"
    },
    "411": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        1105,
        1111
      ],
      "op": "AND",
      "path": "0"
    },
    "412": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        1092,
        1112
      ],
      "op": "SELFDESTRUCT",
      "path": "0"
    },
    "413": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1815
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "414": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1642,
        1651
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x1"
    },
    "416": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1642,
        1651
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "423": {
      "op": "SHL"
    },
    "424": {
      "op": "SUB"
    },
    "425": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1642,
        1651
      ],
      "op": "AND",
      "path": "0"
    },
    "426": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1628,
        1638
      ],
      "op": "CALLER",
      "path": "0"
    },
    "427": {
      "branch": 17,
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1628,
        1651
      ],
      "op": "EQ",
      "path": "0"
    },
    "428": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC"
    },
    "431": {
      "branch": 17,
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "432": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "434": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "435": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "439": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "441": {
      "op": "SHL"
    },
    "442": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "DUP2",
      "path": "0"
    },
    "443": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "446": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "448": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "DUP3",
      "path": "0"
    },
    "449": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "ADD",
      "path": "0"
    },
    "450": {
      "op": "MSTORE"
    },
    "451": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "453": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "455": {
      "op": "DUP3"
    },
    "456": {
      "op": "ADD"
    },
    "457": {
      "op": "MSTORE"
    },
    "458": {
      "op": "PUSH13",
      "value": "0x1B9BDD081C9958DA5C1A595B9D"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "474": {
      "op": "SHL"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "477": {
      "op": "DUP3"
    },
    "478": {
      "op": "ADD"
    },
    "479": {
      "op": "MSTORE"
    },
    "480": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "482": {
      "op": "ADD"
    },
    "483": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "484": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "486": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "487": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "DUP1",
      "path": "0"
    },
    "488": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "489": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "SUB",
      "path": "0"
    },
    "490": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "491": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "492": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1668
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "493": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1686,
        1721
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x1F6"
    },
    "496": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1703,
        1709
      ],
      "op": "DUP3",
      "path": "0"
    },
    "497": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1711,
        1720
      ],
      "op": "DUP3",
      "path": "0"
    },
    "498": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1686,
        1702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A9"
    },
    "501": {
      "fn": "SimplePaymentChannel.close",
      "jump": "i",
      "offset": [
        1686,
        1721
      ],
      "op": "JUMP",
      "path": "0"
    },
    "502": {
      "branch": 18,
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1686,
        1721
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "503": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1678,
        1742
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x236"
    },
    "506": {
      "branch": 18,
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1678,
        1742
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "507": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1678,
        1742
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "509": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1678,
        1742
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "510": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "514": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "516": {
      "op": "SHL"
    },
    "517": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1678,
        1742
      ],
      "op": "DUP2",
      "path": "0"
    },
    "518": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1678,
        1742
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "521": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1678,
        1742
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "523": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1678,
        1742
      ],
      "op": "DUP3",
      "path": "0"
    },
    "524": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1678,
        1742
      ],
      "op": "ADD",
      "path": "0"
    },
    "525": {
      "op": "MSTORE"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "530": {
      "op": "DUP3"
    },
    "531": {
      "op": "ADD"
    },
    "532": {
      "op": "MSTORE"
    },
    "533": {
      "op": "PUSH17",
      "value": "0x696E76616C6964207369676E6174757265"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "553": {
      "op": "SHL"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "556": {
      "op": "DUP3"
    },
    "557": {
      "op": "ADD"
    },
    "558": {
      "op": "MSTORE"
    },
    "559": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "561": {
      "op": "ADD"
    },
    "562": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1678,
        1742
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E3"
    },
    "565": {
      "op": "JUMP"
    },
    "566": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1678,
        1742
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "567": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1761
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x1"
    },
    "569": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1761
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "570": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "572": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "579": {
      "op": "SHL"
    },
    "580": {
      "op": "SUB"
    },
    "581": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1761
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "582": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1761
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "583": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1761
      ],
      "op": "AND",
      "path": "0"
    },
    "584": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1761
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "585": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "DUP4",
      "path": "0"
    },
    "586": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "587": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "590": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "MUL",
      "path": "0"
    },
    "591": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "592": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1771,
        1777
      ],
      "op": "DUP5",
      "path": "0"
    },
    "593": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1771,
        1777
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "594": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "596": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "DUP2",
      "path": "0"
    },
    "597": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1761
      ],
      "op": "DUP2",
      "path": "0"
    },
    "598": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "DUP2",
      "path": "0"
    },
    "599": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1771,
        1777
      ],
      "op": "DUP6",
      "path": "0"
    },
    "600": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1761
      ],
      "op": "DUP9",
      "path": "0"
    },
    "601": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "DUP9",
      "path": "0"
    },
    "602": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "CALL",
      "path": "0"
    },
    "603": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "604": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "POP",
      "path": "0"
    },
    "605": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "POP",
      "path": "0"
    },
    "606": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "POP",
      "path": "0"
    },
    "607": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "POP",
      "path": "0"
    },
    "608": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "609": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "DUP1",
      "path": "0"
    },
    "610": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "611": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x270"
    },
    "614": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "615": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "616": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "618": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "DUP1",
      "path": "0"
    },
    "619": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "620": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "621": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "623": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "REVERT",
      "path": "0"
    },
    "624": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1752,
        1778
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "625": {
      "op": "POP"
    },
    "626": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1801,
        1807
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x0"
    },
    "628": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1801,
        1807
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "635": {
      "op": "SHL"
    },
    "636": {
      "op": "SUB"
    },
    "637": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1801,
        1807
      ],
      "op": "AND",
      "path": "0"
    },
    "638": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1788,
        1808
      ],
      "op": "SELFDESTRUCT",
      "path": "0"
    },
    "639": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "640": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        692,
        698
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x0"
    },
    "642": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        692,
        698
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "649": {
      "op": "SHL"
    },
    "650": {
      "op": "SUB"
    },
    "651": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        692,
        698
      ],
      "op": "AND",
      "path": "0"
    },
    "652": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        678,
        688
      ],
      "op": "CALLER",
      "path": "0"
    },
    "653": {
      "branch": 19,
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        678,
        698
      ],
      "op": "EQ",
      "path": "0"
    },
    "654": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        670,
        699
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x296"
    },
    "657": {
      "branch": 19,
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        670,
        699
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "658": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        670,
        699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "660": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        670,
        699
      ],
      "op": "DUP1",
      "path": "0"
    },
    "661": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        670,
        699
      ],
      "op": "REVERT",
      "path": "0"
    },
    "662": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        670,
        699
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "663": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        733,
        743
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x2"
    },
    "665": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        733,
        743
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "666": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        717,
        730
      ],
      "op": "DUP2",
      "path": "0"
    },
    "667": {
      "branch": 20,
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        717,
        743
      ],
      "op": "GT",
      "path": "0"
    },
    "668": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        709,
        744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A4"
    },
    "671": {
      "branch": 20,
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        709,
        744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "672": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        709,
        744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "674": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        709,
        744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "675": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        709,
        744
      ],
      "op": "REVERT",
      "path": "0"
    },
    "676": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        709,
        744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "677": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        754,
        764
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x2"
    },
    "679": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        754,
        780
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "680": {
      "fn": "SimplePaymentChannel.extend",
      "jump": "o",
      "offset": [
        612,
        787
      ],
      "op": "JUMP",
      "path": "0"
    },
    "681": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1821,
        2153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "682": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "684": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "685": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "698": {
      "op": "NOT"
    },
    "699": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2008,
        2012
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "702": {
      "op": "SHL"
    },
    "703": {
      "op": "AND"
    },
    "704": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "706": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "DUP3",
      "path": "0"
    },
    "707": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "ADD",
      "path": "0"
    },
    "708": {
      "op": "MSTORE"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "711": {
      "op": "DUP2"
    },
    "712": {
      "op": "ADD"
    },
    "713": {
      "op": "DUP4"
    },
    "714": {
      "op": "SWAP1"
    },
    "715": {
      "op": "MSTORE"
    },
    "716": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1934,
        1938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "718": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1934,
        1938
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "719": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1934,
        1938
      ],
      "op": "DUP2",
      "path": "0"
    },
    "720": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1934,
        1938
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "721": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1972,
        2023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x340"
    },
    "724": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1972,
        2023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "727": {
      "op": "ADD"
    },
    "728": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "730": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "731": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "733": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "734": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "DUP4",
      "path": "0"
    },
    "735": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "SUB",
      "path": "0"
    },
    "736": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "SUB",
      "path": "0"
    },
    "737": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "738": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "739": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "740": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "742": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1991,
        2021
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "743": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1981,
        2022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "744": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1981,
        2022
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "745": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1981,
        2022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "746": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1981,
        2022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "748": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1981,
        2022
      ],
      "op": "ADD",
      "path": "0"
    },
    "749": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1981,
        2022
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "750": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x40"
    },
    "752": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "753": {
      "op": "PUSH32",
      "value": "0x19457468657265756D205369676E6564204D6573736167653A0A333200000000"
    },
    "786": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "788": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "DUP3",
      "path": "0"
    },
    "789": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "ADD",
      "path": "0"
    },
    "790": {
      "op": "MSTORE"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "793": {
      "op": "DUP2"
    },
    "794": {
      "op": "ADD"
    },
    "795": {
      "op": "DUP3"
    },
    "796": {
      "op": "SWAP1"
    },
    "797": {
      "op": "MSTORE"
    },
    "798": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3244,
        3251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "800": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3244,
        3251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "803": {
      "op": "ADD"
    },
    "804": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "806": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "807": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "809": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "DUP2",
      "path": "0"
    },
    "810": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "DUP4",
      "path": "0"
    },
    "811": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "SUB",
      "path": "0"
    },
    "812": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "SUB",
      "path": "0"
    },
    "813": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "DUP2",
      "path": "0"
    },
    "814": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "815": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "816": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "818": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3309,
        3367
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "819": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3282,
        3381
      ],
      "op": "DUP1",
      "path": "0"
    },
    "820": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3282,
        3381
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "821": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3282,
        3381
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "822": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3282,
        3381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "824": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3282,
        3381
      ],
      "op": "ADD",
      "path": "0"
    },
    "825": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3282,
        3381
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "826": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3263,
        3381
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "827": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3263,
        3381
      ],
      "op": "POP",
      "path": "0"
    },
    "828": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3189,
        3388
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "829": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3189,
        3388
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "830": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3189,
        3388
      ],
      "op": "POP",
      "path": "0"
    },
    "831": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3189,
        3388
      ],
      "op": "JUMP",
      "path": "0"
    },
    "832": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1972,
        2023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "833": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2140,
        2146
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x0"
    },
    "835": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2140,
        2146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "836": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1954,
        2023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "837": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1954,
        2023
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "838": {
      "op": "POP"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "845": {
      "op": "SHL"
    },
    "846": {
      "op": "SUB"
    },
    "847": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2140,
        2146
      ],
      "op": "AND",
      "path": "0"
    },
    "848": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2103,
        2136
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x359"
    },
    "851": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1954,
        2023
      ],
      "op": "DUP3",
      "path": "0"
    },
    "852": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2126,
        2135
      ],
      "op": "DUP6",
      "path": "0"
    },
    "853": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2103,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36B"
    },
    "856": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "jump": "i",
      "offset": [
        2103,
        2136
      ],
      "op": "JUMP",
      "path": "0"
    },
    "857": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2103,
        2136
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "864": {
      "op": "SHL"
    },
    "865": {
      "op": "SUB"
    },
    "866": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2103,
        2146
      ],
      "op": "AND",
      "path": "0"
    },
    "867": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2103,
        2146
      ],
      "op": "EQ",
      "path": "0"
    },
    "868": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2103,
        2146
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "869": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1821,
        2153
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "870": {
      "op": "POP"
    },
    "871": {
      "op": "POP"
    },
    "872": {
      "op": "POP"
    },
    "873": {
      "op": "POP"
    },
    "874": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "jump": "o",
      "offset": [
        1821,
        2153
      ],
      "op": "JUMP",
      "path": "0"
    },
    "875": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2159,
        2458
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "876": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2264,
        2271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "878": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2288,
        2295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "879": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2297,
        2306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "881": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2308,
        2317
      ],
      "op": "DUP1",
      "path": "0"
    },
    "882": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2321,
        2340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37A"
    },
    "885": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2336,
        2339
      ],
      "op": "DUP6",
      "path": "0"
    },
    "886": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2321,
        2335
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47E"
    },
    "889": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "jump": "i",
      "offset": [
        2321,
        2340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "890": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2321,
        2340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "891": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2287,
        2340
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "892": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2287,
        2340
      ],
      "op": "POP",
      "path": "0"
    },
    "893": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2287,
        2340
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "894": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2287,
        2340
      ],
      "op": "POP",
      "path": "0"
    },
    "895": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2287,
        2340
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "896": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2287,
        2340
      ],
      "op": "POP",
      "path": "0"
    },
    "897": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x416"
    },
    "900": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "902": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "903": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "DUP1",
      "path": "0"
    },
    "904": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "906": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "ADD",
      "path": "0"
    },
    "907": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "909": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "910": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "DUP1",
      "path": "0"
    },
    "911": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "913": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "DUP2",
      "path": "0"
    },
    "914": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "915": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "917": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "ADD",
      "path": "0"
    },
    "918": {
      "op": "PUSH13",
      "value": "0x41646472657373206973202573"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "934": {
      "op": "SHL"
    },
    "935": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "DUP2",
      "path": "0"
    },
    "936": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "937": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "POP",
      "path": "0"
    },
    "938": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "940": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2389,
        2396
      ],
      "op": "DUP9",
      "path": "0"
    },
    "941": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2398,
        2399
      ],
      "op": "DUP7",
      "path": "0"
    },
    "942": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2401,
        2402
      ],
      "op": "DUP7",
      "path": "0"
    },
    "943": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2404,
        2405
      ],
      "op": "DUP7",
      "path": "0"
    },
    "944": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "946": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "947": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "949": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "DUP2",
      "path": "0"
    },
    "950": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "951": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "953": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "ADD",
      "path": "0"
    },
    "954": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "956": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "957": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "959": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "960": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E5"
    },
    "963": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "964": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "965": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "966": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "967": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "968": {
      "op": "SWAP4"
    },
    "969": {
      "op": "DUP5"
    },
    "970": {
      "op": "MSTORE"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "973": {
      "op": "SWAP3"
    },
    "974": {
      "op": "SWAP1"
    },
    "975": {
      "op": "SWAP3"
    },
    "976": {
      "op": "AND"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "979": {
      "op": "DUP5"
    },
    "980": {
      "op": "ADD"
    },
    "981": {
      "op": "MSTORE"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "984": {
      "op": "DUP4"
    },
    "985": {
      "op": "ADD"
    },
    "986": {
      "op": "MSTORE"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "989": {
      "op": "DUP3"
    },
    "990": {
      "op": "ADD"
    },
    "991": {
      "op": "MSTORE"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "994": {
      "op": "ADD"
    },
    "995": {
      "op": "SWAP1"
    },
    "996": {
      "op": "JUMP"
    },
    "997": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "998": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1000": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1002": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1003": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1005": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1006": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "SUB",
      "path": "0"
    },
    "1007": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1008": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1009": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1010": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "SUB",
      "path": "0"
    },
    "1011": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1012": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1013": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "GAS",
      "path": "0"
    },
    "1014": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1015": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1016": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1017": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1018": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x407"
    },
    "1021": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1022": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1023": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1025": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1026": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1027": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1028": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1030": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1031": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1032": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "POP",
      "path": "0"
    },
    "1033": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "POP",
      "path": "0"
    },
    "1034": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "POP",
      "path": "0"
    },
    "1035": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1037": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1039": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1040": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "SUB",
      "path": "0"
    },
    "1041": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2379,
        2406
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1042": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2361
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AD"
    },
    "1045": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "jump": "i",
      "offset": [
        2350,
        2407
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1046": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2350,
        2407
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1047": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x40"
    },
    "1049": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1050": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1051": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1053": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1054": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1055": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1057": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1058": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "ADD",
      "path": "0"
    },
    "1059": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1060": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1061": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1062": {
      "op": "DUP9"
    },
    "1063": {
      "op": "SWAP1"
    },
    "1064": {
      "op": "MSTORE"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1067": {
      "op": "DUP6"
    },
    "1068": {
      "op": "AND"
    },
    "1069": {
      "op": "SWAP2"
    },
    "1070": {
      "op": "DUP2"
    },
    "1071": {
      "op": "ADD"
    },
    "1072": {
      "op": "SWAP2"
    },
    "1073": {
      "op": "SWAP1"
    },
    "1074": {
      "op": "SWAP2"
    },
    "1075": {
      "op": "MSTORE"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1078": {
      "op": "DUP2"
    },
    "1079": {
      "op": "ADD"
    },
    "1080": {
      "op": "DUP4"
    },
    "1081": {
      "op": "SWAP1"
    },
    "1082": {
      "op": "MSTORE"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1085": {
      "op": "DUP2"
    },
    "1086": {
      "op": "ADD"
    },
    "1087": {
      "op": "DUP3"
    },
    "1088": {
      "op": "SWAP1"
    },
    "1089": {
      "op": "MSTORE"
    },
    "1090": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1092": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1095": {
      "op": "ADD"
    },
    "1096": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1098": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1100": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1101": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1103": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1104": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "SUB",
      "path": "0"
    },
    "1105": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1106": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1107": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1108": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "SUB",
      "path": "0"
    },
    "1109": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1110": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1111": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "GAS",
      "path": "0"
    },
    "1112": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1113": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1114": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1115": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1116": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x469"
    },
    "1119": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1120": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1121": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1123": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1124": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1125": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1126": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1128": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1129": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1130": {
      "op": "POP"
    },
    "1131": {
      "op": "POP"
    },
    "1132": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1134": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1137": {
      "op": "NOT"
    },
    "1138": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "ADD",
      "path": "0"
    },
    "1139": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1140": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2424,
        2451
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "1141": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2159,
        2458
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "1142": {
      "op": "POP"
    },
    "1143": {
      "op": "POP"
    },
    "1144": {
      "op": "POP"
    },
    "1145": {
      "op": "POP"
    },
    "1146": {
      "op": "POP"
    },
    "1147": {
      "op": "POP"
    },
    "1148": {
      "op": "POP"
    },
    "1149": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "jump": "o",
      "offset": [
        2159,
        2458
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1150": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2583,
        3116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1151": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2685,
        2692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1153": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2706,
        2715
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1154": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2729,
        2738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1156": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2771,
        2774
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 15
    },
    "1157": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2771,
        2781
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1158": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2785,
        2787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x41"
    },
    "1160": {
      "branch": 21,
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2771,
        2787
      ],
      "op": "EQ",
      "path": "0"
    },
    "1161": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2763,
        2788
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x491"
    },
    "1164": {
      "branch": 21,
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2763,
        2788
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1165": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2763,
        2788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1167": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2763,
        2788
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1168": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2763,
        2788
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1169": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2763,
        2788
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1170": {
      "op": "POP"
    },
    "1171": {
      "op": "POP"
    },
    "1172": {
      "op": "POP"
    },
    "1173": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2896,
        2898
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1175": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2887,
        2899
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1176": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2887,
        2899
      ],
      "op": "ADD",
      "path": "0"
    },
    "1177": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2881,
        2900
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1178": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2964,
        2966
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1180": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2955,
        2967
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1181": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2955,
        2967
      ],
      "op": "ADD",
      "path": "0"
    },
    "1182": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2949,
        2968
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1183": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3069,
        3071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1185": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3060,
        3072
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1186": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3060,
        3072
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1187": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3060,
        3072
      ],
      "op": "ADD",
      "path": "0"
    },
    "1188": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3054,
        3073
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1189": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3051,
        3052
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1191": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3046,
        3074
      ],
      "op": "BYTE",
      "path": "0"
    },
    "1192": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3046,
        3074
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1193": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2881,
        2900
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1194": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2881,
        2900
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1195": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2949,
        2968
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1196": {
      "fn": "SimplePaymentChannel.splitSignature",
      "jump": "o",
      "offset": [
        2583,
        3116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1197": {
      "fn": "console.log",
      "offset": [
        6297,
        6433
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1198": {
      "fn": "console.log",
      "offset": [
        6358,
        6429
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 16,
      "value": "0x4F2"
    },
    "1201": {
      "fn": "console.log",
      "offset": [
        6421,
        6423
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1202": {
      "fn": "console.log",
      "offset": [
        6425,
        6427
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1203": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1205": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1206": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1208": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "ADD",
      "path": "1"
    },
    "1209": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4C3"
    },
    "1212": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1213": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1214": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1215": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x639"
    },
    "1218": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        6374,
        6428
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1219": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1220": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1222": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1223": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1226": {
      "op": "NOT"
    },
    "1227": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1228": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1229": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SUB",
      "path": "1"
    },
    "1230": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "ADD",
      "path": "1"
    },
    "1231": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1232": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1233": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1234": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1235": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1236": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1238": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1239": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "ADD",
      "path": "1"
    },
    "1240": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1241": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1248": {
      "op": "SHL"
    },
    "1249": {
      "op": "SUB"
    },
    "1250": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "AND",
      "path": "1"
    },
    "1251": {
      "op": "PUSH4",
      "value": "0x319AF333"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1258": {
      "op": "SHL"
    },
    "1259": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "OR",
      "path": "1"
    },
    "1260": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1261": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1262": {
      "fn": "console.log",
      "offset": [
        6358,
        6373
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4F6"
    },
    "1265": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        6358,
        6429
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1266": {
      "fn": "console.log",
      "offset": [
        6358,
        6429
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1267": {
      "fn": "console.log",
      "offset": [
        6297,
        6433
      ],
      "op": "POP",
      "path": "1"
    },
    "1268": {
      "fn": "console.log",
      "offset": [
        6297,
        6433
      ],
      "op": "POP",
      "path": "1"
    },
    "1269": {
      "fn": "console.log",
      "jump": "o",
      "offset": [
        6297,
        6433
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1270": {
      "fn": "console._sendLogPayload",
      "offset": [
        175,
        463
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1271": {
      "fn": "console._sendLogPayload",
      "offset": [
        263,
        277
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1272": {
      "fn": "console._sendLogPayload",
      "offset": [
        263,
        277
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1273": {
      "offset": [
        128,
        170
      ],
      "op": "PUSH11",
      "path": "1",
      "value": "0x636F6E736F6C652E6C6F67"
    },
    "1285": {
      "fn": "console._sendLogPayload",
      "offset": [
        372,
        374
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1287": {
      "fn": "console._sendLogPayload",
      "offset": [
        359,
        375
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1288": {
      "fn": "console._sendLogPayload",
      "offset": [
        359,
        375
      ],
      "op": "ADD",
      "path": "1"
    },
    "1289": {
      "fn": "console._sendLogPayload",
      "offset": [
        239,
        260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1291": {
      "fn": "console._sendLogPayload",
      "offset": [
        239,
        260
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1292": {
      "fn": "console._sendLogPayload",
      "offset": [
        263,
        277
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1293": {
      "fn": "console._sendLogPayload",
      "offset": [
        359,
        375
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1294": {
      "offset": [
        128,
        170
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1295": {
      "fn": "console._sendLogPayload",
      "offset": [
        399,
        404
      ],
      "op": "GAS",
      "path": "1"
    },
    "1296": {
      "fn": "console._sendLogPayload",
      "offset": [
        388,
        456
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1297": {
      "fn": "console._sendLogPayload",
      "offset": [
        379,
        456
      ],
      "op": "POP",
      "path": "1"
    },
    "1298": {
      "fn": "console._sendLogPayload",
      "offset": [
        379,
        456
      ],
      "op": "POP",
      "path": "1"
    },
    "1299": {
      "fn": "console._sendLogPayload",
      "offset": [
        334,
        460
      ],
      "op": "POP",
      "path": "1"
    },
    "1300": {
      "fn": "console._sendLogPayload",
      "offset": [
        334,
        460
      ],
      "op": "POP",
      "path": "1"
    },
    "1301": {
      "fn": "console._sendLogPayload",
      "offset": [
        175,
        463
      ],
      "op": "POP",
      "path": "1"
    },
    "1302": {
      "fn": "console._sendLogPayload",
      "jump": "o",
      "offset": [
        175,
        463
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1303": {
      "op": "JUMPDEST"
    },
    "1304": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1311": {
      "op": "SHL"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1314": {
      "op": "MSTORE"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1319": {
      "op": "MSTORE"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1324": {
      "op": "REVERT"
    },
    "1325": {
      "op": "JUMPDEST"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1328": {
      "op": "DUP1"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1331": {
      "op": "DUP4"
    },
    "1332": {
      "op": "DUP6"
    },
    "1333": {
      "op": "SUB"
    },
    "1334": {
      "op": "SLT"
    },
    "1335": {
      "op": "ISZERO"
    },
    "1336": {
      "op": "PUSH2",
      "value": "0x540"
    },
    "1339": {
      "op": "JUMPI"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1342": {
      "op": "DUP1"
    },
    "1343": {
      "op": "REVERT"
    },
    "1344": {
      "op": "JUMPDEST"
    },
    "1345": {
      "op": "DUP3"
    },
    "1346": {
      "op": "CALLDATALOAD"
    },
    "1347": {
      "op": "SWAP2"
    },
    "1348": {
      "op": "POP"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1351": {
      "op": "DUP4"
    },
    "1352": {
      "op": "ADD"
    },
    "1353": {
      "op": "CALLDATALOAD"
    },
    "1354": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1363": {
      "op": "DUP1"
    },
    "1364": {
      "op": "DUP3"
    },
    "1365": {
      "op": "GT"
    },
    "1366": {
      "op": "ISZERO"
    },
    "1367": {
      "op": "PUSH2",
      "value": "0x55F"
    },
    "1370": {
      "op": "JUMPI"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1373": {
      "op": "DUP1"
    },
    "1374": {
      "op": "REVERT"
    },
    "1375": {
      "op": "JUMPDEST"
    },
    "1376": {
      "op": "DUP2"
    },
    "1377": {
      "op": "DUP6"
    },
    "1378": {
      "op": "ADD"
    },
    "1379": {
      "op": "SWAP2"
    },
    "1380": {
      "op": "POP"
    },
    "1381": {
      "op": "DUP6"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1384": {
      "op": "DUP4"
    },
    "1385": {
      "op": "ADD"
    },
    "1386": {
      "op": "SLT"
    },
    "1387": {
      "op": "PUSH2",
      "value": "0x573"
    },
    "1390": {
      "op": "JUMPI"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1393": {
      "op": "DUP1"
    },
    "1394": {
      "op": "REVERT"
    },
    "1395": {
      "op": "JUMPDEST"
    },
    "1396": {
      "op": "DUP2"
    },
    "1397": {
      "op": "CALLDATALOAD"
    },
    "1398": {
      "op": "DUP2"
    },
    "1399": {
      "op": "DUP2"
    },
    "1400": {
      "op": "GT"
    },
    "1401": {
      "op": "ISZERO"
    },
    "1402": {
      "op": "PUSH2",
      "value": "0x585"
    },
    "1405": {
      "op": "JUMPI"
    },
    "1406": {
      "op": "PUSH2",
      "value": "0x585"
    },
    "1409": {
      "op": "PUSH2",
      "value": "0x517"
    },
    "1412": {
      "jump": "i",
      "op": "JUMP"
    },
    "1413": {
      "op": "JUMPDEST"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1416": {
      "op": "MLOAD"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1419": {
      "op": "DUP3"
    },
    "1420": {
      "op": "ADD"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1423": {
      "op": "NOT"
    },
    "1424": {
      "op": "SWAP1"
    },
    "1425": {
      "op": "DUP2"
    },
    "1426": {
      "op": "AND"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1429": {
      "op": "ADD"
    },
    "1430": {
      "op": "AND"
    },
    "1431": {
      "op": "DUP2"
    },
    "1432": {
      "op": "ADD"
    },
    "1433": {
      "op": "SWAP1"
    },
    "1434": {
      "op": "DUP4"
    },
    "1435": {
      "op": "DUP3"
    },
    "1436": {
      "op": "GT"
    },
    "1437": {
      "op": "DUP2"
    },
    "1438": {
      "op": "DUP4"
    },
    "1439": {
      "op": "LT"
    },
    "1440": {
      "op": "OR"
    },
    "1441": {
      "op": "ISZERO"
    },
    "1442": {
      "op": "PUSH2",
      "value": "0x5AD"
    },
    "1445": {
      "op": "JUMPI"
    },
    "1446": {
      "op": "PUSH2",
      "value": "0x5AD"
    },
    "1449": {
      "op": "PUSH2",
      "value": "0x517"
    },
    "1452": {
      "jump": "i",
      "op": "JUMP"
    },
    "1453": {
      "op": "JUMPDEST"
    },
    "1454": {
      "op": "DUP2"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1457": {
      "op": "MSTORE"
    },
    "1458": {
      "op": "DUP3"
    },
    "1459": {
      "op": "DUP2"
    },
    "1460": {
      "op": "MSTORE"
    },
    "1461": {
      "op": "DUP9"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1464": {
      "op": "DUP5"
    },
    "1465": {
      "op": "DUP8"
    },
    "1466": {
      "op": "ADD"
    },
    "1467": {
      "op": "ADD"
    },
    "1468": {
      "op": "GT"
    },
    "1469": {
      "op": "ISZERO"
    },
    "1470": {
      "op": "PUSH2",
      "value": "0x5C6"
    },
    "1473": {
      "op": "JUMPI"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1476": {
      "op": "DUP1"
    },
    "1477": {
      "op": "REVERT"
    },
    "1478": {
      "op": "JUMPDEST"
    },
    "1479": {
      "op": "DUP3"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1482": {
      "op": "DUP7"
    },
    "1483": {
      "op": "ADD"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1486": {
      "op": "DUP4"
    },
    "1487": {
      "op": "ADD"
    },
    "1488": {
      "op": "CALLDATACOPY"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1493": {
      "op": "DUP5"
    },
    "1494": {
      "op": "DUP4"
    },
    "1495": {
      "op": "ADD"
    },
    "1496": {
      "op": "ADD"
    },
    "1497": {
      "op": "MSTORE"
    },
    "1498": {
      "op": "DUP1"
    },
    "1499": {
      "op": "SWAP6"
    },
    "1500": {
      "op": "POP"
    },
    "1501": {
      "op": "POP"
    },
    "1502": {
      "op": "POP"
    },
    "1503": {
      "op": "POP"
    },
    "1504": {
      "op": "POP"
    },
    "1505": {
      "op": "POP"
    },
    "1506": {
      "op": "SWAP3"
    },
    "1507": {
      "op": "POP"
    },
    "1508": {
      "op": "SWAP3"
    },
    "1509": {
      "op": "SWAP1"
    },
    "1510": {
      "op": "POP"
    },
    "1511": {
      "jump": "o",
      "op": "JUMP"
    },
    "1512": {
      "op": "JUMPDEST"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1517": {
      "op": "DUP3"
    },
    "1518": {
      "op": "DUP5"
    },
    "1519": {
      "op": "SUB"
    },
    "1520": {
      "op": "SLT"
    },
    "1521": {
      "op": "ISZERO"
    },
    "1522": {
      "op": "PUSH2",
      "value": "0x5FA"
    },
    "1525": {
      "op": "JUMPI"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1528": {
      "op": "DUP1"
    },
    "1529": {
      "op": "REVERT"
    },
    "1530": {
      "op": "JUMPDEST"
    },
    "1531": {
      "op": "POP"
    },
    "1532": {
      "op": "CALLDATALOAD"
    },
    "1533": {
      "op": "SWAP2"
    },
    "1534": {
      "op": "SWAP1"
    },
    "1535": {
      "op": "POP"
    },
    "1536": {
      "jump": "o",
      "op": "JUMP"
    },
    "1537": {
      "op": "JUMPDEST"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1540": {
      "op": "DUP1"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1543": {
      "op": "DUP4"
    },
    "1544": {
      "op": "DUP6"
    },
    "1545": {
      "op": "SUB"
    },
    "1546": {
      "op": "SLT"
    },
    "1547": {
      "op": "ISZERO"
    },
    "1548": {
      "op": "PUSH2",
      "value": "0x614"
    },
    "1551": {
      "op": "JUMPI"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1554": {
      "op": "DUP1"
    },
    "1555": {
      "op": "REVERT"
    },
    "1556": {
      "op": "JUMPDEST"
    },
    "1557": {
      "op": "DUP3"
    },
    "1558": {
      "op": "CALLDATALOAD"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1565": {
      "op": "SHL"
    },
    "1566": {
      "op": "SUB"
    },
    "1567": {
      "op": "DUP2"
    },
    "1568": {
      "op": "AND"
    },
    "1569": {
      "op": "DUP2"
    },
    "1570": {
      "op": "EQ"
    },
    "1571": {
      "op": "PUSH2",
      "value": "0x62B"
    },
    "1574": {
      "op": "JUMPI"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1577": {
      "op": "DUP1"
    },
    "1578": {
      "op": "REVERT"
    },
    "1579": {
      "op": "JUMPDEST"
    },
    "1580": {
      "op": "SWAP5"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1583": {
      "op": "SWAP4"
    },
    "1584": {
      "op": "SWAP1"
    },
    "1585": {
      "op": "SWAP4"
    },
    "1586": {
      "op": "ADD"
    },
    "1587": {
      "op": "CALLDATALOAD"
    },
    "1588": {
      "op": "SWAP4"
    },
    "1589": {
      "op": "POP"
    },
    "1590": {
      "op": "POP"
    },
    "1591": {
      "op": "POP"
    },
    "1592": {
      "jump": "o",
      "op": "JUMP"
    },
    "1593": {
      "op": "JUMPDEST"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1596": {
      "op": "DUP2"
    },
    "1597": {
      "op": "MSTORE"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1600": {
      "op": "DUP4"
    },
    "1601": {
      "op": "MLOAD"
    },
    "1602": {
      "op": "DUP1"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1605": {
      "op": "DUP5"
    },
    "1606": {
      "op": "ADD"
    },
    "1607": {
      "op": "MSTORE"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1610": {
      "op": "JUMPDEST"
    },
    "1611": {
      "op": "DUP2"
    },
    "1612": {
      "op": "DUP2"
    },
    "1613": {
      "op": "LT"
    },
    "1614": {
      "op": "ISZERO"
    },
    "1615": {
      "op": "PUSH2",
      "value": "0x667"
    },
    "1618": {
      "op": "JUMPI"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1621": {
      "op": "DUP2"
    },
    "1622": {
      "op": "DUP8"
    },
    "1623": {
      "op": "ADD"
    },
    "1624": {
      "op": "DUP2"
    },
    "1625": {
      "op": "ADD"
    },
    "1626": {
      "op": "MLOAD"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1629": {
      "op": "DUP7"
    },
    "1630": {
      "op": "DUP5"
    },
    "1631": {
      "op": "ADD"
    },
    "1632": {
      "op": "ADD"
    },
    "1633": {
      "op": "MSTORE"
    },
    "1634": {
      "op": "ADD"
    },
    "1635": {
      "op": "PUSH2",
      "value": "0x64A"
    },
    "1638": {
      "op": "JUMP"
    },
    "1639": {
      "op": "JUMPDEST"
    },
    "1640": {
      "op": "DUP2"
    },
    "1641": {
      "op": "DUP2"
    },
    "1642": {
      "op": "GT"
    },
    "1643": {
      "op": "ISZERO"
    },
    "1644": {
      "op": "PUSH2",
      "value": "0x679"
    },
    "1647": {
      "op": "JUMPI"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1652": {
      "op": "DUP4"
    },
    "1653": {
      "op": "DUP7"
    },
    "1654": {
      "op": "ADD"
    },
    "1655": {
      "op": "ADD"
    },
    "1656": {
      "op": "MSTORE"
    },
    "1657": {
      "op": "JUMPDEST"
    },
    "1658": {
      "op": "POP"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1665": {
      "op": "SHL"
    },
    "1666": {
      "op": "SUB"
    },
    "1667": {
      "op": "SWAP4"
    },
    "1668": {
      "op": "SWAP1"
    },
    "1669": {
      "op": "SWAP4"
    },
    "1670": {
      "op": "AND"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1673": {
      "op": "DUP4"
    },
    "1674": {
      "op": "ADD"
    },
    "1675": {
      "op": "MSTORE"
    },
    "1676": {
      "op": "POP"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1679": {
      "op": "SWAP2"
    },
    "1680": {
      "op": "SWAP1"
    },
    "1681": {
      "op": "SWAP2"
    },
    "1682": {
      "op": "ADD"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1685": {
      "op": "NOT"
    },
    "1686": {
      "op": "AND"
    },
    "1687": {
      "op": "ADD"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1690": {
      "op": "ADD"
    },
    "1691": {
      "op": "SWAP2"
    },
    "1692": {
      "op": "SWAP1"
    },
    "1693": {
      "op": "POP"
    },
    "1694": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "df50c2f1f0c3887278207658be206767cc46df29",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.14;\nimport \"./console.sol\";\n\ncontract SimplePaymentChannel {\n    address payable public sender; // The account sending payments.\n    address payable public recipient; // The account receiving the payments.\n    uint256 public expiration; // Timeout in case the recipient never closes.\n\n    constructor(address payable recipientAddress, uint256 duration) payable {\n        sender = payable(msg.sender);\n        recipient = recipientAddress;\n        expiration = block.timestamp + duration;\n    }\n\n    /// the sender can extend the expiration at any time\n    function extend(uint256 newExpiration) external {\n        require(msg.sender == sender);\n        require(newExpiration > expiration);\n        expiration = newExpiration;\n    }\n\n    /// if the timeout is reached without the recipient closing the channel,\n    /// then the Ether is released back to the sender.\n    function claimTimeout() external {\n        // commented the require in order to be able to call the function\n        //require(block.timestamp >= expiration);\n        selfdestruct(sender);\n    }\n\n    function newChannel(address payable _recipientAddress, uint256 _expiration) external payable {\n        sender = payable(msg.sender);\n        recipient = _recipientAddress;\n        expiration = _expiration;\n    }\n\n    /// the recipient can close the channel at any time by presenting a\n    /// signed amount from the sender. the recipient will be sent that amount,\n    /// and the remainder will go back to the sender\n    function close(uint256 amount, bytes memory signature) external {\n        require(msg.sender == recipient,\"not recipient\");\n        require(isValidSignature(amount, signature),\"invalid signature\");\n        recipient.transfer(amount);\n        selfdestruct(sender);\n    }\n\n    function isValidSignature(uint256 amount, bytes memory signature)\n        internal\n        view\n        returns (bool)\n    {\n        bytes32 message = prefixed(keccak256(abi.encodePacked(this, amount)));\n        // check that the signature is from the payment sender\n        return recoverSigner(message, signature) == sender;\n    }\n\n    function recoverSigner(bytes32 message, bytes memory sig)\n        internal\n        view\n        returns (address)\n    {\n        (uint8 v, bytes32 r, bytes32 s) = splitSignature(sig);\n        console.log(\"Address is %s\", ecrecover(message, v, r, s));\n        return ecrecover(message, v, r, s);\n    }\n\n    /// All functions below this are just taken from the chapter\n    /// 'creating and verifying signatures' chapter.\n\n    function splitSignature(bytes memory sig)\n        internal\n        pure\n        returns (\n            uint8 v,\n            bytes32 r,\n            bytes32 s\n        )\n    {\n        require(sig.length == 65);\n        assembly {\n            // first 32 bytes, after the length prefix\n            r := mload(add(sig, 32))\n            // second 32 bytes\n            s := mload(add(sig, 64))\n            // final byte (first byte of the next 32 bytes)\n            v := byte(0, mload(add(sig, 96)))\n        }\n        return (v, r, s);\n    }\n\n\n    /// builds a prefixed hash to mimic the behavior of eth_sign.\n    function prefixed(bytes32 hash) internal pure returns (bytes32) {\n        return\n            keccak256(\n                abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash)\n            );\n    }\n}\n",
  "sourceMap": "85:3305:0:-:0;;;345:204;;;;;;;;;;;;;;;;;;:::i;:::-;427:6;:28;;444:10;-1:-1:-1;;;;;;427:28:0;;;;;;;-1:-1:-1;465:28:0;;;;;-1:-1:-1;;;;;465:28:0;;;;;516:26;534:8;516:15;:26;:::i;:::-;503:10;:39;-1:-1:-1;85:3305:0;;-1:-1:-1;85:3305:0;14:359:2;101:6;109;162:2;150:9;141:7;137:23;133:32;130:52;;;178:1;175;168:12;130:52;204:16;;-1:-1:-1;;;;;249:31:2;;239:42;;229:70;;295:1;292;285:12;229:70;363:2;348:18;;;;342:25;318:5;;342:25;;-1:-1:-1;;;14:359:2:o;378:225::-;418:3;449:1;445:6;442:1;439:13;436:136;;;494:10;489:3;485:20;482:1;475:31;529:4;526:1;519:15;557:4;554:1;547:15;436:136;-1:-1:-1;588:9:2;;378:225::o;:::-;85:3305:0;;;;;;",
  "sourcePath": "contracts/SimplePaymentChannel.sol",
  "type": "contract"
}