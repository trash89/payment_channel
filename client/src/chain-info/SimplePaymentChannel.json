{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "recipientAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "claimTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expiration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newExpiration",
          "type": "uint256"
        }
      ],
      "name": "extend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_recipientAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expiration",
          "type": "uint256"
        }
      ],
      "name": "newChannel",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recipient",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sender",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/SimplePaymentChannel.sol",
    "1": "contracts/console.sol"
  },
  "ast": {
    "absolutePath": "contracts/SimplePaymentChannel.sol",
    "exportedSymbols": {
      "SimplePaymentChannel": [
        326
      ],
      "console": [
        8390
      ]
    },
    "id": 327,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:0"
      },
      {
        "absolutePath": "contracts/console.sol",
        "file": "./console.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 327,
        "sourceUnit": 8391,
        "src": "60:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SimplePaymentChannel",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 326,
        "linearizedBaseContracts": [
          326
        ],
        "name": "SimplePaymentChannel",
        "nameLocation": "94:20:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "67e404ce",
            "id": 4,
            "mutability": "mutable",
            "name": "sender",
            "nameLocation": "144:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 326,
            "src": "121:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "121:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "66d003ac",
            "id": 6,
            "mutability": "mutable",
            "name": "recipient",
            "nameLocation": "212:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 326,
            "src": "189:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "189:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4665096d",
            "id": 8,
            "mutability": "mutable",
            "name": "expiration",
            "nameLocation": "281:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 326,
            "src": "266:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "266:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "417:132:0",
              "statements": [
                {
                  "expression": {
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "427:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 18,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "444:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "444:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 17,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "436:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 16,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "436:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "436:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "427:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "427:28:0"
                },
                {
                  "expression": {
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "465:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24,
                      "name": "recipientAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "477:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "465:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "465:28:0"
                },
                {
                  "expression": {
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27,
                      "name": "expiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "503:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 31,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 28,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "516:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "516:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 30,
                        "name": "duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "534:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "516:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "503:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "503:39:0"
                }
              ]
            },
            "id": 35,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "recipientAddress",
                  "nameLocation": "373:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "357:32:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "399:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "391:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "356:52:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "417:0:0"
            },
            "scope": 326,
            "src": "345:204:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "660:127:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 42,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "678:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "678:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 44,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "692:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "678:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 41,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "670:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "670:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "670:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49,
                          "name": "newExpiration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "717:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 50,
                          "name": "expiration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "733:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "717:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "709:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "709:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "709:35:0"
                },
                {
                  "expression": {
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54,
                      "name": "expiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "754:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 55,
                      "name": "newExpiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "767:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "754:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "754:26:0"
                }
              ]
            },
            "documentation": {
              "id": 36,
              "nodeType": "StructuredDocumentation",
              "src": "555:52:0",
              "text": "the sender can extend the expiration at any time"
            },
            "functionSelector": "9714378c",
            "id": 59,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "extend",
            "nameLocation": "621:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "newExpiration",
                  "nameLocation": "636:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "628:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "627:23:0"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:0:0"
            },
            "scope": 326,
            "src": "612:175:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "958:161:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "1105:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 63,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "1092:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:20:0"
                }
              ]
            },
            "documentation": {
              "id": 60,
              "nodeType": "StructuredDocumentation",
              "src": "793:127:0",
              "text": "if the timeout is reached without the recipient closing the channel,\n then the Ether is released back to the sender."
            },
            "functionSelector": "0e1da6c3",
            "id": 68,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimTimeout",
            "nameLocation": "934:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:2:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:0:0"
            },
            "scope": 326,
            "src": "925:194:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1218:118:0",
              "statements": [
                {
                  "expression": {
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1228:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 78,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1245:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1245:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1237:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 76,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1237:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1228:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:28:0"
                },
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1266:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 84,
                      "name": "_recipientAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "1278:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1266:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1266:29:0"
                },
                {
                  "expression": {
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87,
                      "name": "expiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1305:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 88,
                      "name": "_expiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1318:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1305:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1305:24:0"
                }
              ]
            },
            "functionSelector": "f26c6aed",
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newChannel",
            "nameLocation": "1134:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "_recipientAddress",
                  "nameLocation": "1161:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1145:33:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "_expiration",
                  "nameLocation": "1188:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1180:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1144:56:0"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1218:0:0"
            },
            "scope": 326,
            "src": "1125:211:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "1610:295:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7369676e61747572653d2c20616d6f756e743d2564",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1632:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c3a4ce9d6c547ebf134cb796c4dbe81523baece6c621acbb7eb358c3364ffd5",
                          "typeString": "literal_string \"signature=, amount=%d\""
                        },
                        "value": "signature=, amount=%d"
                      },
                      {
                        "id": 104,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "1656:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0c3a4ce9d6c547ebf134cb796c4dbe81523baece6c621acbb7eb358c3364ffd5",
                          "typeString": "literal_string \"signature=, amount=%d\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8390,
                        "src": "1620:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8390_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1034,
                      "src": "1620:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1620:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:43:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "1690:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 107,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8390,
                        "src": "1673:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8390_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "logBytes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 445,
                      "src": "1673:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) view"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1673:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1673:27:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 114,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1718:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1718:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 116,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1732:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1718:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420726563697069656e74",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1742:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_356fd710a5db01dff16365e70ff8a60dd0e2c8863b6f3320c261af1260e57be6",
                          "typeString": "literal_string \"not recipient\""
                        },
                        "value": "not recipient"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_356fd710a5db01dff16365e70ff8a60dd0e2c8863b6f3320c261af1260e57be6",
                          "typeString": "literal_string \"not recipient\""
                        }
                      ],
                      "id": 113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1710:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1710:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1710:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 123,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "1793:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 124,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "1801:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 122,
                          "name": "isValidSignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 227,
                          "src": "1776:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256,bytes memory) view returns (bool)"
                          }
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1776:35:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207369676e6174757265",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1812:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a",
                          "typeString": "literal_string \"invalid signature\""
                        },
                        "value": "invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a",
                          "typeString": "literal_string \"invalid signature\""
                        }
                      ],
                      "id": 121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1768:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1768:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1768:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 132,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "1861:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 129,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1842:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1842:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1842:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1842:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 136,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "1891:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 135,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "1878:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1878:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1878:20:0"
                }
              ]
            },
            "documentation": {
              "id": 93,
              "nodeType": "StructuredDocumentation",
              "src": "1342:199:0",
              "text": "the recipient can close the channel at any time by presenting a\n signed amount from the sender. the recipient will be sent that amount,\n and the remainder will go back to the sender"
            },
            "functionSelector": "415ffba7",
            "id": 140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "close",
            "nameLocation": "1555:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1569:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1561:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "1590:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1577:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1577:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1560:40:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1610:0:0"
            },
            "scope": 326,
            "src": "1546:359:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "2034:531:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416464726573733d25732c616d6f756e743d2564",
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2056:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03ef43eb88257c19521f84481a19aadbc4337f1b8098a98e33fe02202990077b",
                          "typeString": "literal_string \"Address=%s,amount=%d\""
                        },
                        "value": "Address=%s,amount=%d"
                      },
                      {
                        "arguments": [
                          {
                            "id": 155,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2087:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimplePaymentChannel_$326",
                              "typeString": "contract SimplePaymentChannel"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimplePaymentChannel_$326",
                              "typeString": "contract SimplePaymentChannel"
                            }
                          ],
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2079:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 153,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2079:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2079:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 157,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "2093:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_03ef43eb88257c19521f84481a19aadbc4337f1b8098a98e33fe02202990077b",
                          "typeString": "literal_string \"Address=%s,amount=%d\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 149,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8390,
                        "src": "2044:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8390_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1801,
                      "src": "2044:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,address,uint256) view"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2044:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2044:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d657373616765203d",
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2122:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2b26813892e35b14b69bb73fd0c4b8bf1f0123c16701fdf7100a58dff74fc75",
                          "typeString": "literal_string \"message =\""
                        },
                        "value": "message ="
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c2b26813892e35b14b69bb73fd0c4b8bf1f0123c16701fdf7100a58dff74fc75",
                          "typeString": "literal_string \"message =\""
                        }
                      ],
                      "expression": {
                        "id": 160,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8390,
                        "src": "2110:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8390_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 921,
                      "src": "2110:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2110:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2110:24:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 174,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2198:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SimplePaymentChannel_$326",
                                      "typeString": "contract SimplePaymentChannel"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SimplePaymentChannel_$326",
                                      "typeString": "contract SimplePaymentChannel"
                                    }
                                  ],
                                  "id": 173,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2190:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 172,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2190:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2190:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 176,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 142,
                                "src": "2205:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 170,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2173:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2173:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2173:39:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 169,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2163:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2163:50:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 166,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8390,
                        "src": "2144:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8390_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "logBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 893,
                      "src": "2144:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2144:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "2144:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d6573736167652070726566697865643d",
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2236:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_622f14627f0d0647b46edba6da5cd8a83cd4a3cd4086c01ae97ff65302321500",
                          "typeString": "literal_string \"message prefixed=\""
                        },
                        "value": "message prefixed="
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_622f14627f0d0647b46edba6da5cd8a83cd4a3cd4086c01ae97ff65302321500",
                          "typeString": "literal_string \"message prefixed=\""
                        }
                      ],
                      "expression": {
                        "id": 181,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8390,
                        "src": "2224:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8390_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 921,
                      "src": "2224:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2224:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2224:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 196,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "2329:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_SimplePaymentChannel_$326",
                                          "typeString": "contract SimplePaymentChannel"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_SimplePaymentChannel_$326",
                                          "typeString": "contract SimplePaymentChannel"
                                        }
                                      ],
                                      "id": 195,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2321:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 194,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2321:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 197,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2321:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 198,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 142,
                                    "src": "2336:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 192,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2304:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 193,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "2304:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2304:39:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 191,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "2294:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2294:50:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 190,
                          "name": "prefixed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 325,
                          "src": "2285:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                            "typeString": "function (bytes32) view returns (bytes32)"
                          }
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2285:60:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 187,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8390,
                        "src": "2266:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8390_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "logBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 893,
                      "src": "2266:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2266:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "2266:80:0"
                },
                {
                  "assignments": [
                    205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 205,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "2365:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 226,
                      "src": "2357:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 204,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2357:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 218,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 212,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2419:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SimplePaymentChannel_$326",
                                      "typeString": "contract SimplePaymentChannel"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SimplePaymentChannel_$326",
                                      "typeString": "contract SimplePaymentChannel"
                                    }
                                  ],
                                  "id": 211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2411:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 210,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2411:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2411:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 214,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 142,
                                "src": "2426:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 208,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2394:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2394:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2394:39:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 207,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2384:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2384:50:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 206,
                      "name": "prefixed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 325,
                      "src": "2375:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2375:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2357:78:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 220,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "2529:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 221,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
                          "src": "2538:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 219,
                        "name": "recoverSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "2515:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (bytes32,bytes memory) view returns (address)"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2515:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 223,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "2552:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2515:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 148,
                  "id": 225,
                  "nodeType": "Return",
                  "src": "2508:50:0"
                }
              ]
            },
            "id": 227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "1920:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1945:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "1937:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1937:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "1966:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "1953:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1936:40:0"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "2024:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2024:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2023:6:0"
            },
            "scope": 326,
            "src": "1911:654:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "2689:181:0",
              "statements": [
                {
                  "assignments": [
                    237,
                    239,
                    241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 237,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "2706:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "2700:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 236,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2700:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 239,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "2717:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "2709:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 238,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2709:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 241,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "2728:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "2720:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 240,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2720:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 245,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 243,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "2748:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 242,
                      "name": "splitSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "2733:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (uint8,bytes32,bytes32)"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2733:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(uint8,bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2699:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "41646472657373206973202573",
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2774:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f11baed5134d330728365fb98131d1d1baca8a60595e830d89a288591447a357",
                          "typeString": "literal_string \"Address is %s\""
                        },
                        "value": "Address is %s"
                      },
                      {
                        "arguments": [
                          {
                            "id": 251,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "2801:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 252,
                            "name": "v",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "2810:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 253,
                            "name": "r",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "2813:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 254,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "2816:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 250,
                          "name": "ecrecover",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -6,
                          "src": "2791:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                          }
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2791:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f11baed5134d330728365fb98131d1d1baca8a60595e830d89a288591447a357",
                          "typeString": "literal_string \"Address is %s\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 246,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8390,
                        "src": "2762:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8390_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1085,
                      "src": "2762:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2762:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "2762:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 259,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "2846:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 260,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "2855:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 261,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "2858:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 262,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "2861:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 258,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "2836:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2836:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 235,
                  "id": 264,
                  "nodeType": "Return",
                  "src": "2829:34:0"
                }
              ]
            },
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recoverSigner",
            "nameLocation": "2580:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "2602:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "2594:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2594:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "2624:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "2611:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2611:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2593:35:0"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "2676:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2676:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2675:9:0"
            },
            "scope": 326,
            "src": "2571:299:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 291,
              "nodeType": "Block",
              "src": "3165:363:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 279,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "3183:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3183:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3197:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "3183:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 278,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3175:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3175:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "3175:25:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3219:277:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3288:24:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "sig",
                                  "nodeType": "YulIdentifier",
                                  "src": "3303:3:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3308:2:0",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3299:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3299:12:0"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3293:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3293:19:0"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "3288:1:0"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3356:24:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "sig",
                                  "nodeType": "YulIdentifier",
                                  "src": "3371:3:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3376:2:0",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3367:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3367:12:0"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3361:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3361:19:0"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "3356:1:0"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3453:33:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3463:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "sig",
                                      "nodeType": "YulIdentifier",
                                      "src": "3476:3:0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3481:2:0",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3472:3:0"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3472:12:0"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3466:5:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3466:19:0"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "3458:4:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3458:28:0"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "3453:1:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 274,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3288:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 276,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3356:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 269,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3303:3:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 269,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3371:3:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 269,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3476:3:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 272,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3453:1:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 285,
                  "nodeType": "InlineAssembly",
                  "src": "3210:286:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 286,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "3513:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 287,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "3516:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 288,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 276,
                        "src": "3519:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 289,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3512:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(uint8,bytes32,bytes32)"
                    }
                  },
                  "functionReturnParameters": 277,
                  "id": 290,
                  "nodeType": "Return",
                  "src": "3505:16:0"
                }
              ]
            },
            "documentation": {
              "id": 267,
              "nodeType": "StructuredDocumentation",
              "src": "2876:114:0",
              "text": "All functions below this are just taken from the chapter\n 'creating and verifying signatures' chapter."
            },
            "id": 292,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "splitSignature",
            "nameLocation": "3004:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "3032:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 292,
                  "src": "3019:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3019:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3018:18:0"
            },
            "returnParameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "3103:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 292,
                  "src": "3097:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3097:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 274,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "3126:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 292,
                  "src": "3118:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3118:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 276,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "3149:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 292,
                  "src": "3141:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3141:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3083:77:0"
            },
            "scope": 326,
            "src": "2995:533:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 324,
              "nodeType": "Block",
              "src": "3665:263:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "707265666978656420656e636f6465503d",
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3687:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5447c5e1c884d31dd9b6b6c9e621529975d3cb8775a03cee29b2b28ef541afbb",
                          "typeString": "literal_string \"prefixed encodeP=\""
                        },
                        "value": "prefixed encodeP="
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5447c5e1c884d31dd9b6b6c9e621529975d3cb8775a03cee29b2b28ef541afbb",
                          "typeString": "literal_string \"prefixed encodeP=\""
                        }
                      ],
                      "expression": {
                        "id": 300,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8390,
                        "src": "3675:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8390_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 921,
                      "src": "3675:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3675:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "3675:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                            "id": 311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3751:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n32"
                          },
                          {
                            "id": 312,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 295,
                            "src": "3787:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 309,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3734:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3734:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3734:58:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 306,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8390,
                        "src": "3717:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8390_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "logBytes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 445,
                      "src": "3717:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) view"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3717:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "3717:76:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                            "id": 319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3866:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n32"
                          },
                          {
                            "id": 320,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 295,
                            "src": "3902:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 317,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3849:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3849:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3849:58:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 316,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3822:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3822:99:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 299,
                  "id": 323,
                  "nodeType": "Return",
                  "src": "3803:118:0"
                }
              ]
            },
            "documentation": {
              "id": 293,
              "nodeType": "StructuredDocumentation",
              "src": "3535:61:0",
              "text": "builds a prefixed hash to mimic the behavior of eth_sign."
            },
            "id": 325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prefixed",
            "nameLocation": "3610:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 295,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3627:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "3619:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 294,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3619:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3618:14:0"
            },
            "returnParameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "3656:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3656:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3655:9:0"
            },
            "scope": 326,
            "src": "3601:327:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 327,
        "src": "85:3845:0",
        "usedErrors": []
      }
    ],
    "src": "36:3895:0"
  },
  "bytecode": "6080604052604051610b2f380380610b2f83398101604081905261002291610060565b60008054336001600160a01b031991821617909155600180549091166001600160a01b038416179055610055814261009a565b600255506100c09050565b6000806040838503121561007357600080fd5b82516001600160a01b038116811461008a57600080fd5b6020939093015192949293505050565b600082198211156100bb57634e487b7160e01b600052601160045260246000fd5b500190565b610a60806100cf6000396000f3fe6080604052600436106100705760003560e01c806366d003ac1161004e57806366d003ac146100d557806367e404ce1461010d5780639714378c1461012d578063f26c6aed1461014d57600080fd5b80630e1da6c314610075578063415ffba71461008c5780634665096d146100ac575b600080fd5b34801561008157600080fd5b5061008a61018f565b005b34801561009857600080fd5b5061008a6100a736600461081b565b61019d565b3480156100b857600080fd5b506100c260025481565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506001546100f5906001600160a01b031681565b6040516001600160a01b0390911681526020016100cc565b34801561011957600080fd5b506000546100f5906001600160a01b031681565b34801561013957600080fd5b5061008a6101483660046108d6565b6102bf565b61008a61015b3660046108ef565b60008054336001600160a01b031991821617909155600180549091166001600160a01b039390931692909217909155600255565b6000546001600160a01b0316ff5b6101d4604051806040016040528060158152602001741cda59db985d1d5c994f4b08185b5bdd5b9d0f4959605a1b815250836102e9565b6101dd81610332565b6001546001600160a01b0316331461022c5760405162461bcd60e51b815260206004820152600d60248201526c1b9bdd081c9958da5c1a595b9d609a1b60448201526064015b60405180910390fd5b6102368282610378565b6102765760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b6044820152606401610223565b6001546040516001600160a01b039091169083156108fc029084906000818181858888f193505050501580156102b0573d6000803e3d6000fd5b506000546001600160a01b0316ff5b6000546001600160a01b031633146102d657600080fd5b60025481116102e457600080fd5b600255565b61032e82826040516024016102ff929190610974565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526104ba565b5050565b610375816040516024016103469190610996565b60408051601f198184030181529190526020810180516001600160e01b03166305f3bfab60e11b1790526104ba565b50565b60006103b1604051806040016040528060148152602001731059191c995cdccf495ccb185b5bdd5b9d0f495960621b81525030856104db565b6103db604051806040016040528060098152602001686d657373616765203d60b81b815250610527565b61040c30846040516020016103f19291906109b0565b6040516020818303038152906040528051906020012061056a565b61043e604051806040016040528060118152602001706d6573736167652070726566697865643d60781b815250610527565b61047761047230856040516020016104579291906109b0565b604051602081830303815290604052805190602001206105af565b61056a565b600061048f30856040516020016104579291906109b0565b6000549091506001600160a01b03166104a8828561067e565b6001600160a01b031614949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6105228383836040516024016104f3939291906109d2565b60408051601f198184030181529190526020810180516001600160e01b03166307c8121760e01b1790526104ba565b505050565b6103758160405160240161053b9190610996565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526104ba565b6103758160405160240161058091815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166327b7cf8560e01b1790526104ba565b60006105e360405180604001604052806011815260200170707265666978656420656e636f6465503d60781b815250610527565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c810183905261062e90605c01604051602081830303815290604052610332565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101839052605c01604051602081830303815290604052805190602001209050919050565b60008060008061068d85610791565b9250925092506107296040518060400160405280600d81526020016c4164647265737320697320257360981b815250600188868686604051600081526020016040526040516106f8949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa15801561071a573d6000803e3d6000fd5b505050602060405103516107c0565b60408051600081526020810180835288905260ff851691810191909152606081018390526080810182905260019060a0016020604051602081039080840390855afa15801561077c573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600080600083516041146107a457600080fd5b5050506020810151604082015160609092015160001a92909190565b61032e82826040516024016107d6929190610a00565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526104ba565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561082e57600080fd5b82359150602083013567ffffffffffffffff8082111561084d57600080fd5b818501915085601f83011261086157600080fd5b81358181111561087357610873610805565b604051601f8201601f19908116603f0116810190838211818310171561089b5761089b610805565b816040528281528860208487010111156108b457600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156108e857600080fd5b5035919050565b6000806040838503121561090257600080fd5b82356001600160a01b038116811461091957600080fd5b946020939093013593505050565b6000815180845260005b8181101561094d57602081850181015186830182015201610931565b8181111561095f576000602083870101525b50601f01601f19169290920160200192915050565b6040815260006109876040830185610927565b90508260208301529392505050565b6020815260006109a96020830184610927565b9392505050565b60609290921b6bffffffffffffffffffffffff19168252601482015260340190565b6060815260006109e56060830186610927565b6001600160a01b039490941660208301525060400152919050565b604081526000610a136040830185610927565b905060018060a01b0383166020830152939250505056fea26469706673582212203eefe287d1ad2cef0b15f7c28cfeb41f4cdfd8961019546f41e3fc4dca9b8cb864736f6c634300080e0033",
  "bytecodeSha1": "e76364ad1455275d61e674aef575ef17878f8cd6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "SimplePaymentChannel",
  "coverageMap": {
    "branches": {
      "0": {
        "SimplePaymentChannel.close": {
          "31": [
            1718,
            1741,
            true
          ],
          "32": [
            1776,
            1811,
            true
          ]
        },
        "SimplePaymentChannel.extend": {
          "33": [
            678,
            698,
            true
          ],
          "34": [
            717,
            743,
            true
          ]
        },
        "SimplePaymentChannel.splitSignature": {
          "35": [
            3183,
            3199,
            true
          ]
        }
      },
      "1": {}
    },
    "statements": {
      "0": {
        "SimplePaymentChannel.claimTimeout": {
          "3": [
            1092,
            1112
          ]
        },
        "SimplePaymentChannel.close": {
          "4": [
            1620,
            1663
          ],
          "5": [
            1673,
            1700
          ],
          "6": [
            1710,
            1758
          ],
          "7": [
            1768,
            1832
          ],
          "8": [
            1842,
            1868
          ],
          "9": [
            1878,
            1898
          ]
        },
        "SimplePaymentChannel.extend": {
          "10": [
            670,
            699
          ],
          "11": [
            709,
            744
          ],
          "12": [
            754,
            780
          ]
        },
        "SimplePaymentChannel.isValidSignature": {
          "15": [
            2044,
            2100
          ],
          "16": [
            2110,
            2134
          ],
          "17": [
            2144,
            2214
          ],
          "18": [
            2224,
            2256
          ],
          "19": [
            2266,
            2346
          ],
          "20": [
            2508,
            2558
          ]
        },
        "SimplePaymentChannel.newChannel": {
          "0": [
            1228,
            1256
          ],
          "1": [
            1266,
            1295
          ],
          "2": [
            1305,
            1329
          ]
        },
        "SimplePaymentChannel.prefixed": {
          "24": [
            3675,
            3707
          ],
          "25": [
            3717,
            3793
          ],
          "26": [
            3803,
            3921
          ]
        },
        "SimplePaymentChannel.recoverSigner": {
          "27": [
            2762,
            2819
          ],
          "28": [
            2829,
            2863
          ]
        },
        "SimplePaymentChannel.splitSignature": {
          "29": [
            3175,
            3200
          ]
        }
      },
      "1": {
        "console.log": {
          "13": [
            5945,
            6013
          ],
          "21": [
            11823,
            11903
          ],
          "22": [
            5102,
            5161
          ],
          "30": [
            6358,
            6429
          ]
        },
        "console.logBytes": {
          "14": [
            1167,
            1225
          ]
        },
        "console.logBytes32": {
          "23": [
            4882,
            4942
          ]
        }
      }
    }
  },
  "dependencies": [
    "console"
  ],
  "deployedBytecode": "6080604052600436106100705760003560e01c806366d003ac1161004e57806366d003ac146100d557806367e404ce1461010d5780639714378c1461012d578063f26c6aed1461014d57600080fd5b80630e1da6c314610075578063415ffba71461008c5780634665096d146100ac575b600080fd5b34801561008157600080fd5b5061008a61018f565b005b34801561009857600080fd5b5061008a6100a736600461081b565b61019d565b3480156100b857600080fd5b506100c260025481565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506001546100f5906001600160a01b031681565b6040516001600160a01b0390911681526020016100cc565b34801561011957600080fd5b506000546100f5906001600160a01b031681565b34801561013957600080fd5b5061008a6101483660046108d6565b6102bf565b61008a61015b3660046108ef565b60008054336001600160a01b031991821617909155600180549091166001600160a01b039390931692909217909155600255565b6000546001600160a01b0316ff5b6101d4604051806040016040528060158152602001741cda59db985d1d5c994f4b08185b5bdd5b9d0f4959605a1b815250836102e9565b6101dd81610332565b6001546001600160a01b0316331461022c5760405162461bcd60e51b815260206004820152600d60248201526c1b9bdd081c9958da5c1a595b9d609a1b60448201526064015b60405180910390fd5b6102368282610378565b6102765760405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b6044820152606401610223565b6001546040516001600160a01b039091169083156108fc029084906000818181858888f193505050501580156102b0573d6000803e3d6000fd5b506000546001600160a01b0316ff5b6000546001600160a01b031633146102d657600080fd5b60025481116102e457600080fd5b600255565b61032e82826040516024016102ff929190610974565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526104ba565b5050565b610375816040516024016103469190610996565b60408051601f198184030181529190526020810180516001600160e01b03166305f3bfab60e11b1790526104ba565b50565b60006103b1604051806040016040528060148152602001731059191c995cdccf495ccb185b5bdd5b9d0f495960621b81525030856104db565b6103db604051806040016040528060098152602001686d657373616765203d60b81b815250610527565b61040c30846040516020016103f19291906109b0565b6040516020818303038152906040528051906020012061056a565b61043e604051806040016040528060118152602001706d6573736167652070726566697865643d60781b815250610527565b61047761047230856040516020016104579291906109b0565b604051602081830303815290604052805190602001206105af565b61056a565b600061048f30856040516020016104579291906109b0565b6000549091506001600160a01b03166104a8828561067e565b6001600160a01b031614949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6105228383836040516024016104f3939291906109d2565b60408051601f198184030181529190526020810180516001600160e01b03166307c8121760e01b1790526104ba565b505050565b6103758160405160240161053b9190610996565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526104ba565b6103758160405160240161058091815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166327b7cf8560e01b1790526104ba565b60006105e360405180604001604052806011815260200170707265666978656420656e636f6465503d60781b815250610527565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c810183905261062e90605c01604051602081830303815290604052610332565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101839052605c01604051602081830303815290604052805190602001209050919050565b60008060008061068d85610791565b9250925092506107296040518060400160405280600d81526020016c4164647265737320697320257360981b815250600188868686604051600081526020016040526040516106f8949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa15801561071a573d6000803e3d6000fd5b505050602060405103516107c0565b60408051600081526020810180835288905260ff851691810191909152606081018390526080810182905260019060a0016020604051602081039080840390855afa15801561077c573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600080600083516041146107a457600080fd5b5050506020810151604082015160609092015160001a92909190565b61032e82826040516024016107d6929190610a00565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526104ba565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561082e57600080fd5b82359150602083013567ffffffffffffffff8082111561084d57600080fd5b818501915085601f83011261086157600080fd5b81358181111561087357610873610805565b604051601f8201601f19908116603f0116810190838211818310171561089b5761089b610805565b816040528281528860208487010111156108b457600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156108e857600080fd5b5035919050565b6000806040838503121561090257600080fd5b82356001600160a01b038116811461091957600080fd5b946020939093013593505050565b6000815180845260005b8181101561094d57602081850181015186830182015201610931565b8181111561095f576000602083870101525b50601f01601f19169290920160200192915050565b6040815260006109876040830185610927565b90508260208301529392505050565b6020815260006109a96020830184610927565b9392505050565b60609290921b6bffffffffffffffffffffffff19168252601482015260340190565b6060815260006109e56060830186610927565b6001600160a01b039490941660208301525060400152919050565b604081526000610a136040830185610927565b905060018060a01b0383166020830152939250505056fea26469706673582212203eefe287d1ad2cef0b15f7c28cfeb41f4cdfd8961019546f41e3fc4dca9b8cb864736f6c634300080e0033",
  "deployedSourceMap": "85:3845:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;925:194;;;;;;;;;;;;;:::i;:::-;;1546:359;;;;;;;;;;-1:-1:-1;1546:359:0;;;;;:::i;:::-;;:::i;266:25::-;;;;;;;;;;;;;;;;;;;1286::2;;;1274:2;1259:18;266:25:0;;;;;;;;189:32;;;;;;;;;;-1:-1:-1;189:32:0;;;;-1:-1:-1;;;;;189:32:0;;;;;;-1:-1:-1;;;;;1502:32:2;;;1484:51;;1472:2;1457:18;189:32:0;1322:219:2;121:29:0;;;;;;;;;;-1:-1:-1;121:29:0;;;;-1:-1:-1;;;;;121:29:0;;;612:175;;;;;;;;;;-1:-1:-1;612:175:0;;;;;:::i;:::-;;:::i;1125:211::-;;;;;;:::i;:::-;1228:6;:28;;1245:10;-1:-1:-1;;;;;;1228:28:0;;;;;;;-1:-1:-1;1266:29:0;;;;;-1:-1:-1;;;;;1266:29:0;;;;;;;;;;;1305:10;:24;1125:211;925:194;1105:6;;-1:-1:-1;;;;;1105:6:0;1092:20;1546:359;1620:43;;;;;;;;;;;;;;-1:-1:-1;;;1620:43:0;;;1656:6;1620:11;:43::i;:::-;1673:27;1690:9;1673:16;:27::i;:::-;1732:9;;-1:-1:-1;;;;;1732:9:0;1718:10;:23;1710:48;;;;-1:-1:-1;;;1710:48:0;;2300:2:2;1710:48:0;;;2282:21:2;2339:2;2319:18;;;2312:30;-1:-1:-1;;;2358:18:2;;;2351:43;2411:18;;1710:48:0;;;;;;;;;1776:35;1793:6;1801:9;1776:16;:35::i;:::-;1768:64;;;;-1:-1:-1;;;1768:64:0;;2642:2:2;1768:64:0;;;2624:21:2;2681:2;2661:18;;;2654:30;-1:-1:-1;;;2700:18:2;;;2693:47;2757:18;;1768:64:0;2440:341:2;1768:64:0;1842:9;;:26;;-1:-1:-1;;;;;1842:9:0;;;;:26;;;;;1861:6;;1842:9;:26;:9;:26;1861:6;1842:9;:26;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1891:6:0;;-1:-1:-1;;;;;1891:6:0;1878:20;612:175;692:6;;-1:-1:-1;;;;;692:6:0;678:10;:20;670:29;;;;;;733:10;;717:13;:26;709:35;;;;;;754:10;:26;612:175::o;5887:130:1:-;5945:68;6005:2;6009;5961:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5961:51:1;;;;;;;;;;;;;;-1:-1:-1;;;;;5961:51:1;-1:-1:-1;;;5961:51:1;;;5945:15;:68::i;:::-;5887:130;;:::o;1114:115::-;1167:58;1221:2;1183:41;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1183:41:1;;;;;;;;;;;;;;-1:-1:-1;;;;;1183:41:1;-1:-1:-1;;;1183:41:1;;;1167:15;:58::i;:::-;1114:115;:::o;1911:654:0:-;2024:4;2044:56;;;;;;;;;;;;;;-1:-1:-1;;;2044:56:0;;;2087:4;2093:6;2044:11;:56::i;:::-;2110:24;;;;;;;;;;;;;;-1:-1:-1;;;2110:24:0;;;:11;:24::i;:::-;2144:70;2198:4;2205:6;2173:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2163:50;;;;;;2144:18;:70::i;:::-;2224:32;;;;;;;;;;;;;;-1:-1:-1;;;2224:32:0;;;:11;:32::i;:::-;2266:80;2285:60;2329:4;2336:6;2304:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2294:50;;;;;;2285:8;:60::i;:::-;2266:18;:80::i;:::-;2357:15;2375:60;2419:4;2426:6;2394:39;;;;;;;;;:::i;2375:60::-;2552:6;;2357:78;;-1:-1:-1;;;;;;2552:6:0;2515:33;2357:78;2538:9;2515:13;:33::i;:::-;-1:-1:-1;;;;;2515:43:0;;;1911:654;-1:-1:-1;;;;1911:654:0:o;175:288:1:-;263:14;;128:42;372:2;359:16;;239:21;;263:14;359:16;128:42;399:5;388:68;379:77;;334:126;;175:288;:::o;11753:154::-;11823:80;11891:2;11895;11899;11839:63;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11839:63:1;;;;;;;;;;;;;;-1:-1:-1;;;;;11839:63:1;-1:-1:-1;;;11839:63:1;;;11823:15;:80::i;:::-;11753:154;;;:::o;5053:112::-;5102:59;5157:2;5118:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5118:42:1;;;;;;;;;;;;;;-1:-1:-1;;;;;5118:42:1;-1:-1:-1;;;5118:42:1;;;5102:15;:59::i;4832:114::-;4882:60;4938:2;4898:43;;;;;;1286:25:2;;1274:2;1259:18;;1140:177;4898:43:1;;;;-1:-1:-1;;4898:43:1;;;;;;;;;;;;;;-1:-1:-1;;;;;4898:43:1;-1:-1:-1;;;4898:43:1;;;4882:15;:60::i;3601:327:0:-;3656:7;3675:32;;;;;;;;;;;;;;-1:-1:-1;;;3675:32:0;;;:11;:32::i;:::-;3734:58;;5123:66:2;3734:58:0;;;5111:79:2;5206:12;;;5199:28;;;3717:76:0;;5243:12:2;;3734:58:0;;;;;;;;;;;;3717:16;:76::i;:::-;3849:58;;5123:66:2;3849:58:0;;;5111:79:2;5206:12;;;5199:28;;;5243:12;;3849:58:0;;;;;;;;;;;;3822:99;;;;;;3803:118;;3601:327;;;:::o;2571:299::-;2676:7;2700;2709:9;2720;2733:19;2748:3;2733:14;:19::i;:::-;2699:53;;;;;;2762:57;;;;;;;;;;;;;;-1:-1:-1;;;2762:57:0;;;2791:27;2801:7;2810:1;2813;2816;2791:27;;;;;;;;;;;;;;;;;5493:25:2;;;5566:4;5554:17;;;;5549:2;5534:18;;5527:45;5603:2;5588:18;;5581:34;5646:2;5631:18;;5624:34;5480:3;5465:19;;5266:398;2791:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2762:11;:57::i;:::-;2836:27;;;;;;;;;;;;5493:25:2;;;5566:4;5554:17;;5534:18;;;5527:45;;;;5588:18;;;5581:34;;;5631:18;;;5624:34;;;2836:27:0;;5465:19:2;;2836:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2836:27:0;;-1:-1:-1;;2836:27:0;;;2571:299;-1:-1:-1;;;;;;;2571:299:0:o;2995:533::-;3097:7;3118:9;3141;3183:3;:10;3197:2;3183:16;3175:25;;;;;;-1:-1:-1;;;3308:2:0;3299:12;;3293:19;3376:2;3367:12;;3361:19;3481:2;3472:12;;;3466:19;3463:1;3458:28;;3293:19;;3361;2995:533::o;6297:136:1:-;6358:71;6421:2;6425;6374:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6374:54:1;;;;;;;;;;;;;;-1:-1:-1;;;;;6374:54:1;-1:-1:-1;;;6374:54:1;;;6358:15;:71::i;14:127:2:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:989;223:6;231;284:2;272:9;263:7;259:23;255:32;252:52;;;300:1;297;290:12;252:52;336:9;323:23;313:33;;397:2;386:9;382:18;369:32;420:18;461:2;453:6;450:14;447:34;;;477:1;474;467:12;447:34;515:6;504:9;500:22;490:32;;560:7;553:4;549:2;545:13;541:27;531:55;;582:1;579;572:12;531:55;618:2;605:16;640:2;636;633:10;630:36;;;646:18;;:::i;:::-;721:2;715:9;689:2;775:13;;-1:-1:-1;;771:22:2;;;795:2;767:31;763:40;751:53;;;819:18;;;839:22;;;816:46;813:72;;;865:18;;:::i;:::-;905:10;901:2;894:22;940:2;932:6;925:18;980:7;975:2;970;966;962:11;958:20;955:33;952:53;;;1001:1;998;991:12;952:53;1057:2;1052;1048;1044:11;1039:2;1031:6;1027:15;1014:46;1102:1;1097:2;1092;1084:6;1080:15;1076:24;1069:35;1123:6;1113:16;;;;;;;146:989;;;;;:::o;1546:180::-;1605:6;1658:2;1646:9;1637:7;1633:23;1629:32;1626:52;;;1674:1;1671;1664:12;1626:52;-1:-1:-1;1697:23:2;;1546:180;-1:-1:-1;1546:180:2:o;1731:362::-;1807:6;1815;1868:2;1856:9;1847:7;1843:23;1839:32;1836:52;;;1884:1;1881;1874:12;1836:52;1910:23;;-1:-1:-1;;;;;1962:31:2;;1952:42;;1942:70;;2008:1;2005;1998:12;1942:70;2031:5;2083:2;2068:18;;;;2055:32;;-1:-1:-1;;;1731:362:2:o;2786:472::-;2828:3;2866:5;2860:12;2893:6;2888:3;2881:19;2918:1;2928:162;2942:6;2939:1;2936:13;2928:162;;;3004:4;3060:13;;;3056:22;;3050:29;3032:11;;;3028:20;;3021:59;2957:12;2928:162;;;3108:6;3105:1;3102:13;3099:87;;;3174:1;3167:4;3158:6;3153:3;3149:16;3145:27;3138:38;3099:87;-1:-1:-1;3240:2:2;3219:15;-1:-1:-1;;3215:29:2;3206:39;;;;3247:4;3202:50;;2786:472;-1:-1:-1;;2786:472:2:o;3263:291::-;3440:2;3429:9;3422:21;3403:4;3460:45;3501:2;3490:9;3486:18;3478:6;3460:45;:::i;:::-;3452:53;;3541:6;3536:2;3525:9;3521:18;3514:34;3263:291;;;;;:::o;3559:218::-;3706:2;3695:9;3688:21;3669:4;3726:45;3767:2;3756:9;3752:18;3744:6;3726:45;:::i;:::-;3718:53;3559:218;-1:-1:-1;;;3559:218:2:o;3782:294::-;3959:2;3955:15;;;;-1:-1:-1;;3951:53:2;3939:66;;4030:2;4021:12;;4014:28;4067:2;4058:12;;3782:294::o;4081:388::-;4286:2;4275:9;4268:21;4249:4;4306:45;4347:2;4336:9;4332:18;4324:6;4306:45;:::i;:::-;-1:-1:-1;;;;;4387:32:2;;;;4382:2;4367:18;;4360:60;-1:-1:-1;4451:2:2;4436:18;4429:34;4298:53;4081:388;-1:-1:-1;4081:388:2:o;5669:317::-;5846:2;5835:9;5828:21;5809:4;5866:45;5907:2;5896:9;5892:18;5884:6;5866:45;:::i;:::-;5858:53;;5976:1;5972;5967:3;5963:11;5959:19;5951:6;5947:32;5942:2;5931:9;5927:18;5920:60;5669:317;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "claimTimeout()": {
        "notice": "if the timeout is reached without the recipient closing the channel, then the Ether is released back to the sender."
      },
      "close(uint256,bytes)": {
        "notice": "the recipient can close the channel at any time by presenting a signed amount from the sender. the recipient will be sent that amount, and the remainder will go back to the sender"
      },
      "extend(uint256)": {
        "notice": "the sender can extend the expiration at any time"
      }
    },
    "version": 1
  },
  "offset": [
    85,
    3930
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66D003AC GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x66D003AC EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x67E404CE EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x9714378C EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xF26C6AED EQ PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE1DA6C3 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x415FFBA7 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x4665096D EQ PUSH2 0xAC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH2 0x18F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH2 0xA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x81B JUMP JUMPDEST PUSH2 0x19D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xF5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xF5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0x8D6 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x8A PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH2 0x1D4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH21 0x1CDA59DB985D1D5C994F4B08185B5BDD5B9D0F4959 PUSH1 0x5A SHL DUP2 MSTORE POP DUP4 PUSH2 0x2E9 JUMP JUMPDEST PUSH2 0x1DD DUP2 PUSH2 0x332 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x22C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1B9BDD081C9958DA5C1A595B9D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x236 DUP3 DUP3 PUSH2 0x378 JUMP JUMPDEST PUSH2 0x276 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x696E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x223 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP2 GT PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x32E DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2FF SWAP3 SWAP2 SWAP1 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x9710A9D PUSH1 0xE4 SHL OR SWAP1 MSTORE PUSH2 0x4BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x375 DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x5F3BFAB PUSH1 0xE1 SHL OR SWAP1 MSTORE PUSH2 0x4BA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x1059191C995CDCCF495CCB185B5BDD5B9D0F4959 PUSH1 0x62 SHL DUP2 MSTORE POP ADDRESS DUP6 PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x3DB PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x6D657373616765203D PUSH1 0xB8 SHL DUP2 MSTORE POP PUSH2 0x527 JUMP JUMPDEST PUSH2 0x40C ADDRESS DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3F1 SWAP3 SWAP2 SWAP1 PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x56A JUMP JUMPDEST PUSH2 0x43E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH17 0x6D6573736167652070726566697865643D PUSH1 0x78 SHL DUP2 MSTORE POP PUSH2 0x527 JUMP JUMPDEST PUSH2 0x477 PUSH2 0x472 ADDRESS DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x457 SWAP3 SWAP2 SWAP1 PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x5AF JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48F ADDRESS DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x457 SWAP3 SWAP2 SWAP1 PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4A8 DUP3 DUP6 PUSH2 0x67E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH11 0x636F6E736F6C652E6C6F67 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP1 DUP5 DUP4 DUP6 GAS STATICCALL POP POP POP POP POP JUMP JUMPDEST PUSH2 0x522 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4F3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x7C81217 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x4BA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x375 DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x104C13EB PUSH1 0xE2 SHL OR SWAP1 MSTORE PUSH2 0x4BA JUMP JUMPDEST PUSH2 0x375 DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x580 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x27B7CF85 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH17 0x707265666978656420656E636F6465503D PUSH1 0x78 SHL DUP2 MSTORE POP PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP4 SWAP1 MSTORE PUSH2 0x62E SWAP1 PUSH1 0x5C ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x5C ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x68D DUP6 PUSH2 0x791 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x729 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x41646472657373206973202573 PUSH1 0x98 SHL DUP2 MSTORE POP PUSH1 0x1 DUP9 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x6F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x71A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP9 SWAP1 MSTORE PUSH1 0xFF DUP6 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x77C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x0 BYTE SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x32E DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x7D6 SWAP3 SWAP2 SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x319AF333 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x4BA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x82E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x873 JUMPI PUSH2 0x873 PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x89B JUMPI PUSH2 0x89B PUSH2 0x805 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x94D JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x931 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x95F JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x987 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x927 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x927 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 MSTORE PUSH1 0x14 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9E5 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x927 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0xA13 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x927 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xEF 0xE2 DUP8 0xD1 0xAD 0x2C 0xEF SIGNEXTEND ISZERO 0xF7 0xC2 DUP13 INVALID 0xB4 0x1F 0x4C 0xDF 0xD8 SWAP7 LT NOT SLOAD PUSH16 0x41E3FC4DCA9B8CB864736F6C63430008 0xE STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        85,
        3930
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70"
    },
    "12": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x66D003AC"
    },
    "25": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x66D003AC"
    },
    "36": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5"
    },
    "40": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x67E404CE"
    },
    "47": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "51": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9714378C"
    },
    "58": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D"
    },
    "62": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF26C6AED"
    },
    "69": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D"
    },
    "73": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "REVERT",
      "path": "0"
    },
    "78": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "79": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "DUP1",
      "path": "0"
    },
    "80": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE1DA6C3"
    },
    "85": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "EQ",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75"
    },
    "89": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "DUP1",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x415FFBA7"
    },
    "96": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "EQ",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C"
    },
    "100": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4665096D"
    },
    "107": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC"
    },
    "111": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "115": {
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "DUP1",
      "path": "0"
    },
    "116": {
      "first_revert": true,
      "fn": null,
      "offset": [
        85,
        3930
      ],
      "op": "REVERT",
      "path": "0"
    },
    "117": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "118": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "119": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "DUP1",
      "path": "0"
    },
    "120": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "121": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81"
    },
    "124": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "127": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "DUP1",
      "path": "0"
    },
    "128": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "REVERT",
      "path": "0"
    },
    "129": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "130": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "POP",
      "path": "0"
    },
    "131": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A"
    },
    "134": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F"
    },
    "137": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "jump": "i",
      "offset": [
        925,
        1119
      ],
      "op": "JUMP",
      "path": "0"
    },
    "138": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "139": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "STOP",
      "path": "0"
    },
    "140": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "141": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "142": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "DUP1",
      "path": "0"
    },
    "143": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "144": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98"
    },
    "147": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "148": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "150": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "DUP1",
      "path": "0"
    },
    "151": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "REVERT",
      "path": "0"
    },
    "152": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "153": {
      "op": "POP"
    },
    "154": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A"
    },
    "157": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA7"
    },
    "160": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "161": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "163": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81B"
    },
    "166": {
      "fn": "SimplePaymentChannel.close",
      "jump": "i",
      "offset": [
        1546,
        1905
      ],
      "op": "JUMP",
      "path": "0"
    },
    "167": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "168": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D"
    },
    "171": {
      "fn": "SimplePaymentChannel.close",
      "jump": "i",
      "offset": [
        1546,
        1905
      ],
      "op": "JUMP",
      "path": "0"
    },
    "172": {
      "offset": [
        266,
        291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "173": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "174": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "176": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "179": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "182": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "183": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "REVERT",
      "path": "0"
    },
    "184": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "185": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "POP",
      "path": "0"
    },
    "186": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2"
    },
    "189": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "191": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "192": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "DUP2",
      "path": "0"
    },
    "193": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "JUMP",
      "path": "0"
    },
    "194": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "195": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "197": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "198": {
      "op": "SWAP1"
    },
    "199": {
      "op": "DUP2"
    },
    "200": {
      "op": "MSTORE"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "203": {
      "op": "ADD"
    },
    "204": {
      "offset": [
        266,
        291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "205": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "207": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "208": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "209": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "210": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "SUB",
      "path": "0"
    },
    "211": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "212": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        266,
        291
      ],
      "op": "RETURN",
      "path": "0"
    },
    "213": {
      "offset": [
        189,
        221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "214": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "215": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "DUP1",
      "path": "0"
    },
    "216": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "217": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE1"
    },
    "220": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "221": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "223": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "DUP1",
      "path": "0"
    },
    "224": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "REVERT",
      "path": "0"
    },
    "225": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "226": {
      "op": "POP"
    },
    "227": {
      "offset": [
        189,
        221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "229": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "230": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "233": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "240": {
      "op": "SHL"
    },
    "241": {
      "op": "SUB"
    },
    "242": {
      "offset": [
        189,
        221
      ],
      "op": "AND",
      "path": "0"
    },
    "243": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "244": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "245": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "246": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "248": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        189,
        221
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "255": {
      "op": "SHL"
    },
    "256": {
      "op": "SUB"
    },
    "257": {
      "op": "SWAP1"
    },
    "258": {
      "op": "SWAP2"
    },
    "259": {
      "op": "AND"
    },
    "260": {
      "op": "DUP2"
    },
    "261": {
      "op": "MSTORE"
    },
    "262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "264": {
      "op": "ADD"
    },
    "265": {
      "offset": [
        189,
        221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "268": {
      "op": "JUMP"
    },
    "269": {
      "offset": [
        121,
        150
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "270": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "271": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "DUP1",
      "path": "0"
    },
    "272": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "273": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x119"
    },
    "276": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "277": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "279": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "DUP1",
      "path": "0"
    },
    "280": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "REVERT",
      "path": "0"
    },
    "281": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "282": {
      "op": "POP"
    },
    "283": {
      "offset": [
        121,
        150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "285": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "286": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "289": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "296": {
      "op": "SHL"
    },
    "297": {
      "op": "SUB"
    },
    "298": {
      "offset": [
        121,
        150
      ],
      "op": "AND",
      "path": "0"
    },
    "299": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "DUP2",
      "path": "0"
    },
    "300": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        121,
        150
      ],
      "op": "JUMP",
      "path": "0"
    },
    "301": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "302": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "303": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "DUP1",
      "path": "0"
    },
    "304": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "305": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139"
    },
    "308": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "309": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "311": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "DUP1",
      "path": "0"
    },
    "312": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "REVERT",
      "path": "0"
    },
    "313": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "314": {
      "op": "POP"
    },
    "315": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A"
    },
    "318": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x148"
    },
    "321": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "322": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "324": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D6"
    },
    "327": {
      "fn": "SimplePaymentChannel.extend",
      "jump": "i",
      "offset": [
        612,
        787
      ],
      "op": "JUMP",
      "path": "0"
    },
    "328": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "329": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BF"
    },
    "332": {
      "fn": "SimplePaymentChannel.extend",
      "jump": "i",
      "offset": [
        612,
        787
      ],
      "op": "JUMP",
      "path": "0"
    },
    "333": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1125,
        1336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "334": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1125,
        1336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A"
    },
    "337": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1125,
        1336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15B"
    },
    "340": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1125,
        1336
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "341": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1125,
        1336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "343": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1125,
        1336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EF"
    },
    "346": {
      "fn": "SimplePaymentChannel.newChannel",
      "jump": "i",
      "offset": [
        1125,
        1336
      ],
      "op": "JUMP",
      "path": "0"
    },
    "347": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1125,
        1336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "348": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1234
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "350": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "DUP1",
      "path": "0"
    },
    "351": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "352": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1245,
        1255
      ],
      "op": "CALLER",
      "path": "0"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "359": {
      "op": "SHL"
    },
    "360": {
      "op": "SUB"
    },
    "361": {
      "op": "NOT"
    },
    "362": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "363": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "DUP3",
      "path": "0"
    },
    "364": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "AND",
      "path": "0"
    },
    "365": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "OR",
      "path": "0"
    },
    "366": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "367": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "368": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1228,
        1256
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "371": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 1
    },
    "372": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "373": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "374": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "375": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "AND",
      "path": "0"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "382": {
      "op": "SHL"
    },
    "383": {
      "op": "SUB"
    },
    "384": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "385": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "386": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "387": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "AND",
      "path": "0"
    },
    "388": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "389": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "390": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "391": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "OR",
      "path": "0"
    },
    "392": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "393": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "394": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1266,
        1295
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "395": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1305,
        1315
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x2"
    },
    "397": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1305,
        1329
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "398": {
      "fn": "SimplePaymentChannel.newChannel",
      "offset": [
        1125,
        1336
      ],
      "op": "JUMP",
      "path": "0"
    },
    "399": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "400": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        1105,
        1111
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x0"
    },
    "402": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        1105,
        1111
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "409": {
      "op": "SHL"
    },
    "410": {
      "op": "SUB"
    },
    "411": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        1105,
        1111
      ],
      "op": "AND",
      "path": "0"
    },
    "412": {
      "fn": "SimplePaymentChannel.claimTimeout",
      "offset": [
        1092,
        1112
      ],
      "op": "SELFDESTRUCT",
      "path": "0"
    },
    "413": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1546,
        1905
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "414": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x1D4"
    },
    "417": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "419": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "420": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "DUP1",
      "path": "0"
    },
    "421": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "423": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "ADD",
      "path": "0"
    },
    "424": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "426": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "427": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "DUP1",
      "path": "0"
    },
    "428": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "430": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "DUP2",
      "path": "0"
    },
    "431": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "432": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "434": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "ADD",
      "path": "0"
    },
    "435": {
      "op": "PUSH21",
      "value": "0x1CDA59DB985D1D5C994F4B08185B5BDD5B9D0F4959"
    },
    "457": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "459": {
      "op": "SHL"
    },
    "460": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "DUP2",
      "path": "0"
    },
    "461": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "462": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "POP",
      "path": "0"
    },
    "463": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1656,
        1662
      ],
      "op": "DUP4",
      "path": "0"
    },
    "464": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E9"
    },
    "467": {
      "fn": "SimplePaymentChannel.close",
      "jump": "i",
      "offset": [
        1620,
        1663
      ],
      "op": "JUMP",
      "path": "0"
    },
    "468": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1620,
        1663
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "469": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1673,
        1700
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x1DD"
    },
    "472": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1690,
        1699
      ],
      "op": "DUP2",
      "path": "0"
    },
    "473": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1673,
        1689
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "476": {
      "fn": "SimplePaymentChannel.close",
      "jump": "i",
      "offset": [
        1673,
        1700
      ],
      "op": "JUMP",
      "path": "0"
    },
    "477": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1673,
        1700
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "478": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1732,
        1741
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x1"
    },
    "480": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1732,
        1741
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "487": {
      "op": "SHL"
    },
    "488": {
      "op": "SUB"
    },
    "489": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1732,
        1741
      ],
      "op": "AND",
      "path": "0"
    },
    "490": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1718,
        1728
      ],
      "op": "CALLER",
      "path": "0"
    },
    "491": {
      "branch": 31,
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1718,
        1741
      ],
      "op": "EQ",
      "path": "0"
    },
    "492": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22C"
    },
    "495": {
      "branch": 31,
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "496": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "498": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "499": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "503": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "505": {
      "op": "SHL"
    },
    "506": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "507": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "510": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "512": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "DUP3",
      "path": "0"
    },
    "513": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "ADD",
      "path": "0"
    },
    "514": {
      "op": "MSTORE"
    },
    "515": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "519": {
      "op": "DUP3"
    },
    "520": {
      "op": "ADD"
    },
    "521": {
      "op": "MSTORE"
    },
    "522": {
      "op": "PUSH13",
      "value": "0x1B9BDD081C9958DA5C1A595B9D"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "538": {
      "op": "SHL"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "541": {
      "op": "DUP3"
    },
    "542": {
      "op": "ADD"
    },
    "543": {
      "op": "MSTORE"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "546": {
      "op": "ADD"
    },
    "547": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "548": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "550": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "551": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "DUP1",
      "path": "0"
    },
    "552": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "553": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "SUB",
      "path": "0"
    },
    "554": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "555": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "556": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1710,
        1758
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "557": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1776,
        1811
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x236"
    },
    "560": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1793,
        1799
      ],
      "op": "DUP3",
      "path": "0"
    },
    "561": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1801,
        1810
      ],
      "op": "DUP3",
      "path": "0"
    },
    "562": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1776,
        1792
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "565": {
      "fn": "SimplePaymentChannel.close",
      "jump": "i",
      "offset": [
        1776,
        1811
      ],
      "op": "JUMP",
      "path": "0"
    },
    "566": {
      "branch": 32,
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1776,
        1811
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "567": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1768,
        1832
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276"
    },
    "570": {
      "branch": 32,
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1768,
        1832
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "571": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1768,
        1832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "573": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1768,
        1832
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "574": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "578": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "580": {
      "op": "SHL"
    },
    "581": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1768,
        1832
      ],
      "op": "DUP2",
      "path": "0"
    },
    "582": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1768,
        1832
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "585": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1768,
        1832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "587": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1768,
        1832
      ],
      "op": "DUP3",
      "path": "0"
    },
    "588": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1768,
        1832
      ],
      "op": "ADD",
      "path": "0"
    },
    "589": {
      "op": "MSTORE"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "594": {
      "op": "DUP3"
    },
    "595": {
      "op": "ADD"
    },
    "596": {
      "op": "MSTORE"
    },
    "597": {
      "op": "PUSH17",
      "value": "0x696E76616C6964207369676E6174757265"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "617": {
      "op": "SHL"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "620": {
      "op": "DUP3"
    },
    "621": {
      "op": "ADD"
    },
    "622": {
      "op": "MSTORE"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "625": {
      "op": "ADD"
    },
    "626": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1768,
        1832
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223"
    },
    "629": {
      "op": "JUMP"
    },
    "630": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1768,
        1832
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "631": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1851
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x1"
    },
    "633": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1851
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "634": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "636": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "643": {
      "op": "SHL"
    },
    "644": {
      "op": "SUB"
    },
    "645": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1851
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "646": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1851
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "647": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1851
      ],
      "op": "AND",
      "path": "0"
    },
    "648": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1851
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "649": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "DUP4",
      "path": "0"
    },
    "650": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "651": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "654": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "MUL",
      "path": "0"
    },
    "655": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "656": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1861,
        1867
      ],
      "op": "DUP5",
      "path": "0"
    },
    "657": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1861,
        1867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "658": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1851
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "660": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "DUP2",
      "path": "0"
    },
    "661": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1851
      ],
      "op": "DUP2",
      "path": "0"
    },
    "662": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "DUP2",
      "path": "0"
    },
    "663": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1861,
        1867
      ],
      "op": "DUP6",
      "path": "0"
    },
    "664": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1851
      ],
      "op": "DUP9",
      "path": "0"
    },
    "665": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "DUP9",
      "path": "0"
    },
    "666": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "CALL",
      "path": "0"
    },
    "667": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "668": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "POP",
      "path": "0"
    },
    "669": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "POP",
      "path": "0"
    },
    "670": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "POP",
      "path": "0"
    },
    "671": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "POP",
      "path": "0"
    },
    "672": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "673": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "DUP1",
      "path": "0"
    },
    "674": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "675": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B0"
    },
    "678": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "679": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "680": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "682": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "DUP1",
      "path": "0"
    },
    "683": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "684": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "685": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "687": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "REVERT",
      "path": "0"
    },
    "688": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1842,
        1868
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "689": {
      "op": "POP"
    },
    "690": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1891,
        1897
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x0"
    },
    "692": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1891,
        1897
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "699": {
      "op": "SHL"
    },
    "700": {
      "op": "SUB"
    },
    "701": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1891,
        1897
      ],
      "op": "AND",
      "path": "0"
    },
    "702": {
      "fn": "SimplePaymentChannel.close",
      "offset": [
        1878,
        1898
      ],
      "op": "SELFDESTRUCT",
      "path": "0"
    },
    "703": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        612,
        787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "704": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        692,
        698
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "706": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        692,
        698
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "713": {
      "op": "SHL"
    },
    "714": {
      "op": "SUB"
    },
    "715": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        692,
        698
      ],
      "op": "AND",
      "path": "0"
    },
    "716": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        678,
        688
      ],
      "op": "CALLER",
      "path": "0"
    },
    "717": {
      "branch": 33,
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        678,
        698
      ],
      "op": "EQ",
      "path": "0"
    },
    "718": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        670,
        699
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D6"
    },
    "721": {
      "branch": 33,
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        670,
        699
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "722": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        670,
        699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "724": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        670,
        699
      ],
      "op": "DUP1",
      "path": "0"
    },
    "725": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        670,
        699
      ],
      "op": "REVERT",
      "path": "0"
    },
    "726": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        670,
        699
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "727": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        733,
        743
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x2"
    },
    "729": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        733,
        743
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "730": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        717,
        730
      ],
      "op": "DUP2",
      "path": "0"
    },
    "731": {
      "branch": 34,
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        717,
        743
      ],
      "op": "GT",
      "path": "0"
    },
    "732": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        709,
        744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E4"
    },
    "735": {
      "branch": 34,
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        709,
        744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "736": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        709,
        744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "738": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        709,
        744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "739": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        709,
        744
      ],
      "op": "REVERT",
      "path": "0"
    },
    "740": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        709,
        744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "741": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        754,
        764
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x2"
    },
    "743": {
      "fn": "SimplePaymentChannel.extend",
      "offset": [
        754,
        780
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "744": {
      "fn": "SimplePaymentChannel.extend",
      "jump": "o",
      "offset": [
        612,
        787
      ],
      "op": "JUMP",
      "path": "0"
    },
    "745": {
      "fn": "console.log",
      "offset": [
        5887,
        6017
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "746": {
      "fn": "console.log",
      "offset": [
        5945,
        6013
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 13,
      "value": "0x32E"
    },
    "749": {
      "fn": "console.log",
      "offset": [
        6005,
        6007
      ],
      "op": "DUP3",
      "path": "1"
    },
    "750": {
      "fn": "console.log",
      "offset": [
        6009,
        6011
      ],
      "op": "DUP3",
      "path": "1"
    },
    "751": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "753": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "754": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "756": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "ADD",
      "path": "1"
    },
    "757": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FF"
    },
    "760": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "761": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "762": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "763": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x974"
    },
    "766": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        5961,
        6012
      ],
      "op": "JUMP",
      "path": "1"
    },
    "767": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "768": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "770": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP1",
      "path": "1"
    },
    "771": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "774": {
      "op": "NOT"
    },
    "775": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP2",
      "path": "1"
    },
    "776": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP5",
      "path": "1"
    },
    "777": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SUB",
      "path": "1"
    },
    "778": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "ADD",
      "path": "1"
    },
    "779": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP2",
      "path": "1"
    },
    "780": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "781": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "782": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "783": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "784": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "786": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP2",
      "path": "1"
    },
    "787": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "ADD",
      "path": "1"
    },
    "788": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP1",
      "path": "1"
    },
    "789": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "794": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "796": {
      "op": "SHL"
    },
    "797": {
      "op": "SUB"
    },
    "798": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "AND",
      "path": "1"
    },
    "799": {
      "op": "PUSH4",
      "value": "0x9710A9D"
    },
    "804": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "806": {
      "op": "SHL"
    },
    "807": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "OR",
      "path": "1"
    },
    "808": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "809": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "810": {
      "fn": "console.log",
      "offset": [
        5945,
        5960
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BA"
    },
    "813": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        5945,
        6013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "814": {
      "fn": "console.log",
      "offset": [
        5945,
        6013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "815": {
      "fn": "console.log",
      "offset": [
        5887,
        6017
      ],
      "op": "POP",
      "path": "1"
    },
    "816": {
      "fn": "console.log",
      "offset": [
        5887,
        6017
      ],
      "op": "POP",
      "path": "1"
    },
    "817": {
      "fn": "console.log",
      "jump": "o",
      "offset": [
        5887,
        6017
      ],
      "op": "JUMP",
      "path": "1"
    },
    "818": {
      "fn": "console.logBytes",
      "offset": [
        1114,
        1229
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "819": {
      "fn": "console.logBytes",
      "offset": [
        1167,
        1225
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 14,
      "value": "0x375"
    },
    "822": {
      "fn": "console.logBytes",
      "offset": [
        1221,
        1223
      ],
      "op": "DUP2",
      "path": "1"
    },
    "823": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "825": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "826": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "828": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "ADD",
      "path": "1"
    },
    "829": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x346"
    },
    "832": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "833": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "834": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x996"
    },
    "837": {
      "fn": "console.logBytes",
      "jump": "i",
      "offset": [
        1183,
        1224
      ],
      "op": "JUMP",
      "path": "1"
    },
    "838": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "839": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "841": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "DUP1",
      "path": "1"
    },
    "842": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "845": {
      "op": "NOT"
    },
    "846": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "DUP2",
      "path": "1"
    },
    "847": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "DUP5",
      "path": "1"
    },
    "848": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "SUB",
      "path": "1"
    },
    "849": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "ADD",
      "path": "1"
    },
    "850": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "DUP2",
      "path": "1"
    },
    "851": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "852": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "853": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "854": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "855": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "857": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "DUP2",
      "path": "1"
    },
    "858": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "ADD",
      "path": "1"
    },
    "859": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "DUP1",
      "path": "1"
    },
    "860": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "865": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "867": {
      "op": "SHL"
    },
    "868": {
      "op": "SUB"
    },
    "869": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "AND",
      "path": "1"
    },
    "870": {
      "op": "PUSH4",
      "value": "0x5F3BFAB"
    },
    "875": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "877": {
      "op": "SHL"
    },
    "878": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "OR",
      "path": "1"
    },
    "879": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "880": {
      "fn": "console.logBytes",
      "offset": [
        1183,
        1224
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "881": {
      "fn": "console.logBytes",
      "offset": [
        1167,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BA"
    },
    "884": {
      "fn": "console.logBytes",
      "jump": "i",
      "offset": [
        1167,
        1225
      ],
      "op": "JUMP",
      "path": "1"
    },
    "885": {
      "fn": "console.logBytes",
      "offset": [
        1167,
        1225
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "886": {
      "fn": "console.logBytes",
      "offset": [
        1114,
        1229
      ],
      "op": "POP",
      "path": "1"
    },
    "887": {
      "fn": "console.logBytes",
      "jump": "o",
      "offset": [
        1114,
        1229
      ],
      "op": "JUMP",
      "path": "1"
    },
    "888": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1911,
        2565
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "889": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2024,
        2028
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "891": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x3B1"
    },
    "894": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "896": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "897": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "DUP1",
      "path": "0"
    },
    "898": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "900": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "ADD",
      "path": "0"
    },
    "901": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "903": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "904": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "DUP1",
      "path": "0"
    },
    "905": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "907": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "DUP2",
      "path": "0"
    },
    "908": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "909": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "911": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "ADD",
      "path": "0"
    },
    "912": {
      "op": "PUSH20",
      "value": "0x1059191C995CDCCF495CCB185B5BDD5B9D0F4959"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "935": {
      "op": "SHL"
    },
    "936": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "DUP2",
      "path": "0"
    },
    "937": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "938": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "POP",
      "path": "0"
    },
    "939": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2087,
        2091
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "940": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2093,
        2099
      ],
      "op": "DUP6",
      "path": "0"
    },
    "941": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2055
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DB"
    },
    "944": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "jump": "i",
      "offset": [
        2044,
        2100
      ],
      "op": "JUMP",
      "path": "0"
    },
    "945": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2044,
        2100
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "946": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0x3DB"
    },
    "949": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "951": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "952": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "DUP1",
      "path": "0"
    },
    "953": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "955": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "ADD",
      "path": "0"
    },
    "956": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "958": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "959": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "DUP1",
      "path": "0"
    },
    "960": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "962": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "DUP2",
      "path": "0"
    },
    "963": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "964": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "966": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "ADD",
      "path": "0"
    },
    "967": {
      "op": "PUSH9",
      "value": "0x6D657373616765203D"
    },
    "977": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "979": {
      "op": "SHL"
    },
    "980": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "DUP2",
      "path": "0"
    },
    "981": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "982": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "POP",
      "path": "0"
    },
    "983": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x527"
    },
    "986": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "jump": "i",
      "offset": [
        2110,
        2134
      ],
      "op": "JUMP",
      "path": "0"
    },
    "987": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2110,
        2134
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "988": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2144,
        2214
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x40C"
    },
    "991": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2198,
        2202
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "992": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2205,
        2211
      ],
      "op": "DUP5",
      "path": "0"
    },
    "993": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "995": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "996": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "998": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "ADD",
      "path": "0"
    },
    "999": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F1"
    },
    "1002": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1003": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1004": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1005": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B0"
    },
    "1008": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "jump": "i",
      "offset": [
        2173,
        2212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1009": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1010": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1012": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1013": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1015": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1016": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1017": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "SUB",
      "path": "0"
    },
    "1018": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "SUB",
      "path": "0"
    },
    "1019": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1020": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1021": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1022": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1024": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2173,
        2212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1025": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2163,
        2213
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1026": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2163,
        2213
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1027": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2163,
        2213
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1028": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2163,
        2213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1030": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2163,
        2213
      ],
      "op": "ADD",
      "path": "0"
    },
    "1031": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2163,
        2213
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1032": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2144,
        2162
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56A"
    },
    "1035": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "jump": "i",
      "offset": [
        2144,
        2214
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1036": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2144,
        2214
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1037": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 18,
      "value": "0x43E"
    },
    "1040": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1042": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1043": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1044": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1046": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "ADD",
      "path": "0"
    },
    "1047": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1049": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1050": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1051": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "1053": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1054": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1055": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1057": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "ADD",
      "path": "0"
    },
    "1058": {
      "op": "PUSH17",
      "value": "0x6D6573736167652070726566697865643D"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "1078": {
      "op": "SHL"
    },
    "1079": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1080": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1081": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "POP",
      "path": "0"
    },
    "1082": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x527"
    },
    "1085": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "jump": "i",
      "offset": [
        2224,
        2256
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1086": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2224,
        2256
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1087": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2266,
        2346
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0x477"
    },
    "1090": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2285,
        2345
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x472"
    },
    "1093": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2329,
        2333
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1094": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2336,
        2342
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1095": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1097": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1098": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1100": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "ADD",
      "path": "0"
    },
    "1101": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x457"
    },
    "1104": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1105": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1106": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1107": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B0"
    },
    "1110": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "jump": "i",
      "offset": [
        2304,
        2343
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1111": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1112": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1114": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1115": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1117": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1118": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1119": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "SUB",
      "path": "0"
    },
    "1120": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "SUB",
      "path": "0"
    },
    "1121": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1122": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1123": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1124": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1126": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2304,
        2343
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1127": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2294,
        2344
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1128": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2294,
        2344
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1129": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2294,
        2344
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1130": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2294,
        2344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1132": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2294,
        2344
      ],
      "op": "ADD",
      "path": "0"
    },
    "1133": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2294,
        2344
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1134": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2285,
        2293
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AF"
    },
    "1137": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "jump": "i",
      "offset": [
        2285,
        2345
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1138": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2285,
        2345
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1139": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2266,
        2284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56A"
    },
    "1142": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "jump": "i",
      "offset": [
        2266,
        2346
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1143": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2266,
        2346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1144": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2357,
        2372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1146": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2375,
        2435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48F"
    },
    "1149": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2419,
        2423
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1150": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2426,
        2432
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1151": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2394,
        2433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1153": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2394,
        2433
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1154": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2394,
        2433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1156": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2394,
        2433
      ],
      "op": "ADD",
      "path": "0"
    },
    "1157": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2394,
        2433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x457"
    },
    "1160": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2394,
        2433
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1161": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2394,
        2433
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1162": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2394,
        2433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1163": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2394,
        2433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B0"
    },
    "1166": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "jump": "i",
      "offset": [
        2394,
        2433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1167": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2375,
        2435
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1168": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2552,
        2558
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x0"
    },
    "1170": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2552,
        2558
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1171": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2357,
        2435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1172": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2357,
        2435
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1173": {
      "op": "POP"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1180": {
      "op": "SHL"
    },
    "1181": {
      "op": "SUB"
    },
    "1182": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2552,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "1183": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2515,
        2548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A8"
    },
    "1186": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2357,
        2435
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1187": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2538,
        2547
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1188": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2515,
        2528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67E"
    },
    "1191": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "jump": "i",
      "offset": [
        2515,
        2548
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1192": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2515,
        2548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1199": {
      "op": "SHL"
    },
    "1200": {
      "op": "SUB"
    },
    "1201": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2515,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "1202": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2515,
        2558
      ],
      "op": "EQ",
      "path": "0"
    },
    "1203": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        2515,
        2558
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1204": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "offset": [
        1911,
        2565
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1205": {
      "op": "POP"
    },
    "1206": {
      "op": "POP"
    },
    "1207": {
      "op": "POP"
    },
    "1208": {
      "op": "POP"
    },
    "1209": {
      "fn": "SimplePaymentChannel.isValidSignature",
      "jump": "o",
      "offset": [
        1911,
        2565
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1210": {
      "fn": "console._sendLogPayload",
      "offset": [
        175,
        463
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1211": {
      "fn": "console._sendLogPayload",
      "offset": [
        263,
        277
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1212": {
      "fn": "console._sendLogPayload",
      "offset": [
        263,
        277
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1213": {
      "offset": [
        128,
        170
      ],
      "op": "PUSH11",
      "path": "1",
      "value": "0x636F6E736F6C652E6C6F67"
    },
    "1225": {
      "fn": "console._sendLogPayload",
      "offset": [
        372,
        374
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1227": {
      "fn": "console._sendLogPayload",
      "offset": [
        359,
        375
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1228": {
      "fn": "console._sendLogPayload",
      "offset": [
        359,
        375
      ],
      "op": "ADD",
      "path": "1"
    },
    "1229": {
      "fn": "console._sendLogPayload",
      "offset": [
        239,
        260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1231": {
      "fn": "console._sendLogPayload",
      "offset": [
        239,
        260
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1232": {
      "fn": "console._sendLogPayload",
      "offset": [
        263,
        277
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1233": {
      "fn": "console._sendLogPayload",
      "offset": [
        359,
        375
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1234": {
      "offset": [
        128,
        170
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1235": {
      "fn": "console._sendLogPayload",
      "offset": [
        399,
        404
      ],
      "op": "GAS",
      "path": "1"
    },
    "1236": {
      "fn": "console._sendLogPayload",
      "offset": [
        388,
        456
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1237": {
      "fn": "console._sendLogPayload",
      "offset": [
        379,
        456
      ],
      "op": "POP",
      "path": "1"
    },
    "1238": {
      "fn": "console._sendLogPayload",
      "offset": [
        379,
        456
      ],
      "op": "POP",
      "path": "1"
    },
    "1239": {
      "fn": "console._sendLogPayload",
      "offset": [
        334,
        460
      ],
      "op": "POP",
      "path": "1"
    },
    "1240": {
      "fn": "console._sendLogPayload",
      "offset": [
        334,
        460
      ],
      "op": "POP",
      "path": "1"
    },
    "1241": {
      "fn": "console._sendLogPayload",
      "offset": [
        175,
        463
      ],
      "op": "POP",
      "path": "1"
    },
    "1242": {
      "fn": "console._sendLogPayload",
      "jump": "o",
      "offset": [
        175,
        463
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1243": {
      "fn": "console.log",
      "offset": [
        11753,
        11907
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1244": {
      "fn": "console.log",
      "offset": [
        11823,
        11903
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 21,
      "value": "0x522"
    },
    "1247": {
      "fn": "console.log",
      "offset": [
        11891,
        11893
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1248": {
      "fn": "console.log",
      "offset": [
        11895,
        11897
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1249": {
      "fn": "console.log",
      "offset": [
        11899,
        11901
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1250": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1252": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1253": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1255": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "ADD",
      "path": "1"
    },
    "1256": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4F3"
    },
    "1259": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1260": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1261": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1262": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1263": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D2"
    },
    "1266": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        11839,
        11902
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1267": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1268": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1270": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1271": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1274": {
      "op": "NOT"
    },
    "1275": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1276": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1277": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "SUB",
      "path": "1"
    },
    "1278": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "ADD",
      "path": "1"
    },
    "1279": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1280": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1281": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1282": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1283": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1284": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1286": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1287": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "ADD",
      "path": "1"
    },
    "1288": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1289": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1296": {
      "op": "SHL"
    },
    "1297": {
      "op": "SUB"
    },
    "1298": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "AND",
      "path": "1"
    },
    "1299": {
      "op": "PUSH4",
      "value": "0x7C81217"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1306": {
      "op": "SHL"
    },
    "1307": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "OR",
      "path": "1"
    },
    "1308": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1309": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1310": {
      "fn": "console.log",
      "offset": [
        11823,
        11838
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BA"
    },
    "1313": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        11823,
        11903
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1314": {
      "fn": "console.log",
      "offset": [
        11823,
        11903
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1315": {
      "fn": "console.log",
      "offset": [
        11753,
        11907
      ],
      "op": "POP",
      "path": "1"
    },
    "1316": {
      "fn": "console.log",
      "offset": [
        11753,
        11907
      ],
      "op": "POP",
      "path": "1"
    },
    "1317": {
      "fn": "console.log",
      "offset": [
        11753,
        11907
      ],
      "op": "POP",
      "path": "1"
    },
    "1318": {
      "fn": "console.log",
      "jump": "o",
      "offset": [
        11753,
        11907
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1319": {
      "fn": "console.log",
      "offset": [
        5053,
        5165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1320": {
      "fn": "console.log",
      "offset": [
        5102,
        5161
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 22,
      "value": "0x375"
    },
    "1323": {
      "fn": "console.log",
      "offset": [
        5157,
        5159
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1324": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1326": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1327": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1329": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "ADD",
      "path": "1"
    },
    "1330": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x53B"
    },
    "1333": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1334": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1335": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x996"
    },
    "1338": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        5118,
        5160
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1339": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1340": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1342": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1343": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1346": {
      "op": "NOT"
    },
    "1347": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1348": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1349": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SUB",
      "path": "1"
    },
    "1350": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "ADD",
      "path": "1"
    },
    "1351": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1352": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1353": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1354": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1355": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1356": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1358": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1359": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "ADD",
      "path": "1"
    },
    "1360": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1361": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1368": {
      "op": "SHL"
    },
    "1369": {
      "op": "SUB"
    },
    "1370": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "AND",
      "path": "1"
    },
    "1371": {
      "op": "PUSH4",
      "value": "0x104C13EB"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1378": {
      "op": "SHL"
    },
    "1379": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "OR",
      "path": "1"
    },
    "1380": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1381": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1382": {
      "fn": "console.log",
      "offset": [
        5102,
        5117
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BA"
    },
    "1385": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        5102,
        5161
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1386": {
      "fn": "console.logBytes32",
      "offset": [
        4832,
        4946
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1387": {
      "fn": "console.logBytes32",
      "offset": [
        4882,
        4942
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 23,
      "value": "0x375"
    },
    "1390": {
      "fn": "console.logBytes32",
      "offset": [
        4938,
        4940
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1391": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1393": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1394": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1396": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "ADD",
      "path": "1"
    },
    "1397": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x580"
    },
    "1400": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1401": {
      "op": "DUP2"
    },
    "1402": {
      "op": "MSTORE"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1405": {
      "op": "ADD"
    },
    "1406": {
      "op": "SWAP1"
    },
    "1407": {
      "op": "JUMP"
    },
    "1408": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1409": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1411": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1412": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1415": {
      "op": "NOT"
    },
    "1416": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1417": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1418": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "SUB",
      "path": "1"
    },
    "1419": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "ADD",
      "path": "1"
    },
    "1420": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1421": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1422": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1423": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1424": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1425": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1427": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1428": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "ADD",
      "path": "1"
    },
    "1429": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1430": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1437": {
      "op": "SHL"
    },
    "1438": {
      "op": "SUB"
    },
    "1439": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "AND",
      "path": "1"
    },
    "1440": {
      "op": "PUSH4",
      "value": "0x27B7CF85"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1447": {
      "op": "SHL"
    },
    "1448": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "OR",
      "path": "1"
    },
    "1449": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1450": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1451": {
      "fn": "console.logBytes32",
      "offset": [
        4882,
        4897
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BA"
    },
    "1454": {
      "fn": "console.logBytes32",
      "jump": "i",
      "offset": [
        4882,
        4942
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1455": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3601,
        3928
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1456": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3656,
        3663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1458": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 24,
      "value": "0x5E3"
    },
    "1461": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1463": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1464": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1465": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1467": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "ADD",
      "path": "0"
    },
    "1468": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1470": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1471": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1472": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "1474": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1475": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1476": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1478": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "ADD",
      "path": "0"
    },
    "1479": {
      "op": "PUSH17",
      "value": "0x707265666978656420656E636F6465503D"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "1499": {
      "op": "SHL"
    },
    "1500": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1501": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1502": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "POP",
      "path": "0"
    },
    "1503": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x527"
    },
    "1506": {
      "fn": "SimplePaymentChannel.prefixed",
      "jump": "i",
      "offset": [
        3675,
        3707
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1507": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3675,
        3707
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1508": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x40"
    },
    "1510": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1511": {
      "op": "PUSH32",
      "value": "0x19457468657265756D205369676E6564204D6573736167653A0A333200000000"
    },
    "1544": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1546": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1547": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "ADD",
      "path": "0"
    },
    "1548": {
      "op": "MSTORE"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "1551": {
      "op": "DUP2"
    },
    "1552": {
      "op": "ADD"
    },
    "1553": {
      "op": "DUP4"
    },
    "1554": {
      "op": "SWAP1"
    },
    "1555": {
      "op": "MSTORE"
    },
    "1556": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3717,
        3793
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62E"
    },
    "1559": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3717,
        3793
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "1562": {
      "op": "ADD"
    },
    "1563": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1565": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1566": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1568": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1569": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1570": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "SUB",
      "path": "0"
    },
    "1571": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "SUB",
      "path": "0"
    },
    "1572": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1573": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1574": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1575": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1577": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3734,
        3792
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1578": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3717,
        3733
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "1581": {
      "fn": "SimplePaymentChannel.prefixed",
      "jump": "i",
      "offset": [
        3717,
        3793
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1582": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3717,
        3793
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1583": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x40"
    },
    "1585": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1586": {
      "op": "PUSH32",
      "value": "0x19457468657265756D205369676E6564204D6573736167653A0A333200000000"
    },
    "1619": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1621": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1622": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "ADD",
      "path": "0"
    },
    "1623": {
      "op": "MSTORE"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "1626": {
      "op": "DUP2"
    },
    "1627": {
      "op": "ADD"
    },
    "1628": {
      "op": "DUP4"
    },
    "1629": {
      "op": "SWAP1"
    },
    "1630": {
      "op": "MSTORE"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "1633": {
      "op": "ADD"
    },
    "1634": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1636": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1637": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1639": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1640": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1641": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "SUB",
      "path": "0"
    },
    "1642": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "SUB",
      "path": "0"
    },
    "1643": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1644": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1645": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1646": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1648": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3849,
        3907
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1649": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3822,
        3921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1650": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3822,
        3921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1651": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3822,
        3921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1652": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3822,
        3921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1654": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3822,
        3921
      ],
      "op": "ADD",
      "path": "0"
    },
    "1655": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3822,
        3921
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1656": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3803,
        3921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1657": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3803,
        3921
      ],
      "op": "POP",
      "path": "0"
    },
    "1658": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3601,
        3928
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1659": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3601,
        3928
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1660": {
      "fn": "SimplePaymentChannel.prefixed",
      "offset": [
        3601,
        3928
      ],
      "op": "POP",
      "path": "0"
    },
    "1661": {
      "fn": "SimplePaymentChannel.prefixed",
      "jump": "o",
      "offset": [
        3601,
        3928
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1662": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2571,
        2870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1663": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2676,
        2683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1665": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2700,
        2707
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1666": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2709,
        2718
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1668": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2720,
        2729
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1669": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2733,
        2752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68D"
    },
    "1672": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2748,
        2751
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1673": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2733,
        2747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x791"
    },
    "1676": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "jump": "i",
      "offset": [
        2733,
        2752
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1677": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2733,
        2752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1678": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2699,
        2752
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1679": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2699,
        2752
      ],
      "op": "POP",
      "path": "0"
    },
    "1680": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2699,
        2752
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1681": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2699,
        2752
      ],
      "op": "POP",
      "path": "0"
    },
    "1682": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2699,
        2752
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1683": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2699,
        2752
      ],
      "op": "POP",
      "path": "0"
    },
    "1684": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 27,
      "value": "0x729"
    },
    "1687": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1689": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1690": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1691": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1693": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "ADD",
      "path": "0"
    },
    "1694": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1696": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1697": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1698": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "1700": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1701": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1702": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1704": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "ADD",
      "path": "0"
    },
    "1705": {
      "op": "PUSH13",
      "value": "0x41646472657373206973202573"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "1721": {
      "op": "SHL"
    },
    "1722": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1723": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1724": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "POP",
      "path": "0"
    },
    "1725": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1727": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2801,
        2808
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1728": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2810,
        2811
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1729": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2813,
        2814
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1730": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2816,
        2817
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1731": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1733": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1734": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1736": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1737": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1738": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1740": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "ADD",
      "path": "0"
    },
    "1741": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1743": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1744": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1746": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1747": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F8"
    },
    "1750": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1751": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1752": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1753": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1754": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1755": {
      "op": "SWAP4"
    },
    "1756": {
      "op": "DUP5"
    },
    "1757": {
      "op": "MSTORE"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1760": {
      "op": "SWAP3"
    },
    "1761": {
      "op": "SWAP1"
    },
    "1762": {
      "op": "SWAP3"
    },
    "1763": {
      "op": "AND"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1766": {
      "op": "DUP5"
    },
    "1767": {
      "op": "ADD"
    },
    "1768": {
      "op": "MSTORE"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1771": {
      "op": "DUP4"
    },
    "1772": {
      "op": "ADD"
    },
    "1773": {
      "op": "MSTORE"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1776": {
      "op": "DUP3"
    },
    "1777": {
      "op": "ADD"
    },
    "1778": {
      "op": "MSTORE"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1781": {
      "op": "ADD"
    },
    "1782": {
      "op": "SWAP1"
    },
    "1783": {
      "op": "JUMP"
    },
    "1784": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1785": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1787": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1789": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1790": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1792": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1793": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "SUB",
      "path": "0"
    },
    "1794": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1795": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1796": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1797": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "SUB",
      "path": "0"
    },
    "1798": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1799": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1800": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "GAS",
      "path": "0"
    },
    "1801": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1802": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1803": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1804": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1805": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71A"
    },
    "1808": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1809": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1810": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1812": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1813": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1814": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1815": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1817": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1818": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1819": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "POP",
      "path": "0"
    },
    "1820": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "POP",
      "path": "0"
    },
    "1821": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "POP",
      "path": "0"
    },
    "1822": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1824": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1826": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1827": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "SUB",
      "path": "0"
    },
    "1828": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2791,
        2818
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1829": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2773
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C0"
    },
    "1832": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "jump": "i",
      "offset": [
        2762,
        2819
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1833": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2762,
        2819
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1834": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x40"
    },
    "1836": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1837": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1838": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1840": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1841": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1842": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1844": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1845": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "ADD",
      "path": "0"
    },
    "1846": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1847": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1848": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1849": {
      "op": "DUP9"
    },
    "1850": {
      "op": "SWAP1"
    },
    "1851": {
      "op": "MSTORE"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1854": {
      "op": "DUP6"
    },
    "1855": {
      "op": "AND"
    },
    "1856": {
      "op": "SWAP2"
    },
    "1857": {
      "op": "DUP2"
    },
    "1858": {
      "op": "ADD"
    },
    "1859": {
      "op": "SWAP2"
    },
    "1860": {
      "op": "SWAP1"
    },
    "1861": {
      "op": "SWAP2"
    },
    "1862": {
      "op": "MSTORE"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1865": {
      "op": "DUP2"
    },
    "1866": {
      "op": "ADD"
    },
    "1867": {
      "op": "DUP4"
    },
    "1868": {
      "op": "SWAP1"
    },
    "1869": {
      "op": "MSTORE"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1872": {
      "op": "DUP2"
    },
    "1873": {
      "op": "ADD"
    },
    "1874": {
      "op": "DUP3"
    },
    "1875": {
      "op": "SWAP1"
    },
    "1876": {
      "op": "MSTORE"
    },
    "1877": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1879": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1882": {
      "op": "ADD"
    },
    "1883": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1885": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1887": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1888": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1890": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1891": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "SUB",
      "path": "0"
    },
    "1892": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1893": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1894": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1895": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "SUB",
      "path": "0"
    },
    "1896": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1897": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1898": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "GAS",
      "path": "0"
    },
    "1899": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1900": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1901": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1902": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1903": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77C"
    },
    "1906": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1907": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1908": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1910": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1911": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1912": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1913": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1915": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1916": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1917": {
      "op": "POP"
    },
    "1918": {
      "op": "POP"
    },
    "1919": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1921": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1924": {
      "op": "NOT"
    },
    "1925": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "ADD",
      "path": "0"
    },
    "1926": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1927": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2836,
        2863
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "1928": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "offset": [
        2571,
        2870
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "1929": {
      "op": "POP"
    },
    "1930": {
      "op": "POP"
    },
    "1931": {
      "op": "POP"
    },
    "1932": {
      "op": "POP"
    },
    "1933": {
      "op": "POP"
    },
    "1934": {
      "op": "POP"
    },
    "1935": {
      "op": "POP"
    },
    "1936": {
      "fn": "SimplePaymentChannel.recoverSigner",
      "jump": "o",
      "offset": [
        2571,
        2870
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1937": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        2995,
        3528
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1938": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3097,
        3104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1940": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3118,
        3127
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1941": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3141,
        3150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1943": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3183,
        3186
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 29
    },
    "1944": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3183,
        3193
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1945": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3197,
        3199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x41"
    },
    "1947": {
      "branch": 35,
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3183,
        3199
      ],
      "op": "EQ",
      "path": "0"
    },
    "1948": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3175,
        3200
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A4"
    },
    "1951": {
      "branch": 35,
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3175,
        3200
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1952": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3175,
        3200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1954": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3175,
        3200
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1955": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3175,
        3200
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1956": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3175,
        3200
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1957": {
      "op": "POP"
    },
    "1958": {
      "op": "POP"
    },
    "1959": {
      "op": "POP"
    },
    "1960": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3308,
        3310
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1962": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3299,
        3311
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1963": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3299,
        3311
      ],
      "op": "ADD",
      "path": "0"
    },
    "1964": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3293,
        3312
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1965": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3376,
        3378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1967": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3367,
        3379
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1968": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3367,
        3379
      ],
      "op": "ADD",
      "path": "0"
    },
    "1969": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3361,
        3380
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1970": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3481,
        3483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1972": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3472,
        3484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1973": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3472,
        3484
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1974": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3472,
        3484
      ],
      "op": "ADD",
      "path": "0"
    },
    "1975": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3466,
        3485
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1976": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3463,
        3464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1978": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3458,
        3486
      ],
      "op": "BYTE",
      "path": "0"
    },
    "1979": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3458,
        3486
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1980": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3293,
        3312
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1981": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3293,
        3312
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1982": {
      "fn": "SimplePaymentChannel.splitSignature",
      "offset": [
        3361,
        3380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1983": {
      "fn": "SimplePaymentChannel.splitSignature",
      "jump": "o",
      "offset": [
        2995,
        3528
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1984": {
      "fn": "console.log",
      "offset": [
        6297,
        6433
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1985": {
      "fn": "console.log",
      "offset": [
        6358,
        6429
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 30,
      "value": "0x32E"
    },
    "1988": {
      "fn": "console.log",
      "offset": [
        6421,
        6423
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1989": {
      "fn": "console.log",
      "offset": [
        6425,
        6427
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1990": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1992": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1993": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1995": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "ADD",
      "path": "1"
    },
    "1996": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7D6"
    },
    "1999": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2000": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2001": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2002": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA00"
    },
    "2005": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        6374,
        6428
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2006": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2007": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2009": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2010": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2013": {
      "op": "NOT"
    },
    "2014": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2015": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2016": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SUB",
      "path": "1"
    },
    "2017": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "ADD",
      "path": "1"
    },
    "2018": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2019": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2020": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2021": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2022": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2023": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2025": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2026": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "ADD",
      "path": "1"
    },
    "2027": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2028": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2035": {
      "op": "SHL"
    },
    "2036": {
      "op": "SUB"
    },
    "2037": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "AND",
      "path": "1"
    },
    "2038": {
      "op": "PUSH4",
      "value": "0x319AF333"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2045": {
      "op": "SHL"
    },
    "2046": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "OR",
      "path": "1"
    },
    "2047": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2048": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2049": {
      "fn": "console.log",
      "offset": [
        6358,
        6373
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BA"
    },
    "2052": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        6358,
        6429
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2053": {
      "op": "JUMPDEST"
    },
    "2054": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2061": {
      "op": "SHL"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2064": {
      "op": "MSTORE"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2069": {
      "op": "MSTORE"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2074": {
      "op": "REVERT"
    },
    "2075": {
      "op": "JUMPDEST"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2078": {
      "op": "DUP1"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2081": {
      "op": "DUP4"
    },
    "2082": {
      "op": "DUP6"
    },
    "2083": {
      "op": "SUB"
    },
    "2084": {
      "op": "SLT"
    },
    "2085": {
      "op": "ISZERO"
    },
    "2086": {
      "op": "PUSH2",
      "value": "0x82E"
    },
    "2089": {
      "op": "JUMPI"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2092": {
      "op": "DUP1"
    },
    "2093": {
      "op": "REVERT"
    },
    "2094": {
      "op": "JUMPDEST"
    },
    "2095": {
      "op": "DUP3"
    },
    "2096": {
      "op": "CALLDATALOAD"
    },
    "2097": {
      "op": "SWAP2"
    },
    "2098": {
      "op": "POP"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2101": {
      "op": "DUP4"
    },
    "2102": {
      "op": "ADD"
    },
    "2103": {
      "op": "CALLDATALOAD"
    },
    "2104": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2113": {
      "op": "DUP1"
    },
    "2114": {
      "op": "DUP3"
    },
    "2115": {
      "op": "GT"
    },
    "2116": {
      "op": "ISZERO"
    },
    "2117": {
      "op": "PUSH2",
      "value": "0x84D"
    },
    "2120": {
      "op": "JUMPI"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2123": {
      "op": "DUP1"
    },
    "2124": {
      "op": "REVERT"
    },
    "2125": {
      "op": "JUMPDEST"
    },
    "2126": {
      "op": "DUP2"
    },
    "2127": {
      "op": "DUP6"
    },
    "2128": {
      "op": "ADD"
    },
    "2129": {
      "op": "SWAP2"
    },
    "2130": {
      "op": "POP"
    },
    "2131": {
      "op": "DUP6"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2134": {
      "op": "DUP4"
    },
    "2135": {
      "op": "ADD"
    },
    "2136": {
      "op": "SLT"
    },
    "2137": {
      "op": "PUSH2",
      "value": "0x861"
    },
    "2140": {
      "op": "JUMPI"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2143": {
      "op": "DUP1"
    },
    "2144": {
      "op": "REVERT"
    },
    "2145": {
      "op": "JUMPDEST"
    },
    "2146": {
      "op": "DUP2"
    },
    "2147": {
      "op": "CALLDATALOAD"
    },
    "2148": {
      "op": "DUP2"
    },
    "2149": {
      "op": "DUP2"
    },
    "2150": {
      "op": "GT"
    },
    "2151": {
      "op": "ISZERO"
    },
    "2152": {
      "op": "PUSH2",
      "value": "0x873"
    },
    "2155": {
      "op": "JUMPI"
    },
    "2156": {
      "op": "PUSH2",
      "value": "0x873"
    },
    "2159": {
      "op": "PUSH2",
      "value": "0x805"
    },
    "2162": {
      "jump": "i",
      "op": "JUMP"
    },
    "2163": {
      "op": "JUMPDEST"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2166": {
      "op": "MLOAD"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2169": {
      "op": "DUP3"
    },
    "2170": {
      "op": "ADD"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2173": {
      "op": "NOT"
    },
    "2174": {
      "op": "SWAP1"
    },
    "2175": {
      "op": "DUP2"
    },
    "2176": {
      "op": "AND"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2179": {
      "op": "ADD"
    },
    "2180": {
      "op": "AND"
    },
    "2181": {
      "op": "DUP2"
    },
    "2182": {
      "op": "ADD"
    },
    "2183": {
      "op": "SWAP1"
    },
    "2184": {
      "op": "DUP4"
    },
    "2185": {
      "op": "DUP3"
    },
    "2186": {
      "op": "GT"
    },
    "2187": {
      "op": "DUP2"
    },
    "2188": {
      "op": "DUP4"
    },
    "2189": {
      "op": "LT"
    },
    "2190": {
      "op": "OR"
    },
    "2191": {
      "op": "ISZERO"
    },
    "2192": {
      "op": "PUSH2",
      "value": "0x89B"
    },
    "2195": {
      "op": "JUMPI"
    },
    "2196": {
      "op": "PUSH2",
      "value": "0x89B"
    },
    "2199": {
      "op": "PUSH2",
      "value": "0x805"
    },
    "2202": {
      "jump": "i",
      "op": "JUMP"
    },
    "2203": {
      "op": "JUMPDEST"
    },
    "2204": {
      "op": "DUP2"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2207": {
      "op": "MSTORE"
    },
    "2208": {
      "op": "DUP3"
    },
    "2209": {
      "op": "DUP2"
    },
    "2210": {
      "op": "MSTORE"
    },
    "2211": {
      "op": "DUP9"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2214": {
      "op": "DUP5"
    },
    "2215": {
      "op": "DUP8"
    },
    "2216": {
      "op": "ADD"
    },
    "2217": {
      "op": "ADD"
    },
    "2218": {
      "op": "GT"
    },
    "2219": {
      "op": "ISZERO"
    },
    "2220": {
      "op": "PUSH2",
      "value": "0x8B4"
    },
    "2223": {
      "op": "JUMPI"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2226": {
      "op": "DUP1"
    },
    "2227": {
      "op": "REVERT"
    },
    "2228": {
      "op": "JUMPDEST"
    },
    "2229": {
      "op": "DUP3"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2232": {
      "op": "DUP7"
    },
    "2233": {
      "op": "ADD"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2236": {
      "op": "DUP4"
    },
    "2237": {
      "op": "ADD"
    },
    "2238": {
      "op": "CALLDATACOPY"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2243": {
      "op": "DUP5"
    },
    "2244": {
      "op": "DUP4"
    },
    "2245": {
      "op": "ADD"
    },
    "2246": {
      "op": "ADD"
    },
    "2247": {
      "op": "MSTORE"
    },
    "2248": {
      "op": "DUP1"
    },
    "2249": {
      "op": "SWAP6"
    },
    "2250": {
      "op": "POP"
    },
    "2251": {
      "op": "POP"
    },
    "2252": {
      "op": "POP"
    },
    "2253": {
      "op": "POP"
    },
    "2254": {
      "op": "POP"
    },
    "2255": {
      "op": "POP"
    },
    "2256": {
      "op": "SWAP3"
    },
    "2257": {
      "op": "POP"
    },
    "2258": {
      "op": "SWAP3"
    },
    "2259": {
      "op": "SWAP1"
    },
    "2260": {
      "op": "POP"
    },
    "2261": {
      "jump": "o",
      "op": "JUMP"
    },
    "2262": {
      "op": "JUMPDEST"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2267": {
      "op": "DUP3"
    },
    "2268": {
      "op": "DUP5"
    },
    "2269": {
      "op": "SUB"
    },
    "2270": {
      "op": "SLT"
    },
    "2271": {
      "op": "ISZERO"
    },
    "2272": {
      "op": "PUSH2",
      "value": "0x8E8"
    },
    "2275": {
      "op": "JUMPI"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2278": {
      "op": "DUP1"
    },
    "2279": {
      "op": "REVERT"
    },
    "2280": {
      "op": "JUMPDEST"
    },
    "2281": {
      "op": "POP"
    },
    "2282": {
      "op": "CALLDATALOAD"
    },
    "2283": {
      "op": "SWAP2"
    },
    "2284": {
      "op": "SWAP1"
    },
    "2285": {
      "op": "POP"
    },
    "2286": {
      "jump": "o",
      "op": "JUMP"
    },
    "2287": {
      "op": "JUMPDEST"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2290": {
      "op": "DUP1"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2293": {
      "op": "DUP4"
    },
    "2294": {
      "op": "DUP6"
    },
    "2295": {
      "op": "SUB"
    },
    "2296": {
      "op": "SLT"
    },
    "2297": {
      "op": "ISZERO"
    },
    "2298": {
      "op": "PUSH2",
      "value": "0x902"
    },
    "2301": {
      "op": "JUMPI"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2304": {
      "op": "DUP1"
    },
    "2305": {
      "op": "REVERT"
    },
    "2306": {
      "op": "JUMPDEST"
    },
    "2307": {
      "op": "DUP3"
    },
    "2308": {
      "op": "CALLDATALOAD"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2315": {
      "op": "SHL"
    },
    "2316": {
      "op": "SUB"
    },
    "2317": {
      "op": "DUP2"
    },
    "2318": {
      "op": "AND"
    },
    "2319": {
      "op": "DUP2"
    },
    "2320": {
      "op": "EQ"
    },
    "2321": {
      "op": "PUSH2",
      "value": "0x919"
    },
    "2324": {
      "op": "JUMPI"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2327": {
      "op": "DUP1"
    },
    "2328": {
      "op": "REVERT"
    },
    "2329": {
      "op": "JUMPDEST"
    },
    "2330": {
      "op": "SWAP5"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2333": {
      "op": "SWAP4"
    },
    "2334": {
      "op": "SWAP1"
    },
    "2335": {
      "op": "SWAP4"
    },
    "2336": {
      "op": "ADD"
    },
    "2337": {
      "op": "CALLDATALOAD"
    },
    "2338": {
      "op": "SWAP4"
    },
    "2339": {
      "op": "POP"
    },
    "2340": {
      "op": "POP"
    },
    "2341": {
      "op": "POP"
    },
    "2342": {
      "jump": "o",
      "op": "JUMP"
    },
    "2343": {
      "op": "JUMPDEST"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2346": {
      "op": "DUP2"
    },
    "2347": {
      "op": "MLOAD"
    },
    "2348": {
      "op": "DUP1"
    },
    "2349": {
      "op": "DUP5"
    },
    "2350": {
      "op": "MSTORE"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2353": {
      "op": "JUMPDEST"
    },
    "2354": {
      "op": "DUP2"
    },
    "2355": {
      "op": "DUP2"
    },
    "2356": {
      "op": "LT"
    },
    "2357": {
      "op": "ISZERO"
    },
    "2358": {
      "op": "PUSH2",
      "value": "0x94D"
    },
    "2361": {
      "op": "JUMPI"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2364": {
      "op": "DUP2"
    },
    "2365": {
      "op": "DUP6"
    },
    "2366": {
      "op": "ADD"
    },
    "2367": {
      "op": "DUP2"
    },
    "2368": {
      "op": "ADD"
    },
    "2369": {
      "op": "MLOAD"
    },
    "2370": {
      "op": "DUP7"
    },
    "2371": {
      "op": "DUP4"
    },
    "2372": {
      "op": "ADD"
    },
    "2373": {
      "op": "DUP3"
    },
    "2374": {
      "op": "ADD"
    },
    "2375": {
      "op": "MSTORE"
    },
    "2376": {
      "op": "ADD"
    },
    "2377": {
      "op": "PUSH2",
      "value": "0x931"
    },
    "2380": {
      "op": "JUMP"
    },
    "2381": {
      "op": "JUMPDEST"
    },
    "2382": {
      "op": "DUP2"
    },
    "2383": {
      "op": "DUP2"
    },
    "2384": {
      "op": "GT"
    },
    "2385": {
      "op": "ISZERO"
    },
    "2386": {
      "op": "PUSH2",
      "value": "0x95F"
    },
    "2389": {
      "op": "JUMPI"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2394": {
      "op": "DUP4"
    },
    "2395": {
      "op": "DUP8"
    },
    "2396": {
      "op": "ADD"
    },
    "2397": {
      "op": "ADD"
    },
    "2398": {
      "op": "MSTORE"
    },
    "2399": {
      "op": "JUMPDEST"
    },
    "2400": {
      "op": "POP"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2403": {
      "op": "ADD"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2406": {
      "op": "NOT"
    },
    "2407": {
      "op": "AND"
    },
    "2408": {
      "op": "SWAP3"
    },
    "2409": {
      "op": "SWAP1"
    },
    "2410": {
      "op": "SWAP3"
    },
    "2411": {
      "op": "ADD"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2414": {
      "op": "ADD"
    },
    "2415": {
      "op": "SWAP3"
    },
    "2416": {
      "op": "SWAP2"
    },
    "2417": {
      "op": "POP"
    },
    "2418": {
      "op": "POP"
    },
    "2419": {
      "jump": "o",
      "op": "JUMP"
    },
    "2420": {
      "op": "JUMPDEST"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2423": {
      "op": "DUP2"
    },
    "2424": {
      "op": "MSTORE"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2427": {
      "op": "PUSH2",
      "value": "0x987"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2432": {
      "op": "DUP4"
    },
    "2433": {
      "op": "ADD"
    },
    "2434": {
      "op": "DUP6"
    },
    "2435": {
      "op": "PUSH2",
      "value": "0x927"
    },
    "2438": {
      "jump": "i",
      "op": "JUMP"
    },
    "2439": {
      "op": "JUMPDEST"
    },
    "2440": {
      "op": "SWAP1"
    },
    "2441": {
      "op": "POP"
    },
    "2442": {
      "op": "DUP3"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2445": {
      "op": "DUP4"
    },
    "2446": {
      "op": "ADD"
    },
    "2447": {
      "op": "MSTORE"
    },
    "2448": {
      "op": "SWAP4"
    },
    "2449": {
      "op": "SWAP3"
    },
    "2450": {
      "op": "POP"
    },
    "2451": {
      "op": "POP"
    },
    "2452": {
      "op": "POP"
    },
    "2453": {
      "jump": "o",
      "op": "JUMP"
    },
    "2454": {
      "op": "JUMPDEST"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2457": {
      "op": "DUP2"
    },
    "2458": {
      "op": "MSTORE"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2461": {
      "op": "PUSH2",
      "value": "0x9A9"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2466": {
      "op": "DUP4"
    },
    "2467": {
      "op": "ADD"
    },
    "2468": {
      "op": "DUP5"
    },
    "2469": {
      "op": "PUSH2",
      "value": "0x927"
    },
    "2472": {
      "jump": "i",
      "op": "JUMP"
    },
    "2473": {
      "op": "JUMPDEST"
    },
    "2474": {
      "op": "SWAP4"
    },
    "2475": {
      "op": "SWAP3"
    },
    "2476": {
      "op": "POP"
    },
    "2477": {
      "op": "POP"
    },
    "2478": {
      "op": "POP"
    },
    "2479": {
      "jump": "o",
      "op": "JUMP"
    },
    "2480": {
      "op": "JUMPDEST"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2483": {
      "op": "SWAP3"
    },
    "2484": {
      "op": "SWAP1"
    },
    "2485": {
      "op": "SWAP3"
    },
    "2486": {
      "op": "SHL"
    },
    "2487": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2500": {
      "op": "NOT"
    },
    "2501": {
      "op": "AND"
    },
    "2502": {
      "op": "DUP3"
    },
    "2503": {
      "op": "MSTORE"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2506": {
      "op": "DUP3"
    },
    "2507": {
      "op": "ADD"
    },
    "2508": {
      "op": "MSTORE"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "2511": {
      "op": "ADD"
    },
    "2512": {
      "op": "SWAP1"
    },
    "2513": {
      "jump": "o",
      "op": "JUMP"
    },
    "2514": {
      "op": "JUMPDEST"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2517": {
      "op": "DUP2"
    },
    "2518": {
      "op": "MSTORE"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2521": {
      "op": "PUSH2",
      "value": "0x9E5"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2526": {
      "op": "DUP4"
    },
    "2527": {
      "op": "ADD"
    },
    "2528": {
      "op": "DUP7"
    },
    "2529": {
      "op": "PUSH2",
      "value": "0x927"
    },
    "2532": {
      "jump": "i",
      "op": "JUMP"
    },
    "2533": {
      "op": "JUMPDEST"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2540": {
      "op": "SHL"
    },
    "2541": {
      "op": "SUB"
    },
    "2542": {
      "op": "SWAP5"
    },
    "2543": {
      "op": "SWAP1"
    },
    "2544": {
      "op": "SWAP5"
    },
    "2545": {
      "op": "AND"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2548": {
      "op": "DUP4"
    },
    "2549": {
      "op": "ADD"
    },
    "2550": {
      "op": "MSTORE"
    },
    "2551": {
      "op": "POP"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2554": {
      "op": "ADD"
    },
    "2555": {
      "op": "MSTORE"
    },
    "2556": {
      "op": "SWAP2"
    },
    "2557": {
      "op": "SWAP1"
    },
    "2558": {
      "op": "POP"
    },
    "2559": {
      "jump": "o",
      "op": "JUMP"
    },
    "2560": {
      "op": "JUMPDEST"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2563": {
      "op": "DUP2"
    },
    "2564": {
      "op": "MSTORE"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2567": {
      "op": "PUSH2",
      "value": "0xA13"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2572": {
      "op": "DUP4"
    },
    "2573": {
      "op": "ADD"
    },
    "2574": {
      "op": "DUP6"
    },
    "2575": {
      "op": "PUSH2",
      "value": "0x927"
    },
    "2578": {
      "jump": "i",
      "op": "JUMP"
    },
    "2579": {
      "op": "JUMPDEST"
    },
    "2580": {
      "op": "SWAP1"
    },
    "2581": {
      "op": "POP"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2584": {
      "op": "DUP1"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2587": {
      "op": "SHL"
    },
    "2588": {
      "op": "SUB"
    },
    "2589": {
      "op": "DUP4"
    },
    "2590": {
      "op": "AND"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2593": {
      "op": "DUP4"
    },
    "2594": {
      "op": "ADD"
    },
    "2595": {
      "op": "MSTORE"
    },
    "2596": {
      "op": "SWAP4"
    },
    "2597": {
      "op": "SWAP3"
    },
    "2598": {
      "op": "POP"
    },
    "2599": {
      "op": "POP"
    },
    "2600": {
      "op": "POP"
    },
    "2601": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "3afcf41ddec5d757fdf7edbcd7cbc45bd209ce39",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.14;\nimport \"./console.sol\";\n\ncontract SimplePaymentChannel {\n    address payable public sender; // The account sending payments.\n    address payable public recipient; // The account receiving the payments.\n    uint256 public expiration; // Timeout in case the recipient never closes.\n\n    constructor(address payable recipientAddress, uint256 duration) payable {\n        sender = payable(msg.sender);\n        recipient = recipientAddress;\n        expiration = block.timestamp + duration;\n    }\n\n    /// the sender can extend the expiration at any time\n    function extend(uint256 newExpiration) external {\n        require(msg.sender == sender);\n        require(newExpiration > expiration);\n        expiration = newExpiration;\n    }\n\n    /// if the timeout is reached without the recipient closing the channel,\n    /// then the Ether is released back to the sender.\n    function claimTimeout() external {\n        // commented the require in order to be able to call the function\n        //require(block.timestamp >= expiration);\n        selfdestruct(sender);\n    }\n\n    function newChannel(address payable _recipientAddress, uint256 _expiration) external payable {\n        sender = payable(msg.sender);\n        recipient = _recipientAddress;\n        expiration = _expiration;\n    }\n\n    /// the recipient can close the channel at any time by presenting a\n    /// signed amount from the sender. the recipient will be sent that amount,\n    /// and the remainder will go back to the sender\n    function close(uint256 amount, bytes memory signature) external {\n        console.log(\"signature=, amount=%d\",amount);\n        console.logBytes(signature);\n        require(msg.sender == recipient,\"not recipient\");\n        require(isValidSignature(amount, signature),\"invalid signature\");\n        recipient.transfer(amount);\n        selfdestruct(sender);\n    }\n\n    function isValidSignature(uint256 amount, bytes memory signature)\n        internal\n        view\n        returns (bool)\n    {\n        console.log(\"Address=%s,amount=%d\",address(this),amount);\n        console.log(\"message =\");\n        console.logBytes32(keccak256(abi.encodePacked(address(this), amount)));\n        console.log(\"message prefixed=\");\n        console.logBytes32(prefixed(keccak256(abi.encodePacked(address(this), amount))));\n\n        bytes32 message = prefixed(keccak256(abi.encodePacked(address(this), amount)));\n        // check that the signature is from the payment sender\n        return recoverSigner(message, signature) == sender;\n    }\n\n    function recoverSigner(bytes32 message, bytes memory sig)\n        internal\n        view\n        returns (address)\n    {\n        (uint8 v, bytes32 r, bytes32 s) = splitSignature(sig);\n        console.log(\"Address is %s\", ecrecover(message, v, r, s));\n        return ecrecover(message, v, r, s);\n    }\n\n    /// All functions below this are just taken from the chapter\n    /// 'creating and verifying signatures' chapter.\n\n    function splitSignature(bytes memory sig)\n        internal\n        pure\n        returns (\n            uint8 v,\n            bytes32 r,\n            bytes32 s\n        )\n    {\n        require(sig.length == 65);\n        assembly {\n            // first 32 bytes, after the length prefix\n            r := mload(add(sig, 32))\n            // second 32 bytes\n            s := mload(add(sig, 64))\n            // final byte (first byte of the next 32 bytes)\n            v := byte(0, mload(add(sig, 96)))\n        }\n        return (v, r, s);\n    }\n\n\n    /// builds a prefixed hash to mimic the behavior of eth_sign.\n    function prefixed(bytes32 hash) internal view returns (bytes32) {\n        console.log(\"prefixed encodeP=\");\n        console.logBytes(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n        return\n            keccak256(\n                abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash)\n            );\n    }\n}\n",
  "sourceMap": "85:3845:0:-:0;;;345:204;;;;;;;;;;;;;;;;;;:::i;:::-;427:6;:28;;444:10;-1:-1:-1;;;;;;427:28:0;;;;;;;-1:-1:-1;465:28:0;;;;;-1:-1:-1;;;;;465:28:0;;;;;516:26;534:8;516:15;:26;:::i;:::-;503:10;:39;-1:-1:-1;85:3845:0;;-1:-1:-1;85:3845:0;14:359:2;101:6;109;162:2;150:9;141:7;137:23;133:32;130:52;;;178:1;175;168:12;130:52;204:16;;-1:-1:-1;;;;;249:31:2;;239:42;;229:70;;295:1;292;285:12;229:70;363:2;348:18;;;;342:25;318:5;;342:25;;-1:-1:-1;;;14:359:2:o;378:225::-;418:3;449:1;445:6;442:1;439:13;436:136;;;494:10;489:3;485:20;482:1;475:31;529:4;526:1;519:15;557:4;554:1;547:15;436:136;-1:-1:-1;588:9:2;;378:225::o;:::-;85:3845:0;;;;;;",
  "sourcePath": "contracts/SimplePaymentChannel.sol",
  "type": "contract"
}