{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_sig",
          "type": "bytes"
        }
      ],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expiresAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getEthSignedHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiver",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sender",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_sig",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/marius/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/security/ReentrancyGuard.sol",
    "1": "/home/marius/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Strings.sol",
    "2": "/home/marius/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/cryptography/ECDSA.sol",
    "9": "contracts/UnidirectionalPayment.sol"
  },
  "ast": {
    "absolutePath": "contracts/UnidirectionalPayment.sol",
    "exportedSymbols": {
      "ECDSA": [
        10598
      ],
      "ReentrancyGuard": [
        10950
      ],
      "Strings": [
        11153
      ],
      "UniDirectionalPaymentChannel": [
        2127
      ],
      "console": [
        10191
      ]
    },
    "id": 2128,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1909,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:9"
      },
      {
        "absolutePath": "/home/marius/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "id": 1910,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2128,
        "sourceUnit": 10599,
        "src": "57:62:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/marius/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 1911,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2128,
        "sourceUnit": 10951,
        "src": "120:62:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/console.sol",
        "file": "./console.sol",
        "id": 1912,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2128,
        "sourceUnit": 10192,
        "src": "183:23:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1913,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10950,
              "src": "249:15:9"
            },
            "id": 1914,
            "nodeType": "InheritanceSpecifier",
            "src": "249:15:9"
          }
        ],
        "canonicalName": "UniDirectionalPaymentChannel",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2127,
        "linearizedBaseContracts": [
          2127,
          10950
        ],
        "name": "UniDirectionalPaymentChannel",
        "nameLocation": "217:28:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 1917,
            "libraryName": {
              "id": 1915,
              "name": "ECDSA",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10598,
              "src": "277:5:9"
            },
            "nodeType": "UsingForDirective",
            "src": "271:24:9",
            "typeName": {
              "id": 1916,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "287:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "67e404ce",
            "id": 1919,
            "mutability": "mutable",
            "name": "sender",
            "nameLocation": "324:6:9",
            "nodeType": "VariableDeclaration",
            "scope": 2127,
            "src": "301:29:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1918,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "301:15:9",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f7260d3e",
            "id": 1921,
            "mutability": "mutable",
            "name": "receiver",
            "nameLocation": "359:8:9",
            "nodeType": "VariableDeclaration",
            "scope": 2127,
            "src": "336:31:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1920,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "336:15:9",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1930,
            "mutability": "constant",
            "name": "DURATION",
            "nameLocation": "399:8:9",
            "nodeType": "VariableDeclaration",
            "scope": 2127,
            "src": "374:52:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1922,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "374:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              },
              "id": 1929,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_10080_by_1",
                  "typeString": "int_const 10080"
                },
                "id": 1927,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "commonType": {
                    "typeIdentifier": "t_rational_168_by_1",
                    "typeString": "int_const 168"
                  },
                  "id": 1925,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "37",
                    "id": 1923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "410:1:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_7_by_1",
                      "typeString": "int_const 7"
                    },
                    "value": "7"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "hexValue": "3234",
                    "id": 1924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "414:2:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_24_by_1",
                      "typeString": "int_const 24"
                    },
                    "value": "24"
                  },
                  "src": "410:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_168_by_1",
                    "typeString": "int_const 168"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "hexValue": "3630",
                  "id": 1926,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "419:2:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_60_by_1",
                    "typeString": "int_const 60"
                  },
                  "value": "60"
                },
                "src": "410:11:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10080_by_1",
                  "typeString": "int_const 10080"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3630",
                "id": 1928,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "424:2:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "410:16:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "8622a689",
            "id": 1932,
            "mutability": "mutable",
            "name": "expiresAt",
            "nameLocation": "447:9:9",
            "nodeType": "VariableDeclaration",
            "scope": 2127,
            "src": "432:24:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1931,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "432:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1966,
              "nodeType": "Block",
              "src": "510:192:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1938,
                          "name": "_receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1934,
                          "src": "528:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "549:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "541:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1939,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "541:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "541:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "528:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7265636569766572203d207a65726f2061646472657373",
                        "id": 1944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "553:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f440bffc6d6240041521a2772619295d42295e6479db92a08e75b293142e62eb",
                          "typeString": "literal_string \"receiver = zero address\""
                        },
                        "value": "receiver = zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f440bffc6d6240041521a2772619295d42295e6479db92a08e75b293142e62eb",
                          "typeString": "literal_string \"receiver = zero address\""
                        }
                      ],
                      "id": 1937,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "520:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "520:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1946,
                  "nodeType": "ExpressionStatement",
                  "src": "520:59:9"
                },
                {
                  "expression": {
                    "id": 1953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1947,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1919,
                      "src": "589:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1950,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "606:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "606:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "598:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 1948,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "598:8:9",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "598:19:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "589:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1954,
                  "nodeType": "ExpressionStatement",
                  "src": "589:28:9"
                },
                {
                  "expression": {
                    "id": 1957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1955,
                      "name": "receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1921,
                      "src": "627:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1956,
                      "name": "_receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1934,
                      "src": "638:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "627:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1958,
                  "nodeType": "ExpressionStatement",
                  "src": "627:20:9"
                },
                {
                  "expression": {
                    "id": 1964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1959,
                      "name": "expiresAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1932,
                      "src": "657:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1960,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "669:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "669:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1962,
                        "name": "DURATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1930,
                        "src": "687:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "669:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "657:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1965,
                  "nodeType": "ExpressionStatement",
                  "src": "657:38:9"
                }
              ]
            },
            "id": 1967,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1934,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "491:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1967,
                  "src": "475:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "475:15:9",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "474:27:9"
            },
            "returnParameters": {
              "id": 1936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "510:0:9"
            },
            "scope": 2127,
            "src": "463:239:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1985,
              "nodeType": "Block",
              "src": "774:189:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1979,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "940:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UniDirectionalPaymentChannel_$2127",
                                  "typeString": "contract UniDirectionalPaymentChannel"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UniDirectionalPaymentChannel_$2127",
                                  "typeString": "contract UniDirectionalPaymentChannel"
                                }
                              ],
                              "id": 1978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "932:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1977,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "932:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "932:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1981,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1969,
                            "src": "947:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1975,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "915:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "915:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "915:40:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1974,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "905:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "905:51:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1973,
                  "id": 1984,
                  "nodeType": "Return",
                  "src": "898:58:9"
                }
              ]
            },
            "id": 1986,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getHash",
            "nameLocation": "717:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1969,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "734:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1986,
                  "src": "726:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "725:17:9"
            },
            "returnParameters": {
              "id": 1973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1972,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1986,
                  "src": "765:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1971,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "765:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "764:9:9"
            },
            "scope": 2127,
            "src": "708:255:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1997,
              "nodeType": "Block",
              "src": "1035:41:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1994,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1988,
                        "src": "1061:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1993,
                      "name": "_getHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1986,
                      "src": "1052:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256) view returns (bytes32)"
                      }
                    },
                    "id": 1995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1052:17:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1992,
                  "id": 1996,
                  "nodeType": "Return",
                  "src": "1045:24:9"
                }
              ]
            },
            "functionSelector": "6b2fafa9",
            "id": 1998,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHash",
            "nameLocation": "978:7:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1988,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "994:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "986:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "985:17:9"
            },
            "returnParameters": {
              "id": 1992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1991,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "1026:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1990,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1025:9:9"
            },
            "scope": 2127,
            "src": "969:107:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2011,
              "nodeType": "Block",
              "src": "1157:66:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2006,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2000,
                            "src": "1183:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2005,
                          "name": "_getHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1986,
                          "src": "1174:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes32_$",
                            "typeString": "function (uint256) view returns (bytes32)"
                          }
                        },
                        "id": 2007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1174:17:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 2008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toEthSignedMessageHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10555,
                      "src": "1174:40:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 2009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1174:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2004,
                  "id": 2010,
                  "nodeType": "Return",
                  "src": "1167:49:9"
                }
              ]
            },
            "id": 2012,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getEthSignedHash",
            "nameLocation": "1091:17:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2000,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1117:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "1109:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1108:17:9"
            },
            "returnParameters": {
              "id": 2004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2003,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2012,
                  "src": "1148:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2002,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1148:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1147:9:9"
            },
            "scope": 2127,
            "src": "1082:141:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2023,
              "nodeType": "Block",
              "src": "1304:50:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2020,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2014,
                        "src": "1339:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2019,
                      "name": "_getEthSignedHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2012,
                      "src": "1321:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256) view returns (bytes32)"
                      }
                    },
                    "id": 2021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1321:26:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2018,
                  "id": 2022,
                  "nodeType": "Return",
                  "src": "1314:33:9"
                }
              ]
            },
            "functionSelector": "552f50b6",
            "id": 2024,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEthSignedHash",
            "nameLocation": "1238:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2014,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1263:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2024,
                  "src": "1255:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1254:17:9"
            },
            "returnParameters": {
              "id": 2018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2017,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2024,
                  "src": "1295:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2016,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1295:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1294:9:9"
            },
            "scope": 2127,
            "src": "1229:125:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2042,
              "nodeType": "Block",
              "src": "1469:74:9",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 2037,
                          "name": "_sig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2028,
                          "src": "1521:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 2034,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2026,
                              "src": "1504:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2033,
                            "name": "_getEthSignedHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2012,
                            "src": "1486:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (uint256) view returns (bytes32)"
                            }
                          },
                          "id": 2035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1486:26:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 2036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recover",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10347,
                        "src": "1486:34:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes memory) pure returns (address)"
                        }
                      },
                      "id": 2038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1486:40:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2039,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1919,
                      "src": "1530:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1486:50:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2032,
                  "id": 2041,
                  "nodeType": "Return",
                  "src": "1479:57:9"
                }
              ]
            },
            "id": 2043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verify",
            "nameLocation": "1369:7:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2026,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1385:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2043,
                  "src": "1377:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2028,
                  "mutability": "mutable",
                  "name": "_sig",
                  "nameLocation": "1407:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2043,
                  "src": "1394:17:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2027,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1394:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1376:36:9"
            },
            "returnParameters": {
              "id": 2032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2031,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2043,
                  "src": "1459:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2030,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1458:6:9"
            },
            "scope": 2127,
            "src": "1360:183:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2057,
              "nodeType": "Block",
              "src": "1658:46:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2053,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2045,
                        "src": "1683:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2054,
                        "name": "_sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2047,
                        "src": "1692:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2052,
                      "name": "_verify",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2043,
                      "src": "1675:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256,bytes memory) view returns (bool)"
                      }
                    },
                    "id": 2055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1675:22:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2051,
                  "id": 2056,
                  "nodeType": "Return",
                  "src": "1668:29:9"
                }
              ]
            },
            "functionSelector": "85852ce4",
            "id": 2058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "1558:6:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2045,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1573:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "1565:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2047,
                  "mutability": "mutable",
                  "name": "_sig",
                  "nameLocation": "1595:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "1582:17:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2046,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1564:36:9"
            },
            "returnParameters": {
              "id": 2051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2050,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "1648:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2049,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1648:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1647:6:9"
            },
            "scope": 2127,
            "src": "1549:155:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2101,
              "nodeType": "Block",
              "src": "1783:254:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2068,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1801:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1801:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2070,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1921,
                          "src": "1815:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1801:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "217265636569766572",
                        "id": 2072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1825:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec547462b5a8f6ef3ea09a814c111bddff3f32777971e6951908cbb867cb29db",
                          "typeString": "literal_string \"!receiver\""
                        },
                        "value": "!receiver"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec547462b5a8f6ef3ea09a814c111bddff3f32777971e6951908cbb867cb29db",
                          "typeString": "literal_string \"!receiver\""
                        }
                      ],
                      "id": 2067,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1793:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1793:44:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2074,
                  "nodeType": "ExpressionStatement",
                  "src": "1793:44:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2077,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2060,
                            "src": "1863:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2078,
                            "name": "_sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2062,
                            "src": "1872:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2076,
                          "name": "_verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "1855:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256,bytes memory) view returns (bool)"
                          }
                        },
                        "id": 2079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1855:22:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420736967",
                        "id": 2080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1879:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a6b0790bbd848a2a92b60a8366f1861baba485c509e201e5c381bc0e0bc5af2",
                          "typeString": "literal_string \"invalid sig\""
                        },
                        "value": "invalid sig"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a6b0790bbd848a2a92b60a8366f1861baba485c509e201e5c381bc0e0bc5af2",
                          "typeString": "literal_string \"invalid sig\""
                        }
                      ],
                      "id": 2075,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1847:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1847:46:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2082,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:46:9"
                },
                {
                  "assignments": [
                    2084,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2084,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "1910:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2101,
                      "src": "1905:9:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2083,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1905:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2091,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 2089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1950:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 2085,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1921,
                          "src": "1920:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1920:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 2088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 2087,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2060,
                          "src": "1941:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1920:29:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 2090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1920:33:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1904:49:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2093,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2084,
                        "src": "1971:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 2094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1977:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 2092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1963:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1963:37:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2096,
                  "nodeType": "ExpressionStatement",
                  "src": "1963:37:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2098,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1919,
                        "src": "2023:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2097,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "2010:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 2099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2010:20:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2100,
                  "nodeType": "ExpressionStatement",
                  "src": "2010:20:9"
                }
              ]
            },
            "functionSelector": "415ffba7",
            "id": 2102,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2065,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2064,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10949,
                  "src": "1770:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1770:12:9"
              }
            ],
            "name": "close",
            "nameLocation": "1719:5:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2060,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1733:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2102,
                  "src": "1725:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1725:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2062,
                  "mutability": "mutable",
                  "name": "_sig",
                  "nameLocation": "1755:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2102,
                  "src": "1742:17:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2061,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1742:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1724:36:9"
            },
            "returnParameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1783:0:9"
            },
            "scope": 2127,
            "src": "1710:327:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2125,
              "nodeType": "Block",
              "src": "2070:146:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2106,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2088:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2088:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2108,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1919,
                          "src": "2102:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2088:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2173656e646572",
                        "id": 2110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2110:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba3731b74be2e577d98006e247e4c0f891336a09a838720fda4da4748c2578eb",
                          "typeString": "literal_string \"!sender\""
                        },
                        "value": "!sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba3731b74be2e577d98006e247e4c0f891336a09a838720fda4da4748c2578eb",
                          "typeString": "literal_string \"!sender\""
                        }
                      ],
                      "id": 2105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2080:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2080:40:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2112,
                  "nodeType": "ExpressionStatement",
                  "src": "2080:40:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2114,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2138:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2138:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2116,
                          "name": "expiresAt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1932,
                          "src": "2157:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2138:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2165787069726564",
                        "id": 2118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2168:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9091132a5c2a8c35e8b3a3e0ffe77fee60cf45406a9f88d94844a713a27968b2",
                          "typeString": "literal_string \"!expired\""
                        },
                        "value": "!expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9091132a5c2a8c35e8b3a3e0ffe77fee60cf45406a9f88d94844a713a27968b2",
                          "typeString": "literal_string \"!expired\""
                        }
                      ],
                      "id": 2113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2130:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2130:49:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2120,
                  "nodeType": "ExpressionStatement",
                  "src": "2130:49:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2122,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1919,
                        "src": "2202:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2121,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "2189:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 2123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2189:20:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2124,
                  "nodeType": "ExpressionStatement",
                  "src": "2189:20:9"
                }
              ]
            },
            "functionSelector": "ea8a1af0",
            "id": 2126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "2052:6:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2058:2:9"
            },
            "returnParameters": {
              "id": 2104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2070:0:9"
            },
            "scope": 2127,
            "src": "2043:173:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2128,
        "src": "208:2010:9",
        "usedErrors": []
      }
    ],
    "src": "32:2187:9"
  },
  "bytecode": "6080604052604051610a44380380610a44833981016040819052610022916100c0565b60016000556001600160a01b0381166100815760405162461bcd60e51b815260206004820152601760248201527f7265636569766572203d207a65726f2061646472657373000000000000000000604482015260640160405180910390fd5b60018054336001600160a01b031991821617909155600280549091166001600160a01b0383161790556100b762093a80426100f0565b60035550610116565b6000602082840312156100d257600080fd5b81516001600160a01b03811681146100e957600080fd5b9392505050565b6000821982111561011157634e487b7160e01b600052601160045260246000fd5b500190565b61091f806101256000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806385852ce41161005b57806385852ce4146101065780638622a68914610129578063ea8a1af014610132578063f7260d3e1461013a57600080fd5b8063415ffba71461008d578063552f50b6146100a257806367e404ce146100c85780636b2fafa9146100f3575b600080fd5b6100a061009b3660046107d9565b61014d565b005b6100b56100b0366004610894565b6102db565b6040519081526020015b60405180910390f35b6001546100db906001600160a01b031681565b6040516001600160a01b0390911681526020016100bf565b6100b5610101366004610894565b6102ec565b6101196101143660046107d9565b6102f7565b60405190151581526020016100bf565b6100b560035481565b6100a061030a565b6002546100db906001600160a01b031681565b6002600054036101a45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000819055546001600160a01b031633146101ef5760405162461bcd60e51b815260206004820152600960248201526810b932b1b2b4bb32b960b91b604482015260640161019b565b6101f9828261038b565b6102335760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69642073696760a81b604482015260640161019b565b6002546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610280576040519150601f19603f3d011682016040523d82523d6000602084013e610285565b606091505b50509050806102cd5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640161019b565b6001546001600160a01b0316ff5b60006102e6826103be565b92915050565b60006102e6826103d1565b6000610303838361038b565b9392505050565b6001546001600160a01b0316331461034e5760405162461bcd60e51b815260206004820152600760248201526610b9b2b73232b960c91b604482015260640161019b565b6003544210156102cd5760405162461bcd60e51b815260206004820152600860248201526708595e1c1a5c995960c21b604482015260640161019b565b6001546000906001600160a01b03166103ad836103a7866103be565b90610417565b6001600160a01b0316149392505050565b60006102e66103cc836103d1565b61043b565b6040516bffffffffffffffffffffffff193060601b166020820152603481018290526000906054015b604051602081830303815290604052805190602001209050919050565b60008060006104268585610476565b91509150610433816104e4565b509392505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c016103fa565b60008082516041036104ac5760208301516040840151606085015160001a6104a08782858561069d565b945094505050506104dd565b82516040036104d557602083015160408401516104ca86838361078a565b9350935050506104dd565b506000905060025b9250929050565b60008160048111156104f8576104f86108ad565b036105005750565b6001816004811115610514576105146108ad565b036105615760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161019b565b6002816004811115610575576105756108ad565b036105c25760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161019b565b60038160048111156105d6576105d66108ad565b0361062e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161019b565b6004816004811115610642576106426108ad565b0361069a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161019b565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156106d45750600090506003610781565b8460ff16601b141580156106ec57508460ff16601c14155b156106fd5750600090506004610781565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610751573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661077a57600060019250925050610781565b9150600090505b94509492505050565b6000806001600160ff1b038316816107a760ff86901c601b6108c3565b90506107b58782888561069d565b935093505050935093915050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156107ec57600080fd5b82359150602083013567ffffffffffffffff8082111561080b57600080fd5b818501915085601f83011261081f57600080fd5b813581811115610831576108316107c3565b604051601f8201601f19908116603f01168101908382118183101715610859576108596107c3565b8160405282815288602084870101111561087257600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156108a657600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600082198211156108e457634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220d5e34a103bdbd0bac0301f8937a8f7935d9f0a10750effa2dd4c13f8f386edf564736f6c634300080e0033",
  "bytecodeSha1": "8382bd329dfb46587fab1b3af168ce006216d240",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "UniDirectionalPaymentChannel",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {
        "ECDSA._throwError": {
          "34": [
            616,
            645,
            false
          ],
          "35": [
            712,
            750,
            false
          ],
          "36": [
            821,
            865,
            false
          ],
          "37": [
            943,
            982,
            false
          ],
          "38": [
            1063,
            1102,
            false
          ]
        },
        "ECDSA.tryRecover": {
          "32": [
            2554,
            2576,
            false
          ],
          "33": [
            3036,
            3058,
            false
          ],
          "39": [
            6753,
            6832,
            false
          ],
          "40": [
            6923,
            6930,
            false
          ],
          "41": [
            6934,
            6941,
            false
          ],
          "42": [
            7168,
            7188,
            false
          ]
        }
      },
      "9": {
        "UniDirectionalPaymentChannel.cancel": {
          "30": [
            2088,
            2108,
            true
          ],
          "31": [
            2138,
            2166,
            true
          ]
        },
        "UniDirectionalPaymentChannel.close": {
          "27": [
            1801,
            1823,
            true
          ],
          "28": [
            1855,
            1877,
            true
          ],
          "29": [
            1971,
            1975,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {},
      "2": {
        "ECDSA._throwError": {
          "18": [
            766,
            800
          ],
          "19": [
            881,
            922
          ],
          "20": [
            998,
            1042
          ],
          "21": [
            1118,
            1162
          ]
        },
        "ECDSA.recover": {
          "12": [
            4484,
            4502
          ],
          "13": [
            4512,
            4528
          ]
        },
        "ECDSA.toEthSignedMessageHash": {
          "14": [
            8194,
            8270
          ]
        },
        "ECDSA.tryRecover": {
          "15": [
            2983,
            3015
          ],
          "16": [
            3388,
            3418
          ],
          "17": [
            3449,
            3505
          ],
          "22": [
            6848,
            6899
          ],
          "23": [
            6957,
            7008
          ],
          "24": [
            7204,
            7254
          ],
          "25": [
            7275,
            7312
          ],
          "26": [
            5086,
            5118
          ]
        }
      },
      "9": {
        "UniDirectionalPaymentChannel._getEthSignedHash": {
          "10": [
            1167,
            1216
          ]
        },
        "UniDirectionalPaymentChannel._getHash": {
          "11": [
            898,
            956
          ]
        },
        "UniDirectionalPaymentChannel._verify": {
          "9": [
            1479,
            1536
          ]
        },
        "UniDirectionalPaymentChannel.cancel": {
          "7": [
            2080,
            2120
          ],
          "8": [
            2130,
            2179
          ]
        },
        "UniDirectionalPaymentChannel.close": {
          "0": [
            1793,
            1837
          ],
          "1": [
            1847,
            1893
          ],
          "2": [
            1963,
            2000
          ],
          "3": [
            2010,
            2030
          ]
        },
        "UniDirectionalPaymentChannel.getEthSignedHash": {
          "4": [
            1314,
            1347
          ]
        },
        "UniDirectionalPaymentChannel.getHash": {
          "5": [
            1045,
            1069
          ]
        },
        "UniDirectionalPaymentChannel.verify": {
          "6": [
            1668,
            1697
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.6.0/ECDSA",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c806385852ce41161005b57806385852ce4146101065780638622a68914610129578063ea8a1af014610132578063f7260d3e1461013a57600080fd5b8063415ffba71461008d578063552f50b6146100a257806367e404ce146100c85780636b2fafa9146100f3575b600080fd5b6100a061009b3660046107d9565b61014d565b005b6100b56100b0366004610894565b6102db565b6040519081526020015b60405180910390f35b6001546100db906001600160a01b031681565b6040516001600160a01b0390911681526020016100bf565b6100b5610101366004610894565b6102ec565b6101196101143660046107d9565b6102f7565b60405190151581526020016100bf565b6100b560035481565b6100a061030a565b6002546100db906001600160a01b031681565b6002600054036101a45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000819055546001600160a01b031633146101ef5760405162461bcd60e51b815260206004820152600960248201526810b932b1b2b4bb32b960b91b604482015260640161019b565b6101f9828261038b565b6102335760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69642073696760a81b604482015260640161019b565b6002546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610280576040519150601f19603f3d011682016040523d82523d6000602084013e610285565b606091505b50509050806102cd5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640161019b565b6001546001600160a01b0316ff5b60006102e6826103be565b92915050565b60006102e6826103d1565b6000610303838361038b565b9392505050565b6001546001600160a01b0316331461034e5760405162461bcd60e51b815260206004820152600760248201526610b9b2b73232b960c91b604482015260640161019b565b6003544210156102cd5760405162461bcd60e51b815260206004820152600860248201526708595e1c1a5c995960c21b604482015260640161019b565b6001546000906001600160a01b03166103ad836103a7866103be565b90610417565b6001600160a01b0316149392505050565b60006102e66103cc836103d1565b61043b565b6040516bffffffffffffffffffffffff193060601b166020820152603481018290526000906054015b604051602081830303815290604052805190602001209050919050565b60008060006104268585610476565b91509150610433816104e4565b509392505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c016103fa565b60008082516041036104ac5760208301516040840151606085015160001a6104a08782858561069d565b945094505050506104dd565b82516040036104d557602083015160408401516104ca86838361078a565b9350935050506104dd565b506000905060025b9250929050565b60008160048111156104f8576104f86108ad565b036105005750565b6001816004811115610514576105146108ad565b036105615760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161019b565b6002816004811115610575576105756108ad565b036105c25760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161019b565b60038160048111156105d6576105d66108ad565b0361062e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161019b565b6004816004811115610642576106426108ad565b0361069a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161019b565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156106d45750600090506003610781565b8460ff16601b141580156106ec57508460ff16601c14155b156106fd5750600090506004610781565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610751573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661077a57600060019250925050610781565b9150600090505b94509492505050565b6000806001600160ff1b038316816107a760ff86901c601b6108c3565b90506107b58782888561069d565b935093505050935093915050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156107ec57600080fd5b82359150602083013567ffffffffffffffff8082111561080b57600080fd5b818501915085601f83011261081f57600080fd5b813581811115610831576108316107c3565b604051601f8201601f19908116603f01168101908382118183101715610859576108596107c3565b8160405282815288602084870101111561087257600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156108a657600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600082198211156108e457634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220d5e34a103bdbd0bac0301f8937a8f7935d9f0a10750effa2dd4c13f8f386edf564736f6c634300080e0033",
  "deployedSourceMap": "208:2010:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:327;;;;;;:::i;:::-;;:::i;:::-;;1229:125;;;;;;:::i;:::-;;:::i;:::-;;;1471:25:11;;;1459:2;1444:18;1229:125:9;;;;;;;;301:29;;;;;-1:-1:-1;;;;;301:29:9;;;;;;-1:-1:-1;;;;;1687:32:11;;;1669:51;;1657:2;1642:18;301:29:9;1507:219:11;969:107:9;;;;;;:::i;:::-;;:::i;1549:155::-;;;;;;:::i;:::-;;:::i;:::-;;;1896:14:11;;1889:22;1871:41;;1859:2;1844:18;1549:155:9;1731:187:11;432:24:9;;;;;;2043:173;;;:::i;336:31::-;;;;;-1:-1:-1;;;;;336:31:9;;;1710:327;1744:1:0;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:0;;2307:2:11;2317:63:0;;;2289:21:11;2346:2;2326:18;;;2319:30;2385:33;2365:18;;;2358:61;2436:18;;2317:63:0;;;;;;;;;1744:1;2455:7;:18;;;1815:8:9;-1:-1:-1;;;;;1815:8:9::1;1801:10;:22;1793:44;;;::::0;-1:-1:-1;;;1793:44:9;;2667:2:11;1793:44:9::1;::::0;::::1;2649:21:11::0;2706:1;2686:18;;;2679:29;-1:-1:-1;;;2724:18:11;;;2717:39;2773:18;;1793:44:9::1;2465:332:11::0;1793:44:9::1;1855:22;1863:7;1872:4;1855:7;:22::i;:::-;1847:46;;;::::0;-1:-1:-1;;;1847:46:9;;3004:2:11;1847:46:9::1;::::0;::::1;2986:21:11::0;3043:2;3023:18;;;3016:30;-1:-1:-1;;;3062:18:11;;;3055:41;3113:18;;1847:46:9::1;2802:335:11::0;1847:46:9::1;1920:8;::::0;:33:::1;::::0;1905:9:::1;::::0;-1:-1:-1;;;;;1920:8:9::1;::::0;1941:7;;1905:9;1920:33;1905:9;1920:33;1941:7;1920:8;:33:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1904:49;;;1971:4;1963:37;;;::::0;-1:-1:-1;;;1963:37:9;;3554:2:11;1963:37:9::1;::::0;::::1;3536:21:11::0;3593:2;3573:18;;;3566:30;-1:-1:-1;;;3612:18:11;;;3605:50;3672:18;;1963:37:9::1;3352:344:11::0;1963:37:9::1;2023:6;::::0;-1:-1:-1;;;;;2023:6:9::1;2010:20;1229:125:::0;1295:7;1321:26;1339:7;1321:17;:26::i;:::-;1314:33;1229:125;-1:-1:-1;;1229:125:9:o;969:107::-;1026:7;1052:17;1061:7;1052:8;:17::i;1549:155::-;1648:4;1675:22;1683:7;1692:4;1675:7;:22::i;:::-;1668:29;1549:155;-1:-1:-1;;;1549:155:9:o;2043:173::-;2102:6;;-1:-1:-1;;;;;2102:6:9;2088:10;:20;2080:40;;;;-1:-1:-1;;;2080:40:9;;3903:2:11;2080:40:9;;;3885:21:11;3942:1;3922:18;;;3915:29;-1:-1:-1;;;3960:18:11;;;3953:37;4007:18;;2080:40:9;3701:330:11;2080:40:9;2157:9;;2138:15;:28;;2130:49;;;;-1:-1:-1;;;2130:49:9;;4238:2:11;2130:49:9;;;4220:21:11;4277:1;4257:18;;;4250:29;-1:-1:-1;;;4295:18:11;;;4288:38;4343:18;;2130:49:9;4036:331:11;1360:183:9;1530:6;;1459:4;;-1:-1:-1;;;;;1530:6:9;1486:40;1521:4;1486:26;1504:7;1486:17;:26::i;:::-;:34;;:40::i;:::-;-1:-1:-1;;;;;1486:50:9;;;1360:183;-1:-1:-1;;;1360:183:9:o;1082:141::-;1148:7;1174:42;:17;1183:7;1174:8;:17::i;:::-;:40;:42::i;708:255::-;915:40;;-1:-1:-1;;940:4:9;4549:2:11;4545:15;4541:53;915:40:9;;;4529:66:11;4611:12;;;4604:28;;;765:7:9;;4648:12:11;;915:40:9;;;;;;;;;;;;;905:51;;;;;;898:58;;708:255;;;:::o;4308:227:2:-;4386:7;4406:17;4425:18;4447:27;4458:4;4464:9;4447:10;:27::i;:::-;4405:69;;;;4484:18;4496:5;4484:11;:18::i;:::-;-1:-1:-1;4519:9:2;4308:227;-1:-1:-1;;;4308:227:2:o;8012:265::-;8211:58;;4913:66:11;8211:58:2;;;4901:79:11;4996:12;;;4989:28;;;8081:7:2;;5033:12:11;;8211:58:2;4671:380:11;2243:1279:2;2324:7;2333:12;2554:9;:16;2574:2;2554:22;2550:966;;2843:4;2828:20;;2822:27;2892:4;2877:20;;2871:27;2949:4;2934:20;;2928:27;2592:9;2920:36;2990:25;3001:4;2920:36;2822:27;2871;2990:10;:25::i;:::-;2983:32;;;;;;;;;2550:966;3036:9;:16;3056:2;3036:22;3032:484;;3305:4;3290:20;;3284:27;3355:4;3340:20;;3334:27;3395:23;3406:4;3284:27;3334;3395:10;:23::i;:::-;3388:30;;;;;;;;3032:484;-1:-1:-1;3465:1:2;;-1:-1:-1;3469:35:2;3032:484;2243:1279;;;;;:::o;548:631::-;625:20;616:5;:29;;;;;;;;:::i;:::-;;612:561;;548:631;:::o;612:561::-;721:29;712:5;:38;;;;;;;;:::i;:::-;;708:465;;766:34;;-1:-1:-1;;;766:34:2;;5390:2:11;766:34:2;;;5372:21:11;5429:2;5409:18;;;5402:30;5468:26;5448:18;;;5441:54;5512:18;;766:34:2;5188:348:11;708:465:2;830:35;821:5;:44;;;;;;;;:::i;:::-;;817:356;;881:41;;-1:-1:-1;;;881:41:2;;5743:2:11;881:41:2;;;5725:21:11;5782:2;5762:18;;;5755:30;5821:33;5801:18;;;5794:61;5872:18;;881:41:2;5541:355:11;817:356:2;952:30;943:5;:39;;;;;;;;:::i;:::-;;939:234;;998:44;;-1:-1:-1;;;998:44:2;;6103:2:11;998:44:2;;;6085:21:11;6142:2;6122:18;;;6115:30;6181:34;6161:18;;;6154:62;-1:-1:-1;;;6232:18:11;;;6225:32;6274:19;;998:44:2;5901:398:11;939:234:2;1072:30;1063:5;:39;;;;;;;;:::i;:::-;;1059:114;;1118:44;;-1:-1:-1;;;1118:44:2;;6506:2:11;1118:44:2;;;6488:21:11;6545:2;6525:18;;;6518:30;6584:34;6564:18;;;6557:62;-1:-1:-1;;;6635:18:11;;;6628:32;6677:19;;1118:44:2;6304:398:11;1059:114:2;548:631;:::o;5716:1603::-;5842:7;;6766:66;6753:79;;6749:161;;;-1:-1:-1;6864:1:2;;-1:-1:-1;6868:30:2;6848:51;;6749:161;6923:1;:7;;6928:2;6923:7;;:18;;;;;6934:1;:7;;6939:2;6934:7;;6923:18;6919:100;;;-1:-1:-1;6973:1:2;;-1:-1:-1;6977:30:2;6957:51;;6919:100;7130:24;;;7113:14;7130:24;;;;;;;;;6934:25:11;;;7007:4;6995:17;;6975:18;;;6968:45;;;;7029:18;;;7022:34;;;7072:18;;;7065:34;;;7130:24:2;;6906:19:11;;7130:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7130:24:2;;-1:-1:-1;;7130:24:2;;;-1:-1:-1;;;;;;;7168:20:2;;7164:101;;7220:1;7224:29;7204:50;;;;;;;7164:101;7283:6;-1:-1:-1;7291:20:2;;-1:-1:-1;5716:1603:2;;;;;;;;:::o;4789:336::-;4899:7;;-1:-1:-1;;;;;4944:80:2;;4899:7;5050:25;5066:3;5051:18;;;5073:2;5050:25;:::i;:::-;5034:42;;5093:25;5104:4;5110:1;5113;5116;5093:10;:25::i;:::-;5086:32;;;;;;4789:336;;;;;;:::o;14:127:11:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:989;223:6;231;284:2;272:9;263:7;259:23;255:32;252:52;;;300:1;297;290:12;252:52;336:9;323:23;313:33;;397:2;386:9;382:18;369:32;420:18;461:2;453:6;450:14;447:34;;;477:1;474;467:12;447:34;515:6;504:9;500:22;490:32;;560:7;553:4;549:2;545:13;541:27;531:55;;582:1;579;572:12;531:55;618:2;605:16;640:2;636;633:10;630:36;;;646:18;;:::i;:::-;721:2;715:9;689:2;775:13;;-1:-1:-1;;771:22:11;;;795:2;767:31;763:40;751:53;;;819:18;;;839:22;;;816:46;813:72;;;865:18;;:::i;:::-;905:10;901:2;894:22;940:2;932:6;925:18;980:7;975:2;970;966;962:11;958:20;955:33;952:53;;;1001:1;998;991:12;952:53;1057:2;1052;1048;1044:11;1039:2;1031:6;1027:15;1014:46;1102:1;1097:2;1092;1084:6;1080:15;1076:24;1069:35;1123:6;1113:16;;;;;;;146:989;;;;;:::o;1140:180::-;1199:6;1252:2;1240:9;1231:7;1227:23;1223:32;1220:52;;;1268:1;1265;1258:12;1220:52;-1:-1:-1;1291:23:11;;1140:180;-1:-1:-1;1140:180:11:o;5056:127::-;5117:10;5112:3;5108:20;5105:1;5098:31;5148:4;5145:1;5138:15;5172:4;5169:1;5162:15;7110:225;7150:3;7181:1;7177:6;7174:1;7171:13;7168:136;;;7226:10;7221:3;7217:20;7214:1;7207:31;7261:4;7258:1;7251:15;7289:4;7286:1;7279:15;7168:136;-1:-1:-1;7320:9:11;;7110:225::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    208,
    2218
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85852CE4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x85852CE4 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x8622A689 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xF7260D3E EQ PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x415FFBA7 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x552F50B6 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x67E404CE EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x6B2FAFA9 EQ PUSH2 0xF3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x894 JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xDB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xB5 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x894 JUMP JUMPDEST PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x119 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xB5 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x30A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xDB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x1A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x10B932B1B2B4BB32B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19B JUMP JUMPDEST PUSH2 0x1F9 DUP3 DUP3 PUSH2 0x38B JUMP JUMPDEST PUSH2 0x233 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x696E76616C696420736967 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x280 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x285 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH2 0x2E6 DUP3 PUSH2 0x3BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E6 DUP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x303 DUP4 DUP4 PUSH2 0x38B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x10B9B2B73232B9 PUSH1 0xC9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19B JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP LT ISZERO PUSH2 0x2CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x8595E1C1A5C9959 PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3AD DUP4 PUSH2 0x3A7 DUP7 PUSH2 0x3BE JUMP JUMPDEST SWAP1 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E6 PUSH2 0x3CC DUP4 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT ADDRESS PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x426 DUP6 DUP6 PUSH2 0x476 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x433 DUP2 PUSH2 0x4E4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x4AC JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x4A0 DUP8 DUP3 DUP6 DUP6 PUSH2 0x69D JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x4DD JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 SUB PUSH2 0x4D5 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x4CA DUP7 DUP4 DUP4 PUSH2 0x78A JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP PUSH2 0x4DD JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x4F8 JUMPI PUSH2 0x4F8 PUSH2 0x8AD JUMP JUMPDEST SUB PUSH2 0x500 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x514 JUMPI PUSH2 0x514 PUSH2 0x8AD JUMP JUMPDEST SUB PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19B JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x575 JUMPI PUSH2 0x575 PUSH2 0x8AD JUMP JUMPDEST SUB PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x19B JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x5D6 JUMPI PUSH2 0x5D6 PUSH2 0x8AD JUMP JUMPDEST SUB PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x19B JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x642 JUMPI PUSH2 0x642 PUSH2 0x8AD JUMP JUMPDEST SUB PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x19B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x6D4 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x781 JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x6EC JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x6FD JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x781 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x751 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x77A JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x781 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP4 AND DUP2 PUSH2 0x7A7 PUSH1 0xFF DUP7 SWAP1 SHR PUSH1 0x1B PUSH2 0x8C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x7B5 DUP8 DUP3 DUP9 DUP6 PUSH2 0x69D JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x80B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x81F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x831 JUMPI PUSH2 0x831 PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x859 JUMPI PUSH2 0x859 PUSH2 0x7C3 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x872 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x8E4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xE3 0x4A LT EXTCODESIZE 0xDB 0xD0 0xBA 0xC0 ADDRESS 0x1F DUP10 CALLDATACOPY 0xA8 0xF7 SWAP4 0x5D SWAP16 EXP LT PUSH22 0xEFFA2DD4C13F8F386EDF564736F6C634300080E0033 ",
  "pcMap": {
    "0": {
      "offset": [
        208,
        2218
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "6": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "8": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "12": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "DUP1",
      "path": "9"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "REVERT",
      "path": "9"
    },
    "16": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "17": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "POP",
      "path": "9"
    },
    "18": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "21": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "LT",
      "path": "9"
    },
    "22": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x88"
    },
    "25": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "26": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "29": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "SHR",
      "path": "9"
    },
    "32": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "DUP1",
      "path": "9"
    },
    "33": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x85852CE4"
    },
    "38": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "GT",
      "path": "9"
    },
    "39": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "43": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "DUP1",
      "path": "9"
    },
    "44": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x85852CE4"
    },
    "49": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "EQ",
      "path": "9"
    },
    "50": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x106"
    },
    "53": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "54": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "DUP1",
      "path": "9"
    },
    "55": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x8622A689"
    },
    "60": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "EQ",
      "path": "9"
    },
    "61": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x129"
    },
    "64": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "65": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "DUP1",
      "path": "9"
    },
    "66": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xEA8A1AF0"
    },
    "71": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "EQ",
      "path": "9"
    },
    "72": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x132"
    },
    "75": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "76": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "DUP1",
      "path": "9"
    },
    "77": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xF7260D3E"
    },
    "82": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "EQ",
      "path": "9"
    },
    "83": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13A"
    },
    "86": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "87": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "DUP1",
      "path": "9"
    },
    "90": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "REVERT",
      "path": "9"
    },
    "91": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "92": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "DUP1",
      "path": "9"
    },
    "93": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x415FFBA7"
    },
    "98": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "EQ",
      "path": "9"
    },
    "99": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8D"
    },
    "102": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "103": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "DUP1",
      "path": "9"
    },
    "104": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x552F50B6"
    },
    "109": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "EQ",
      "path": "9"
    },
    "110": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA2"
    },
    "113": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "114": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "DUP1",
      "path": "9"
    },
    "115": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x67E404CE"
    },
    "120": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "EQ",
      "path": "9"
    },
    "121": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC8"
    },
    "124": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "125": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "DUP1",
      "path": "9"
    },
    "126": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x6B2FAFA9"
    },
    "131": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "EQ",
      "path": "9"
    },
    "132": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF3"
    },
    "135": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "136": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "137": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "139": {
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "DUP1",
      "path": "9"
    },
    "140": {
      "first_revert": true,
      "fn": null,
      "offset": [
        208,
        2218
      ],
      "op": "REVERT",
      "path": "9"
    },
    "141": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1710,
        2037
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "142": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1710,
        2037
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA0"
    },
    "145": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1710,
        2037
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9B"
    },
    "148": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1710,
        2037
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "149": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1710,
        2037
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "151": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1710,
        2037
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7D9"
    },
    "154": {
      "fn": "UniDirectionalPaymentChannel.close",
      "jump": "i",
      "offset": [
        1710,
        2037
      ],
      "op": "JUMP",
      "path": "9"
    },
    "155": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1710,
        2037
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "156": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1710,
        2037
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x14D"
    },
    "159": {
      "fn": "UniDirectionalPaymentChannel.close",
      "jump": "i",
      "offset": [
        1710,
        2037
      ],
      "op": "JUMP",
      "path": "9"
    },
    "160": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1710,
        2037
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "161": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1710,
        2037
      ],
      "op": "STOP",
      "path": "9"
    },
    "162": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "163": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB5"
    },
    "166": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB0"
    },
    "169": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "170": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "172": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x894"
    },
    "175": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "jump": "i",
      "offset": [
        1229,
        1354
      ],
      "op": "JUMP",
      "path": "9"
    },
    "176": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "177": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2DB"
    },
    "180": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "jump": "i",
      "offset": [
        1229,
        1354
      ],
      "op": "JUMP",
      "path": "9"
    },
    "181": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "182": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "184": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "185": {
      "op": "SWAP1"
    },
    "186": {
      "op": "DUP2"
    },
    "187": {
      "op": "MSTORE"
    },
    "188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "190": {
      "op": "ADD"
    },
    "191": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "192": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "194": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "195": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "DUP1",
      "path": "9"
    },
    "196": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "197": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "SUB",
      "path": "9"
    },
    "198": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "199": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "RETURN",
      "path": "9"
    },
    "200": {
      "offset": [
        301,
        330
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "201": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        301,
        330
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "203": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        301,
        330
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "204": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        301,
        330
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDB"
    },
    "207": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        301,
        330
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "214": {
      "op": "SHL"
    },
    "215": {
      "op": "SUB"
    },
    "216": {
      "offset": [
        301,
        330
      ],
      "op": "AND",
      "path": "9"
    },
    "217": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        301,
        330
      ],
      "op": "DUP2",
      "path": "9"
    },
    "218": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        301,
        330
      ],
      "op": "JUMP",
      "path": "9"
    },
    "219": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        301,
        330
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "220": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        301,
        330
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "222": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        301,
        330
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "229": {
      "op": "SHL"
    },
    "230": {
      "op": "SUB"
    },
    "231": {
      "op": "SWAP1"
    },
    "232": {
      "op": "SWAP2"
    },
    "233": {
      "op": "AND"
    },
    "234": {
      "op": "DUP2"
    },
    "235": {
      "op": "MSTORE"
    },
    "236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "238": {
      "op": "ADD"
    },
    "239": {
      "offset": [
        301,
        330
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBF"
    },
    "242": {
      "op": "JUMP"
    },
    "243": {
      "fn": "UniDirectionalPaymentChannel.getHash",
      "offset": [
        969,
        1076
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "244": {
      "fn": "UniDirectionalPaymentChannel.getHash",
      "offset": [
        969,
        1076
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB5"
    },
    "247": {
      "fn": "UniDirectionalPaymentChannel.getHash",
      "offset": [
        969,
        1076
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x101"
    },
    "250": {
      "fn": "UniDirectionalPaymentChannel.getHash",
      "offset": [
        969,
        1076
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "251": {
      "fn": "UniDirectionalPaymentChannel.getHash",
      "offset": [
        969,
        1076
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "253": {
      "fn": "UniDirectionalPaymentChannel.getHash",
      "offset": [
        969,
        1076
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x894"
    },
    "256": {
      "fn": "UniDirectionalPaymentChannel.getHash",
      "jump": "i",
      "offset": [
        969,
        1076
      ],
      "op": "JUMP",
      "path": "9"
    },
    "257": {
      "fn": "UniDirectionalPaymentChannel.getHash",
      "offset": [
        969,
        1076
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "258": {
      "fn": "UniDirectionalPaymentChannel.getHash",
      "offset": [
        969,
        1076
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2EC"
    },
    "261": {
      "fn": "UniDirectionalPaymentChannel.getHash",
      "jump": "i",
      "offset": [
        969,
        1076
      ],
      "op": "JUMP",
      "path": "9"
    },
    "262": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1549,
        1704
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "263": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1549,
        1704
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x119"
    },
    "266": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1549,
        1704
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x114"
    },
    "269": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1549,
        1704
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "270": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1549,
        1704
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "272": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1549,
        1704
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7D9"
    },
    "275": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        1549,
        1704
      ],
      "op": "JUMP",
      "path": "9"
    },
    "276": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1549,
        1704
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "277": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1549,
        1704
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F7"
    },
    "280": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        1549,
        1704
      ],
      "op": "JUMP",
      "path": "9"
    },
    "281": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1549,
        1704
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "282": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1549,
        1704
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "284": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1549,
        1704
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "285": {
      "op": "SWAP1"
    },
    "286": {
      "op": "ISZERO"
    },
    "287": {
      "op": "ISZERO"
    },
    "288": {
      "op": "DUP2"
    },
    "289": {
      "op": "MSTORE"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "292": {
      "op": "ADD"
    },
    "293": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1549,
        1704
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBF"
    },
    "296": {
      "op": "JUMP"
    },
    "297": {
      "offset": [
        432,
        456
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "298": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        432,
        456
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB5"
    },
    "301": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        432,
        456
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "303": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        432,
        456
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "304": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        432,
        456
      ],
      "op": "DUP2",
      "path": "9"
    },
    "305": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        432,
        456
      ],
      "op": "JUMP",
      "path": "9"
    },
    "306": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2043,
        2216
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "307": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2043,
        2216
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA0"
    },
    "310": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2043,
        2216
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x30A"
    },
    "313": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "jump": "i",
      "offset": [
        2043,
        2216
      ],
      "op": "JUMP",
      "path": "9"
    },
    "314": {
      "offset": [
        336,
        367
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "315": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        336,
        367
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "317": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        336,
        367
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "318": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        336,
        367
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDB"
    },
    "321": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        336,
        367
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "328": {
      "op": "SHL"
    },
    "329": {
      "op": "SUB"
    },
    "330": {
      "offset": [
        336,
        367
      ],
      "op": "AND",
      "path": "9"
    },
    "331": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        336,
        367
      ],
      "op": "DUP2",
      "path": "9"
    },
    "332": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        336,
        367
      ],
      "op": "JUMP",
      "path": "9"
    },
    "333": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1710,
        2037
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "334": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "336": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "338": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "339": {
      "offset": [
        2325,
        2344
      ],
      "op": "SUB",
      "path": "0"
    },
    "340": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "343": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "344": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "346": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "347": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "351": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "353": {
      "op": "SHL"
    },
    "354": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "355": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "358": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "360": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "0"
    },
    "361": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "0"
    },
    "362": {
      "op": "MSTORE"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "367": {
      "op": "DUP3"
    },
    "368": {
      "op": "ADD"
    },
    "369": {
      "op": "MSTORE"
    },
    "370": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "405": {
      "op": "DUP3"
    },
    "406": {
      "op": "ADD"
    },
    "407": {
      "op": "MSTORE"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "410": {
      "op": "ADD"
    },
    "411": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "412": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "414": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "415": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "416": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2317,
        2380
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "417": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2317,
        2380
      ],
      "op": "SUB",
      "path": "0"
    },
    "418": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2317,
        2380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "419": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2317,
        2380
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "420": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "421": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "423": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "425": {
      "offset": [
        2455,
        2473
      ],
      "op": "DUP2",
      "path": "0"
    },
    "426": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2455,
        2473
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "427": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "428": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1815,
        1823
      ],
      "op": "SLOAD",
      "path": "9",
      "statement": 0
    },
    "429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "435": {
      "op": "SHL"
    },
    "436": {
      "op": "SUB"
    },
    "437": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1815,
        1823
      ],
      "op": "AND",
      "path": "9"
    },
    "438": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1801,
        1811
      ],
      "op": "CALLER",
      "path": "9"
    },
    "439": {
      "branch": 27,
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1801,
        1823
      ],
      "op": "EQ",
      "path": "9"
    },
    "440": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1793,
        1837
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1EF"
    },
    "443": {
      "branch": 27,
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1793,
        1837
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "444": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1793,
        1837
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "446": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1793,
        1837
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "447": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "451": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "453": {
      "op": "SHL"
    },
    "454": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1793,
        1837
      ],
      "op": "DUP2",
      "path": "9"
    },
    "455": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1793,
        1837
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "458": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1793,
        1837
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "460": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1793,
        1837
      ],
      "op": "DUP3",
      "path": "9"
    },
    "461": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1793,
        1837
      ],
      "op": "ADD",
      "path": "9"
    },
    "462": {
      "op": "MSTORE"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "467": {
      "op": "DUP3"
    },
    "468": {
      "op": "ADD"
    },
    "469": {
      "op": "MSTORE"
    },
    "470": {
      "op": "PUSH9",
      "value": "0x10B932B1B2B4BB32B9"
    },
    "480": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "482": {
      "op": "SHL"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "485": {
      "op": "DUP3"
    },
    "486": {
      "op": "ADD"
    },
    "487": {
      "op": "MSTORE"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "490": {
      "op": "ADD"
    },
    "491": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1793,
        1837
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x19B"
    },
    "494": {
      "op": "JUMP"
    },
    "495": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1793,
        1837
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "496": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1855,
        1877
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 1,
      "value": "0x1F9"
    },
    "499": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1863,
        1870
      ],
      "op": "DUP3",
      "path": "9"
    },
    "500": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1872,
        1876
      ],
      "op": "DUP3",
      "path": "9"
    },
    "501": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1855,
        1862
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x38B"
    },
    "504": {
      "fn": "UniDirectionalPaymentChannel.close",
      "jump": "i",
      "offset": [
        1855,
        1877
      ],
      "op": "JUMP",
      "path": "9"
    },
    "505": {
      "branch": 28,
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1855,
        1877
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "506": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1847,
        1893
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x233"
    },
    "509": {
      "branch": 28,
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1847,
        1893
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "510": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1847,
        1893
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "512": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1847,
        1893
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "513": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "517": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "519": {
      "op": "SHL"
    },
    "520": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1847,
        1893
      ],
      "op": "DUP2",
      "path": "9"
    },
    "521": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1847,
        1893
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "524": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1847,
        1893
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "526": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1847,
        1893
      ],
      "op": "DUP3",
      "path": "9"
    },
    "527": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1847,
        1893
      ],
      "op": "ADD",
      "path": "9"
    },
    "528": {
      "op": "MSTORE"
    },
    "529": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "533": {
      "op": "DUP3"
    },
    "534": {
      "op": "ADD"
    },
    "535": {
      "op": "MSTORE"
    },
    "536": {
      "op": "PUSH11",
      "value": "0x696E76616C696420736967"
    },
    "548": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "550": {
      "op": "SHL"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "553": {
      "op": "DUP3"
    },
    "554": {
      "op": "ADD"
    },
    "555": {
      "op": "MSTORE"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "558": {
      "op": "ADD"
    },
    "559": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1847,
        1893
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x19B"
    },
    "562": {
      "op": "JUMP"
    },
    "563": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1847,
        1893
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "564": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1928
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "566": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1928
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "567": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "569": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "570": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1905,
        1914
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "572": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1905,
        1914
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "579": {
      "op": "SHL"
    },
    "580": {
      "op": "SUB"
    },
    "581": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1928
      ],
      "op": "AND",
      "path": "9"
    },
    "582": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1928
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "583": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1941,
        1948
      ],
      "op": "DUP5",
      "path": "9"
    },
    "584": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1941,
        1948
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "585": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1905,
        1914
      ],
      "op": "DUP4",
      "path": "9"
    },
    "586": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "DUP2",
      "path": "9"
    },
    "587": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1905,
        1914
      ],
      "op": "DUP2",
      "path": "9"
    },
    "588": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "DUP2",
      "path": "9"
    },
    "589": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1941,
        1948
      ],
      "op": "DUP6",
      "path": "9"
    },
    "590": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1928
      ],
      "op": "DUP8",
      "path": "9"
    },
    "591": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "GAS",
      "path": "9"
    },
    "592": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "CALL",
      "path": "9"
    },
    "593": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "594": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "POP",
      "path": "9"
    },
    "595": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "POP",
      "path": "9"
    },
    "596": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "POP",
      "path": "9"
    },
    "597": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "598": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "DUP1",
      "path": "9"
    },
    "599": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "601": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "DUP2",
      "path": "9"
    },
    "602": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "EQ",
      "path": "9"
    },
    "603": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x280"
    },
    "606": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "607": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "609": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "610": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "611": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "POP",
      "path": "9"
    },
    "612": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "614": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "NOT",
      "path": "9"
    },
    "615": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3F"
    },
    "617": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "618": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "ADD",
      "path": "9"
    },
    "619": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "AND",
      "path": "9"
    },
    "620": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "DUP3",
      "path": "9"
    },
    "621": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "ADD",
      "path": "9"
    },
    "622": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "624": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "625": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "626": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "DUP3",
      "path": "9"
    },
    "627": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "628": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "629": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "631": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "633": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "DUP5",
      "path": "9"
    },
    "634": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "ADD",
      "path": "9"
    },
    "635": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "636": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x285"
    },
    "639": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "JUMP",
      "path": "9"
    },
    "640": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "641": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "643": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "644": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "POP",
      "path": "9"
    },
    "645": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "646": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1920,
        1953
      ],
      "op": "POP",
      "path": "9"
    },
    "647": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1904,
        1953
      ],
      "op": "POP",
      "path": "9"
    },
    "648": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1904,
        1953
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "649": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1904,
        1953
      ],
      "op": "POP",
      "path": "9"
    },
    "650": {
      "branch": 29,
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1971,
        1975
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 2
    },
    "651": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1963,
        2000
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2CD"
    },
    "654": {
      "branch": 29,
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1963,
        2000
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "655": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1963,
        2000
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "657": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1963,
        2000
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "658": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "662": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "664": {
      "op": "SHL"
    },
    "665": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1963,
        2000
      ],
      "op": "DUP2",
      "path": "9"
    },
    "666": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1963,
        2000
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "669": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1963,
        2000
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "671": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1963,
        2000
      ],
      "op": "DUP3",
      "path": "9"
    },
    "672": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1963,
        2000
      ],
      "op": "ADD",
      "path": "9"
    },
    "673": {
      "op": "MSTORE"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "678": {
      "op": "DUP3"
    },
    "679": {
      "op": "ADD"
    },
    "680": {
      "op": "MSTORE"
    },
    "681": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "704": {
      "op": "SHL"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "707": {
      "op": "DUP3"
    },
    "708": {
      "op": "ADD"
    },
    "709": {
      "op": "MSTORE"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "712": {
      "op": "ADD"
    },
    "713": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1963,
        2000
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x19B"
    },
    "716": {
      "op": "JUMP"
    },
    "717": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        1963,
        2000
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "718": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2023,
        2029
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 3,
      "value": "0x1"
    },
    "720": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2023,
        2029
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "727": {
      "op": "SHL"
    },
    "728": {
      "op": "SUB"
    },
    "729": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2023,
        2029
      ],
      "op": "AND",
      "path": "9"
    },
    "730": {
      "fn": "UniDirectionalPaymentChannel.close",
      "offset": [
        2010,
        2030
      ],
      "op": "SELFDESTRUCT",
      "path": "9"
    },
    "731": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "732": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1295,
        1302
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "734": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1321,
        1347
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 4,
      "value": "0x2E6"
    },
    "737": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1339,
        1346
      ],
      "op": "DUP3",
      "path": "9"
    },
    "738": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1321,
        1338
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3BE"
    },
    "741": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "jump": "i",
      "offset": [
        1321,
        1347
      ],
      "op": "JUMP",
      "path": "9"
    },
    "742": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1321,
        1347
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "743": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1314,
        1347
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "744": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "offset": [
        1229,
        1354
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "745": {
      "op": "POP"
    },
    "746": {
      "op": "POP"
    },
    "747": {
      "fn": "UniDirectionalPaymentChannel.getEthSignedHash",
      "jump": "o",
      "offset": [
        1229,
        1354
      ],
      "op": "JUMP",
      "path": "9"
    },
    "748": {
      "fn": "UniDirectionalPaymentChannel.getHash",
      "offset": [
        969,
        1076
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "749": {
      "fn": "UniDirectionalPaymentChannel.getHash",
      "offset": [
        1026,
        1033
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "751": {
      "fn": "UniDirectionalPaymentChannel.getHash",
      "offset": [
        1052,
        1069
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 5,
      "value": "0x2E6"
    },
    "754": {
      "fn": "UniDirectionalPaymentChannel.getHash",
      "offset": [
        1061,
        1068
      ],
      "op": "DUP3",
      "path": "9"
    },
    "755": {
      "fn": "UniDirectionalPaymentChannel.getHash",
      "offset": [
        1052,
        1060
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3D1"
    },
    "758": {
      "fn": "UniDirectionalPaymentChannel.getHash",
      "jump": "i",
      "offset": [
        1052,
        1069
      ],
      "op": "JUMP",
      "path": "9"
    },
    "759": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1549,
        1704
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "760": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1648,
        1652
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "762": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1675,
        1697
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 6,
      "value": "0x303"
    },
    "765": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1683,
        1690
      ],
      "op": "DUP4",
      "path": "9"
    },
    "766": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1692,
        1696
      ],
      "op": "DUP4",
      "path": "9"
    },
    "767": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1675,
        1682
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x38B"
    },
    "770": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        1675,
        1697
      ],
      "op": "JUMP",
      "path": "9"
    },
    "771": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1675,
        1697
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "772": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1668,
        1697
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "773": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "offset": [
        1549,
        1704
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "774": {
      "op": "POP"
    },
    "775": {
      "op": "POP"
    },
    "776": {
      "op": "POP"
    },
    "777": {
      "fn": "UniDirectionalPaymentChannel.verify",
      "jump": "o",
      "offset": [
        1549,
        1704
      ],
      "op": "JUMP",
      "path": "9"
    },
    "778": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2043,
        2216
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "779": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2102,
        2108
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 7,
      "value": "0x1"
    },
    "781": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2102,
        2108
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "788": {
      "op": "SHL"
    },
    "789": {
      "op": "SUB"
    },
    "790": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2102,
        2108
      ],
      "op": "AND",
      "path": "9"
    },
    "791": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2088,
        2098
      ],
      "op": "CALLER",
      "path": "9"
    },
    "792": {
      "branch": 30,
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2088,
        2108
      ],
      "op": "EQ",
      "path": "9"
    },
    "793": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2080,
        2120
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x34E"
    },
    "796": {
      "branch": 30,
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2080,
        2120
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "797": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2080,
        2120
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "799": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2080,
        2120
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "800": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "804": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "806": {
      "op": "SHL"
    },
    "807": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2080,
        2120
      ],
      "op": "DUP2",
      "path": "9"
    },
    "808": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2080,
        2120
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "811": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2080,
        2120
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "813": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2080,
        2120
      ],
      "op": "DUP3",
      "path": "9"
    },
    "814": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2080,
        2120
      ],
      "op": "ADD",
      "path": "9"
    },
    "815": {
      "op": "MSTORE"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "820": {
      "op": "DUP3"
    },
    "821": {
      "op": "ADD"
    },
    "822": {
      "op": "MSTORE"
    },
    "823": {
      "op": "PUSH7",
      "value": "0x10B9B2B73232B9"
    },
    "831": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "833": {
      "op": "SHL"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "836": {
      "op": "DUP3"
    },
    "837": {
      "op": "ADD"
    },
    "838": {
      "op": "MSTORE"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "841": {
      "op": "ADD"
    },
    "842": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2080,
        2120
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x19B"
    },
    "845": {
      "op": "JUMP"
    },
    "846": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2080,
        2120
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "847": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2157,
        2166
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 8,
      "value": "0x3"
    },
    "849": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2157,
        2166
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "850": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2138,
        2153
      ],
      "op": "TIMESTAMP",
      "path": "9"
    },
    "851": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2138,
        2166
      ],
      "op": "LT",
      "path": "9"
    },
    "852": {
      "branch": 31,
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2138,
        2166
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "853": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2130,
        2179
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2CD"
    },
    "856": {
      "branch": 31,
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2130,
        2179
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "857": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2130,
        2179
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "859": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2130,
        2179
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "860": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "864": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "866": {
      "op": "SHL"
    },
    "867": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2130,
        2179
      ],
      "op": "DUP2",
      "path": "9"
    },
    "868": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2130,
        2179
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "871": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2130,
        2179
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "873": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2130,
        2179
      ],
      "op": "DUP3",
      "path": "9"
    },
    "874": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2130,
        2179
      ],
      "op": "ADD",
      "path": "9"
    },
    "875": {
      "op": "MSTORE"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "880": {
      "op": "DUP3"
    },
    "881": {
      "op": "ADD"
    },
    "882": {
      "op": "MSTORE"
    },
    "883": {
      "op": "PUSH8",
      "value": "0x8595E1C1A5C9959"
    },
    "892": {
      "op": "PUSH1",
      "value": "0xC2"
    },
    "894": {
      "op": "SHL"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "897": {
      "op": "DUP3"
    },
    "898": {
      "op": "ADD"
    },
    "899": {
      "op": "MSTORE"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "902": {
      "op": "ADD"
    },
    "903": {
      "fn": "UniDirectionalPaymentChannel.cancel",
      "offset": [
        2130,
        2179
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x19B"
    },
    "906": {
      "op": "JUMP"
    },
    "907": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1360,
        1543
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "908": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1530,
        1536
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 9,
      "value": "0x1"
    },
    "910": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1530,
        1536
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "911": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1459,
        1463
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "913": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1459,
        1463
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "918": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "920": {
      "op": "SHL"
    },
    "921": {
      "op": "SUB"
    },
    "922": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1530,
        1536
      ],
      "op": "AND",
      "path": "9"
    },
    "923": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1486,
        1526
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3AD"
    },
    "926": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1521,
        1525
      ],
      "op": "DUP4",
      "path": "9"
    },
    "927": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1486,
        1512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3A7"
    },
    "930": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1504,
        1511
      ],
      "op": "DUP7",
      "path": "9"
    },
    "931": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1486,
        1503
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3BE"
    },
    "934": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "jump": "i",
      "offset": [
        1486,
        1512
      ],
      "op": "JUMP",
      "path": "9"
    },
    "935": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1486,
        1512
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "936": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1486,
        1520
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "937": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1486,
        1520
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x417"
    },
    "940": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "jump": "i",
      "offset": [
        1486,
        1526
      ],
      "op": "JUMP",
      "path": "9"
    },
    "941": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1486,
        1526
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "948": {
      "op": "SHL"
    },
    "949": {
      "op": "SUB"
    },
    "950": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1486,
        1536
      ],
      "op": "AND",
      "path": "9"
    },
    "951": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1486,
        1536
      ],
      "op": "EQ",
      "path": "9"
    },
    "952": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1486,
        1536
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "953": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "offset": [
        1360,
        1543
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "954": {
      "op": "POP"
    },
    "955": {
      "op": "POP"
    },
    "956": {
      "op": "POP"
    },
    "957": {
      "fn": "UniDirectionalPaymentChannel._verify",
      "jump": "o",
      "offset": [
        1360,
        1543
      ],
      "op": "JUMP",
      "path": "9"
    },
    "958": {
      "fn": "UniDirectionalPaymentChannel._getEthSignedHash",
      "offset": [
        1082,
        1223
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "959": {
      "fn": "UniDirectionalPaymentChannel._getEthSignedHash",
      "offset": [
        1148,
        1155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "961": {
      "fn": "UniDirectionalPaymentChannel._getEthSignedHash",
      "offset": [
        1174,
        1216
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 10,
      "value": "0x2E6"
    },
    "964": {
      "fn": "UniDirectionalPaymentChannel._getEthSignedHash",
      "offset": [
        1174,
        1191
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3CC"
    },
    "967": {
      "fn": "UniDirectionalPaymentChannel._getEthSignedHash",
      "offset": [
        1183,
        1190
      ],
      "op": "DUP4",
      "path": "9"
    },
    "968": {
      "fn": "UniDirectionalPaymentChannel._getEthSignedHash",
      "offset": [
        1174,
        1182
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3D1"
    },
    "971": {
      "fn": "UniDirectionalPaymentChannel._getEthSignedHash",
      "jump": "i",
      "offset": [
        1174,
        1191
      ],
      "op": "JUMP",
      "path": "9"
    },
    "972": {
      "fn": "UniDirectionalPaymentChannel._getEthSignedHash",
      "offset": [
        1174,
        1191
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "973": {
      "fn": "UniDirectionalPaymentChannel._getEthSignedHash",
      "offset": [
        1174,
        1214
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x43B"
    },
    "976": {
      "fn": "UniDirectionalPaymentChannel._getEthSignedHash",
      "jump": "i",
      "offset": [
        1174,
        1216
      ],
      "op": "JUMP",
      "path": "9"
    },
    "977": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        708,
        963
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "978": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 11,
      "value": "0x40"
    },
    "980": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "981": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "994": {
      "op": "NOT"
    },
    "995": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        940,
        944
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "998": {
      "op": "SHL"
    },
    "999": {
      "op": "AND"
    },
    "1000": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1002": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1003": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "ADD",
      "path": "9"
    },
    "1004": {
      "op": "MSTORE"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "1007": {
      "op": "DUP2"
    },
    "1008": {
      "op": "ADD"
    },
    "1009": {
      "op": "DUP3"
    },
    "1010": {
      "op": "SWAP1"
    },
    "1011": {
      "op": "MSTORE"
    },
    "1012": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        765,
        772
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1014": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        765,
        772
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "1017": {
      "op": "ADD"
    },
    "1018": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1019": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1021": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1022": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1024": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1025": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1026": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "SUB",
      "path": "9"
    },
    "1027": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "SUB",
      "path": "9"
    },
    "1028": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1029": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1030": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1031": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1033": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        915,
        955
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1034": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        905,
        956
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1035": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        905,
        956
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1036": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        905,
        956
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1037": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        905,
        956
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1039": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        905,
        956
      ],
      "op": "ADD",
      "path": "9"
    },
    "1040": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        905,
        956
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1041": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        898,
        956
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1042": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        898,
        956
      ],
      "op": "POP",
      "path": "9"
    },
    "1043": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        708,
        963
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1044": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        708,
        963
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1045": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "offset": [
        708,
        963
      ],
      "op": "POP",
      "path": "9"
    },
    "1046": {
      "fn": "UniDirectionalPaymentChannel._getHash",
      "jump": "o",
      "offset": [
        708,
        963
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1047": {
      "fn": "ECDSA.recover",
      "offset": [
        4308,
        4535
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1048": {
      "fn": "ECDSA.recover",
      "offset": [
        4386,
        4393
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1050": {
      "fn": "ECDSA.recover",
      "offset": [
        4406,
        4423
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1051": {
      "fn": "ECDSA.recover",
      "offset": [
        4425,
        4443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1053": {
      "fn": "ECDSA.recover",
      "offset": [
        4447,
        4474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x426"
    },
    "1056": {
      "fn": "ECDSA.recover",
      "offset": [
        4458,
        4462
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1057": {
      "fn": "ECDSA.recover",
      "offset": [
        4464,
        4473
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1058": {
      "fn": "ECDSA.recover",
      "offset": [
        4447,
        4457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x476"
    },
    "1061": {
      "fn": "ECDSA.recover",
      "jump": "i",
      "offset": [
        4447,
        4474
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1062": {
      "fn": "ECDSA.recover",
      "offset": [
        4447,
        4474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1063": {
      "fn": "ECDSA.recover",
      "offset": [
        4405,
        4474
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1064": {
      "fn": "ECDSA.recover",
      "offset": [
        4405,
        4474
      ],
      "op": "POP",
      "path": "2"
    },
    "1065": {
      "fn": "ECDSA.recover",
      "offset": [
        4405,
        4474
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1066": {
      "fn": "ECDSA.recover",
      "offset": [
        4405,
        4474
      ],
      "op": "POP",
      "path": "2"
    },
    "1067": {
      "fn": "ECDSA.recover",
      "offset": [
        4484,
        4502
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 12,
      "value": "0x433"
    },
    "1070": {
      "fn": "ECDSA.recover",
      "offset": [
        4496,
        4501
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1071": {
      "fn": "ECDSA.recover",
      "offset": [
        4484,
        4495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E4"
    },
    "1074": {
      "fn": "ECDSA.recover",
      "jump": "i",
      "offset": [
        4484,
        4502
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1075": {
      "fn": "ECDSA.recover",
      "offset": [
        4484,
        4502
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1076": {
      "op": "POP"
    },
    "1077": {
      "fn": "ECDSA.recover",
      "offset": [
        4519,
        4528
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 13
    },
    "1078": {
      "fn": "ECDSA.recover",
      "offset": [
        4308,
        4535
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1079": {
      "op": "POP"
    },
    "1080": {
      "op": "POP"
    },
    "1081": {
      "op": "POP"
    },
    "1082": {
      "fn": "ECDSA.recover",
      "jump": "o",
      "offset": [
        4308,
        4535
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1083": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8012,
        8277
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1084": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 14,
      "value": "0x40"
    },
    "1086": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1087": {
      "op": "PUSH32",
      "value": "0x19457468657265756D205369676E6564204D6573736167653A0A333200000000"
    },
    "1120": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1122": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1123": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "ADD",
      "path": "2"
    },
    "1124": {
      "op": "MSTORE"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "1127": {
      "op": "DUP2"
    },
    "1128": {
      "op": "ADD"
    },
    "1129": {
      "op": "DUP3"
    },
    "1130": {
      "op": "SWAP1"
    },
    "1131": {
      "op": "MSTORE"
    },
    "1132": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8081,
        8088
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1134": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8081,
        8088
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "1137": {
      "op": "ADD"
    },
    "1138": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FA"
    },
    "1141": {
      "op": "JUMP"
    },
    "1142": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1143": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2324,
        2331
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1145": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2333,
        2345
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1146": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2554,
        2563
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1147": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2554,
        2570
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1148": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2574,
        2576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x41"
    },
    "1150": {
      "branch": 32,
      "fn": "ECDSA.tryRecover",
      "offset": [
        2554,
        2576
      ],
      "op": "SUB",
      "path": "2"
    },
    "1151": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2550,
        3516
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AC"
    },
    "1154": {
      "branch": 32,
      "fn": "ECDSA.tryRecover",
      "offset": [
        2550,
        3516
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1155": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2843,
        2847
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1157": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2828,
        2848
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1158": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2828,
        2848
      ],
      "op": "ADD",
      "path": "2"
    },
    "1159": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2822,
        2849
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1160": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2892,
        2896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1162": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2877,
        2897
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1163": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2877,
        2897
      ],
      "op": "ADD",
      "path": "2"
    },
    "1164": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2871,
        2898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1165": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2949,
        2953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1167": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2934,
        2954
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1168": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2934,
        2954
      ],
      "op": "ADD",
      "path": "2"
    },
    "1169": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2928,
        2955
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1170": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2592,
        2601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1172": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2920,
        2956
      ],
      "op": "BYTE",
      "path": "2"
    },
    "1173": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2990,
        3015
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 15,
      "value": "0x4A0"
    },
    "1176": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3001,
        3005
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1177": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2920,
        2956
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1178": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2822,
        2849
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1179": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2871,
        2898
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1180": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2990,
        3000
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69D"
    },
    "1183": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        2990,
        3015
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1184": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2990,
        3015
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1185": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1186": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "POP",
      "path": "2"
    },
    "1187": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1188": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "POP",
      "path": "2"
    },
    "1189": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "POP",
      "path": "2"
    },
    "1190": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "POP",
      "path": "2"
    },
    "1191": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "POP",
      "path": "2"
    },
    "1192": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DD"
    },
    "1195": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1196": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2550,
        3516
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1197": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3036,
        3045
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1198": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3036,
        3052
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1199": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3056,
        3058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1201": {
      "branch": 33,
      "fn": "ECDSA.tryRecover",
      "offset": [
        3036,
        3058
      ],
      "op": "SUB",
      "path": "2"
    },
    "1202": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3032,
        3516
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D5"
    },
    "1205": {
      "branch": 33,
      "fn": "ECDSA.tryRecover",
      "offset": [
        3032,
        3516
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1206": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3305,
        3309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1208": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3290,
        3310
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1209": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3290,
        3310
      ],
      "op": "ADD",
      "path": "2"
    },
    "1210": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3284,
        3311
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1211": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3355,
        3359
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1213": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3340,
        3360
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1214": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3340,
        3360
      ],
      "op": "ADD",
      "path": "2"
    },
    "1215": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3334,
        3361
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1216": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3395,
        3418
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 16,
      "value": "0x4CA"
    },
    "1219": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3406,
        3410
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1220": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3284,
        3311
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1221": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3334,
        3361
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1222": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3395,
        3405
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x78A"
    },
    "1225": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        3395,
        3418
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1226": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3395,
        3418
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1227": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1228": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "POP",
      "path": "2"
    },
    "1229": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1230": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "POP",
      "path": "2"
    },
    "1231": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "POP",
      "path": "2"
    },
    "1232": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "POP",
      "path": "2"
    },
    "1233": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DD"
    },
    "1236": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1237": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3032,
        3516
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1238": {
      "op": "POP"
    },
    "1239": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3465,
        3466
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x0"
    },
    "1241": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3465,
        3466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1242": {
      "op": "POP"
    },
    "1243": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3469,
        3504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1245": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3032,
        3516
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1246": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1247": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "POP",
      "path": "2"
    },
    "1248": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1249": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1250": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "POP",
      "path": "2"
    },
    "1251": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        2243,
        3522
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1252": {
      "fn": "ECDSA._throwError",
      "offset": [
        548,
        1179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1253": {
      "fn": "ECDSA._throwError",
      "offset": [
        625,
        645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1255": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        621
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1256": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1258": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1259": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "GT",
      "path": "2"
    },
    "1260": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1261": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F8"
    },
    "1264": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1265": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F8"
    },
    "1268": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8AD"
    },
    "1271": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        616,
        645
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1272": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1273": {
      "branch": 34,
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "SUB",
      "path": "2"
    },
    "1274": {
      "fn": "ECDSA._throwError",
      "offset": [
        612,
        1173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x500"
    },
    "1277": {
      "branch": 34,
      "fn": "ECDSA._throwError",
      "offset": [
        612,
        1173
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1278": {
      "fn": "ECDSA._throwError",
      "offset": [
        548,
        1179
      ],
      "op": "POP",
      "path": "2"
    },
    "1279": {
      "fn": "ECDSA._throwError",
      "jump": "o",
      "offset": [
        548,
        1179
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1280": {
      "fn": "ECDSA._throwError",
      "offset": [
        612,
        1173
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1281": {
      "fn": "ECDSA._throwError",
      "offset": [
        721,
        750
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1283": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        717
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1284": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1286": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1287": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "GT",
      "path": "2"
    },
    "1288": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1289": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x514"
    },
    "1292": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1293": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x514"
    },
    "1296": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8AD"
    },
    "1299": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        712,
        750
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1300": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1301": {
      "branch": 35,
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "SUB",
      "path": "2"
    },
    "1302": {
      "fn": "ECDSA._throwError",
      "offset": [
        708,
        1173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x561"
    },
    "1305": {
      "branch": 35,
      "fn": "ECDSA._throwError",
      "offset": [
        708,
        1173
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1306": {
      "fn": "ECDSA._throwError",
      "offset": [
        766,
        800
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 18,
      "value": "0x40"
    },
    "1308": {
      "fn": "ECDSA._throwError",
      "offset": [
        766,
        800
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1309": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1315": {
      "op": "SHL"
    },
    "1316": {
      "fn": "ECDSA._throwError",
      "offset": [
        766,
        800
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1317": {
      "fn": "ECDSA._throwError",
      "offset": [
        766,
        800
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1320": {
      "fn": "ECDSA._throwError",
      "offset": [
        766,
        800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1322": {
      "fn": "ECDSA._throwError",
      "offset": [
        766,
        800
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1323": {
      "fn": "ECDSA._throwError",
      "offset": [
        766,
        800
      ],
      "op": "ADD",
      "path": "2"
    },
    "1324": {
      "op": "MSTORE"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1329": {
      "op": "DUP3"
    },
    "1330": {
      "op": "ADD"
    },
    "1331": {
      "op": "MSTORE"
    },
    "1332": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E61747572650000000000000000"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1367": {
      "op": "DUP3"
    },
    "1368": {
      "op": "ADD"
    },
    "1369": {
      "op": "MSTORE"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1372": {
      "op": "ADD"
    },
    "1373": {
      "fn": "ECDSA._throwError",
      "offset": [
        766,
        800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B"
    },
    "1376": {
      "op": "JUMP"
    },
    "1377": {
      "fn": "ECDSA._throwError",
      "offset": [
        708,
        1173
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1378": {
      "fn": "ECDSA._throwError",
      "offset": [
        830,
        865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1380": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        826
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1381": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1383": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1384": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "GT",
      "path": "2"
    },
    "1385": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1386": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x575"
    },
    "1389": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1390": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x575"
    },
    "1393": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8AD"
    },
    "1396": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        821,
        865
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1397": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1398": {
      "branch": 36,
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "SUB",
      "path": "2"
    },
    "1399": {
      "fn": "ECDSA._throwError",
      "offset": [
        817,
        1173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C2"
    },
    "1402": {
      "branch": 36,
      "fn": "ECDSA._throwError",
      "offset": [
        817,
        1173
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1403": {
      "fn": "ECDSA._throwError",
      "offset": [
        881,
        922
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 19,
      "value": "0x40"
    },
    "1405": {
      "fn": "ECDSA._throwError",
      "offset": [
        881,
        922
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1406": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1412": {
      "op": "SHL"
    },
    "1413": {
      "fn": "ECDSA._throwError",
      "offset": [
        881,
        922
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1414": {
      "fn": "ECDSA._throwError",
      "offset": [
        881,
        922
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1417": {
      "fn": "ECDSA._throwError",
      "offset": [
        881,
        922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1419": {
      "fn": "ECDSA._throwError",
      "offset": [
        881,
        922
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1420": {
      "fn": "ECDSA._throwError",
      "offset": [
        881,
        922
      ],
      "op": "ADD",
      "path": "2"
    },
    "1421": {
      "op": "MSTORE"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1426": {
      "op": "DUP3"
    },
    "1427": {
      "op": "ADD"
    },
    "1428": {
      "op": "MSTORE"
    },
    "1429": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1464": {
      "op": "DUP3"
    },
    "1465": {
      "op": "ADD"
    },
    "1466": {
      "op": "MSTORE"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1469": {
      "op": "ADD"
    },
    "1470": {
      "fn": "ECDSA._throwError",
      "offset": [
        881,
        922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B"
    },
    "1473": {
      "op": "JUMP"
    },
    "1474": {
      "fn": "ECDSA._throwError",
      "offset": [
        817,
        1173
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1475": {
      "fn": "ECDSA._throwError",
      "offset": [
        952,
        982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1477": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        948
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1478": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1480": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1481": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "GT",
      "path": "2"
    },
    "1482": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1483": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D6"
    },
    "1486": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1487": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D6"
    },
    "1490": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8AD"
    },
    "1493": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        943,
        982
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1494": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1495": {
      "branch": 37,
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "SUB",
      "path": "2"
    },
    "1496": {
      "fn": "ECDSA._throwError",
      "offset": [
        939,
        1173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x62E"
    },
    "1499": {
      "branch": 37,
      "fn": "ECDSA._throwError",
      "offset": [
        939,
        1173
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1500": {
      "fn": "ECDSA._throwError",
      "offset": [
        998,
        1042
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 20,
      "value": "0x40"
    },
    "1502": {
      "fn": "ECDSA._throwError",
      "offset": [
        998,
        1042
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1503": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1509": {
      "op": "SHL"
    },
    "1510": {
      "fn": "ECDSA._throwError",
      "offset": [
        998,
        1042
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1511": {
      "fn": "ECDSA._throwError",
      "offset": [
        998,
        1042
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1514": {
      "fn": "ECDSA._throwError",
      "offset": [
        998,
        1042
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1516": {
      "fn": "ECDSA._throwError",
      "offset": [
        998,
        1042
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1517": {
      "fn": "ECDSA._throwError",
      "offset": [
        998,
        1042
      ],
      "op": "ADD",
      "path": "2"
    },
    "1518": {
      "op": "MSTORE"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1523": {
      "op": "DUP3"
    },
    "1524": {
      "op": "ADD"
    },
    "1525": {
      "op": "MSTORE"
    },
    "1526": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265202773272076616C"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1561": {
      "op": "DUP3"
    },
    "1562": {
      "op": "ADD"
    },
    "1563": {
      "op": "MSTORE"
    },
    "1564": {
      "op": "PUSH2",
      "value": "0x7565"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1569": {
      "op": "SHL"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1572": {
      "op": "DUP3"
    },
    "1573": {
      "op": "ADD"
    },
    "1574": {
      "op": "MSTORE"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1577": {
      "op": "ADD"
    },
    "1578": {
      "fn": "ECDSA._throwError",
      "offset": [
        998,
        1042
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B"
    },
    "1581": {
      "op": "JUMP"
    },
    "1582": {
      "fn": "ECDSA._throwError",
      "offset": [
        939,
        1173
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1583": {
      "fn": "ECDSA._throwError",
      "offset": [
        1072,
        1102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1585": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1068
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1586": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1588": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1589": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "GT",
      "path": "2"
    },
    "1590": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1591": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x642"
    },
    "1594": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1595": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x642"
    },
    "1598": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8AD"
    },
    "1601": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        1063,
        1102
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1602": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1603": {
      "branch": 38,
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "SUB",
      "path": "2"
    },
    "1604": {
      "fn": "ECDSA._throwError",
      "offset": [
        1059,
        1173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69A"
    },
    "1607": {
      "branch": 38,
      "fn": "ECDSA._throwError",
      "offset": [
        1059,
        1173
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1608": {
      "fn": "ECDSA._throwError",
      "offset": [
        1118,
        1162
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 21,
      "value": "0x40"
    },
    "1610": {
      "fn": "ECDSA._throwError",
      "offset": [
        1118,
        1162
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1611": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1617": {
      "op": "SHL"
    },
    "1618": {
      "fn": "ECDSA._throwError",
      "offset": [
        1118,
        1162
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1619": {
      "fn": "ECDSA._throwError",
      "offset": [
        1118,
        1162
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1622": {
      "fn": "ECDSA._throwError",
      "offset": [
        1118,
        1162
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1624": {
      "fn": "ECDSA._throwError",
      "offset": [
        1118,
        1162
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1625": {
      "fn": "ECDSA._throwError",
      "offset": [
        1118,
        1162
      ],
      "op": "ADD",
      "path": "2"
    },
    "1626": {
      "op": "MSTORE"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1631": {
      "op": "DUP3"
    },
    "1632": {
      "op": "ADD"
    },
    "1633": {
      "op": "MSTORE"
    },
    "1634": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265202776272076616C"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1669": {
      "op": "DUP3"
    },
    "1670": {
      "op": "ADD"
    },
    "1671": {
      "op": "MSTORE"
    },
    "1672": {
      "op": "PUSH2",
      "value": "0x7565"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1677": {
      "op": "SHL"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1680": {
      "op": "DUP3"
    },
    "1681": {
      "op": "ADD"
    },
    "1682": {
      "op": "MSTORE"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1685": {
      "op": "ADD"
    },
    "1686": {
      "fn": "ECDSA._throwError",
      "offset": [
        1118,
        1162
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B"
    },
    "1689": {
      "op": "JUMP"
    },
    "1690": {
      "fn": "ECDSA._throwError",
      "offset": [
        1059,
        1173
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1691": {
      "fn": "ECDSA._throwError",
      "offset": [
        548,
        1179
      ],
      "op": "POP",
      "path": "2"
    },
    "1692": {
      "fn": "ECDSA._throwError",
      "jump": "o",
      "offset": [
        548,
        1179
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1693": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1694": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5842,
        5849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1696": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5842,
        5849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1697": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6766,
        6832
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
    },
    "1730": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6753,
        6832
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1731": {
      "branch": 39,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6753,
        6832
      ],
      "op": "GT",
      "path": "2"
    },
    "1732": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6749,
        6910
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1733": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6749,
        6910
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D4"
    },
    "1736": {
      "branch": 39,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6749,
        6910
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1737": {
      "op": "POP"
    },
    "1738": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6864,
        6865
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 22,
      "value": "0x0"
    },
    "1740": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6864,
        6865
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1741": {
      "op": "POP"
    },
    "1742": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6868,
        6898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1744": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6848,
        6899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x781"
    },
    "1747": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6848,
        6899
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1748": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6749,
        6910
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1749": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6924
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1750": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1752": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6930
      ],
      "op": "AND",
      "path": "2"
    },
    "1753": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6928,
        6930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1B"
    },
    "1755": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6930
      ],
      "op": "EQ",
      "path": "2"
    },
    "1756": {
      "branch": 40,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6930
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1757": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1758": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1759": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6EC"
    },
    "1762": {
      "branch": 40,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1763": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "POP",
      "path": "2"
    },
    "1764": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6934,
        6935
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1765": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6934,
        6941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1767": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6934,
        6941
      ],
      "op": "AND",
      "path": "2"
    },
    "1768": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6939,
        6941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1C"
    },
    "1770": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6934,
        6941
      ],
      "op": "EQ",
      "path": "2"
    },
    "1771": {
      "branch": 41,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6934,
        6941
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1772": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1773": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6919,
        7019
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1774": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6919,
        7019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6FD"
    },
    "1777": {
      "branch": 41,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6919,
        7019
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1778": {
      "op": "POP"
    },
    "1779": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6973,
        6974
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0x0"
    },
    "1781": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6973,
        6974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1782": {
      "op": "POP"
    },
    "1783": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6977,
        7007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1785": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6957,
        7008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x781"
    },
    "1788": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6957,
        7008
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1789": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6919,
        7019
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1790": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1792": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1793": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1794": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7113,
        7127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1796": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1797": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1798": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1799": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1801": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1802": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "ADD",
      "path": "2"
    },
    "1803": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1804": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1805": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1806": {
      "op": "DUP10"
    },
    "1807": {
      "op": "SWAP1"
    },
    "1808": {
      "op": "MSTORE"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1811": {
      "op": "DUP9"
    },
    "1812": {
      "op": "AND"
    },
    "1813": {
      "op": "SWAP3"
    },
    "1814": {
      "op": "DUP3"
    },
    "1815": {
      "op": "ADD"
    },
    "1816": {
      "op": "SWAP3"
    },
    "1817": {
      "op": "SWAP1"
    },
    "1818": {
      "op": "SWAP3"
    },
    "1819": {
      "op": "MSTORE"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1822": {
      "op": "DUP2"
    },
    "1823": {
      "op": "ADD"
    },
    "1824": {
      "op": "DUP7"
    },
    "1825": {
      "op": "SWAP1"
    },
    "1826": {
      "op": "MSTORE"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1829": {
      "op": "DUP2"
    },
    "1830": {
      "op": "ADD"
    },
    "1831": {
      "op": "DUP6"
    },
    "1832": {
      "op": "SWAP1"
    },
    "1833": {
      "op": "MSTORE"
    },
    "1834": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1836": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1839": {
      "op": "ADD"
    },
    "1840": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1842": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1844": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1845": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1847": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1848": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SUB",
      "path": "2"
    },
    "1849": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1850": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1851": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1852": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SUB",
      "path": "2"
    },
    "1853": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1854": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1855": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "GAS",
      "path": "2"
    },
    "1856": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "1857": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1858": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1859": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1860": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x751"
    },
    "1863": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1864": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1865": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1867": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1868": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1869": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1870": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1872": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1873": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "op": "POP"
    },
    "1876": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1878": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1881": {
      "op": "NOT"
    },
    "1882": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "ADD",
      "path": "2"
    },
    "1883": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1884": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1885": {
      "op": "POP"
    },
    "1886": {
      "op": "POP"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1893": {
      "op": "SHL"
    },
    "1894": {
      "op": "SUB"
    },
    "1895": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7168,
        7188
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1896": {
      "branch": 42,
      "fn": "ECDSA.tryRecover",
      "offset": [
        7168,
        7188
      ],
      "op": "AND",
      "path": "2"
    },
    "1897": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7164,
        7265
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x77A"
    },
    "1900": {
      "branch": 42,
      "fn": "ECDSA.tryRecover",
      "offset": [
        7164,
        7265
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1901": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7220,
        7221
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 24,
      "value": "0x0"
    },
    "1903": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7224,
        7253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1905": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1906": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "POP",
      "path": "2"
    },
    "1907": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1908": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "POP",
      "path": "2"
    },
    "1909": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "POP",
      "path": "2"
    },
    "1910": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x781"
    },
    "1913": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1914": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7164,
        7265
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1915": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7283,
        7289
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 25
    },
    "1916": {
      "op": "POP"
    },
    "1917": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7291,
        7311
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1919": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7291,
        7311
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1920": {
      "op": "POP"
    },
    "1921": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1922": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1923": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "POP",
      "path": "2"
    },
    "1924": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1925": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1926": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "POP",
      "path": "2"
    },
    "1927": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "POP",
      "path": "2"
    },
    "1928": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "POP",
      "path": "2"
    },
    "1929": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        5716,
        7319
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1930": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1931": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4899,
        4906
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1933": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4899,
        4906
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1940": {
      "op": "SHL"
    },
    "1941": {
      "op": "SUB"
    },
    "1942": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4944,
        5024
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1943": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4944,
        5024
      ],
      "op": "AND",
      "path": "2"
    },
    "1944": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4899,
        4906
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1945": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5050,
        5075
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A7"
    },
    "1948": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5066,
        5069
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1950": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5051,
        5069
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1951": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5051,
        5069
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1952": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5051,
        5069
      ],
      "op": "SHR",
      "path": "2"
    },
    "1953": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5073,
        5075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1B"
    },
    "1955": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5050,
        5075
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C3"
    },
    "1958": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        5050,
        5075
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1959": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5050,
        5075
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1960": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5034,
        5076
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1961": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5034,
        5076
      ],
      "op": "POP",
      "path": "2"
    },
    "1962": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5093,
        5118
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 26,
      "value": "0x7B5"
    },
    "1965": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5104,
        5108
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1966": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5110,
        5111
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1967": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5113,
        5114
      ],
      "op": "DUP9",
      "path": "2"
    },
    "1968": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5116,
        5117
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1969": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5093,
        5103
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69D"
    },
    "1972": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        5093,
        5118
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1973": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5093,
        5118
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1974": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1975": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "POP",
      "path": "2"
    },
    "1976": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1977": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "POP",
      "path": "2"
    },
    "1978": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "POP",
      "path": "2"
    },
    "1979": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "POP",
      "path": "2"
    },
    "1980": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1981": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "POP",
      "path": "2"
    },
    "1982": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1983": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1984": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "POP",
      "path": "2"
    },
    "1985": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "POP",
      "path": "2"
    },
    "1986": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        4789,
        5125
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1987": {
      "op": "JUMPDEST"
    },
    "1988": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1995": {
      "op": "SHL"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1998": {
      "op": "MSTORE"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2003": {
      "op": "MSTORE"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2008": {
      "op": "REVERT"
    },
    "2009": {
      "op": "JUMPDEST"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2012": {
      "op": "DUP1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2015": {
      "op": "DUP4"
    },
    "2016": {
      "op": "DUP6"
    },
    "2017": {
      "op": "SUB"
    },
    "2018": {
      "op": "SLT"
    },
    "2019": {
      "op": "ISZERO"
    },
    "2020": {
      "op": "PUSH2",
      "value": "0x7EC"
    },
    "2023": {
      "op": "JUMPI"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2026": {
      "op": "DUP1"
    },
    "2027": {
      "op": "REVERT"
    },
    "2028": {
      "op": "JUMPDEST"
    },
    "2029": {
      "op": "DUP3"
    },
    "2030": {
      "op": "CALLDATALOAD"
    },
    "2031": {
      "op": "SWAP2"
    },
    "2032": {
      "op": "POP"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2035": {
      "op": "DUP4"
    },
    "2036": {
      "op": "ADD"
    },
    "2037": {
      "op": "CALLDATALOAD"
    },
    "2038": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2047": {
      "op": "DUP1"
    },
    "2048": {
      "op": "DUP3"
    },
    "2049": {
      "op": "GT"
    },
    "2050": {
      "op": "ISZERO"
    },
    "2051": {
      "op": "PUSH2",
      "value": "0x80B"
    },
    "2054": {
      "op": "JUMPI"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2057": {
      "op": "DUP1"
    },
    "2058": {
      "op": "REVERT"
    },
    "2059": {
      "op": "JUMPDEST"
    },
    "2060": {
      "op": "DUP2"
    },
    "2061": {
      "op": "DUP6"
    },
    "2062": {
      "op": "ADD"
    },
    "2063": {
      "op": "SWAP2"
    },
    "2064": {
      "op": "POP"
    },
    "2065": {
      "op": "DUP6"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2068": {
      "op": "DUP4"
    },
    "2069": {
      "op": "ADD"
    },
    "2070": {
      "op": "SLT"
    },
    "2071": {
      "op": "PUSH2",
      "value": "0x81F"
    },
    "2074": {
      "op": "JUMPI"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2077": {
      "op": "DUP1"
    },
    "2078": {
      "op": "REVERT"
    },
    "2079": {
      "op": "JUMPDEST"
    },
    "2080": {
      "op": "DUP2"
    },
    "2081": {
      "op": "CALLDATALOAD"
    },
    "2082": {
      "op": "DUP2"
    },
    "2083": {
      "op": "DUP2"
    },
    "2084": {
      "op": "GT"
    },
    "2085": {
      "op": "ISZERO"
    },
    "2086": {
      "op": "PUSH2",
      "value": "0x831"
    },
    "2089": {
      "op": "JUMPI"
    },
    "2090": {
      "op": "PUSH2",
      "value": "0x831"
    },
    "2093": {
      "op": "PUSH2",
      "value": "0x7C3"
    },
    "2096": {
      "jump": "i",
      "op": "JUMP"
    },
    "2097": {
      "op": "JUMPDEST"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2100": {
      "op": "MLOAD"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2103": {
      "op": "DUP3"
    },
    "2104": {
      "op": "ADD"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2107": {
      "op": "NOT"
    },
    "2108": {
      "op": "SWAP1"
    },
    "2109": {
      "op": "DUP2"
    },
    "2110": {
      "op": "AND"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2113": {
      "op": "ADD"
    },
    "2114": {
      "op": "AND"
    },
    "2115": {
      "op": "DUP2"
    },
    "2116": {
      "op": "ADD"
    },
    "2117": {
      "op": "SWAP1"
    },
    "2118": {
      "op": "DUP4"
    },
    "2119": {
      "op": "DUP3"
    },
    "2120": {
      "op": "GT"
    },
    "2121": {
      "op": "DUP2"
    },
    "2122": {
      "op": "DUP4"
    },
    "2123": {
      "op": "LT"
    },
    "2124": {
      "op": "OR"
    },
    "2125": {
      "op": "ISZERO"
    },
    "2126": {
      "op": "PUSH2",
      "value": "0x859"
    },
    "2129": {
      "op": "JUMPI"
    },
    "2130": {
      "op": "PUSH2",
      "value": "0x859"
    },
    "2133": {
      "op": "PUSH2",
      "value": "0x7C3"
    },
    "2136": {
      "jump": "i",
      "op": "JUMP"
    },
    "2137": {
      "op": "JUMPDEST"
    },
    "2138": {
      "op": "DUP2"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2141": {
      "op": "MSTORE"
    },
    "2142": {
      "op": "DUP3"
    },
    "2143": {
      "op": "DUP2"
    },
    "2144": {
      "op": "MSTORE"
    },
    "2145": {
      "op": "DUP9"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2148": {
      "op": "DUP5"
    },
    "2149": {
      "op": "DUP8"
    },
    "2150": {
      "op": "ADD"
    },
    "2151": {
      "op": "ADD"
    },
    "2152": {
      "op": "GT"
    },
    "2153": {
      "op": "ISZERO"
    },
    "2154": {
      "op": "PUSH2",
      "value": "0x872"
    },
    "2157": {
      "op": "JUMPI"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2160": {
      "op": "DUP1"
    },
    "2161": {
      "op": "REVERT"
    },
    "2162": {
      "op": "JUMPDEST"
    },
    "2163": {
      "op": "DUP3"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2166": {
      "op": "DUP7"
    },
    "2167": {
      "op": "ADD"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2170": {
      "op": "DUP4"
    },
    "2171": {
      "op": "ADD"
    },
    "2172": {
      "op": "CALLDATACOPY"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2177": {
      "op": "DUP5"
    },
    "2178": {
      "op": "DUP4"
    },
    "2179": {
      "op": "ADD"
    },
    "2180": {
      "op": "ADD"
    },
    "2181": {
      "op": "MSTORE"
    },
    "2182": {
      "op": "DUP1"
    },
    "2183": {
      "op": "SWAP6"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "op": "POP"
    },
    "2186": {
      "op": "POP"
    },
    "2187": {
      "op": "POP"
    },
    "2188": {
      "op": "POP"
    },
    "2189": {
      "op": "POP"
    },
    "2190": {
      "op": "SWAP3"
    },
    "2191": {
      "op": "POP"
    },
    "2192": {
      "op": "SWAP3"
    },
    "2193": {
      "op": "SWAP1"
    },
    "2194": {
      "op": "POP"
    },
    "2195": {
      "jump": "o",
      "op": "JUMP"
    },
    "2196": {
      "op": "JUMPDEST"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2201": {
      "op": "DUP3"
    },
    "2202": {
      "op": "DUP5"
    },
    "2203": {
      "op": "SUB"
    },
    "2204": {
      "op": "SLT"
    },
    "2205": {
      "op": "ISZERO"
    },
    "2206": {
      "op": "PUSH2",
      "value": "0x8A6"
    },
    "2209": {
      "op": "JUMPI"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2212": {
      "op": "DUP1"
    },
    "2213": {
      "op": "REVERT"
    },
    "2214": {
      "op": "JUMPDEST"
    },
    "2215": {
      "op": "POP"
    },
    "2216": {
      "op": "CALLDATALOAD"
    },
    "2217": {
      "op": "SWAP2"
    },
    "2218": {
      "op": "SWAP1"
    },
    "2219": {
      "op": "POP"
    },
    "2220": {
      "jump": "o",
      "op": "JUMP"
    },
    "2221": {
      "op": "JUMPDEST"
    },
    "2222": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2229": {
      "op": "SHL"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2232": {
      "op": "MSTORE"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2237": {
      "op": "MSTORE"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2242": {
      "op": "REVERT"
    },
    "2243": {
      "op": "JUMPDEST"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2246": {
      "op": "DUP3"
    },
    "2247": {
      "op": "NOT"
    },
    "2248": {
      "op": "DUP3"
    },
    "2249": {
      "op": "GT"
    },
    "2250": {
      "op": "ISZERO"
    },
    "2251": {
      "op": "PUSH2",
      "value": "0x8E4"
    },
    "2254": {
      "op": "JUMPI"
    },
    "2255": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2262": {
      "op": "SHL"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2265": {
      "op": "MSTORE"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2270": {
      "op": "MSTORE"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2275": {
      "op": "REVERT"
    },
    "2276": {
      "op": "JUMPDEST"
    },
    "2277": {
      "op": "POP"
    },
    "2278": {
      "op": "ADD"
    },
    "2279": {
      "op": "SWAP1"
    },
    "2280": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d3984be3ec19b0a2e8c59e76fb01d2a030e6dca2",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.14;\n\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"./console.sol\";\n\ncontract UniDirectionalPaymentChannel is ReentrancyGuard {\n    using ECDSA for bytes32;\n\n    address payable public sender;\n    address payable public receiver;\n\n    uint256 private constant DURATION = 7 * 24 * 60 * 60;\n    uint256 public expiresAt;\n\n    constructor(address payable _receiver) payable {\n        require(_receiver != address(0), \"receiver = zero address\");\n        sender = payable(msg.sender);\n        receiver = _receiver;\n        expiresAt = block.timestamp + DURATION;\n    }\n\n    function _getHash(uint256 _amount) private view returns (bytes32) {\n        // NOTE: sign with address of this contract to protect agains\n        // replay attack on other contracts\n        return keccak256(abi.encodePacked(address(this), _amount));\n    }\n\n    function getHash(uint256 _amount) external view returns (bytes32) {\n        return _getHash(_amount);\n    }\n\n    function _getEthSignedHash(uint256 _amount) private view returns (bytes32) {\n        return _getHash(_amount).toEthSignedMessageHash();\n    }\n\n    function getEthSignedHash(uint256 _amount) external view returns (bytes32) {\n        return _getEthSignedHash(_amount);\n    }\n\n    function _verify(uint256 _amount, bytes memory _sig)\n        private\n        view\n        returns (bool)\n    {\n        return _getEthSignedHash(_amount).recover(_sig) == sender;\n    }\n\n    function verify(uint256 _amount, bytes memory _sig)\n        external\n        view\n        returns (bool)\n    {\n        return _verify(_amount, _sig);\n    }\n\n    function close(uint256 _amount, bytes memory _sig) external nonReentrant {\n        require(msg.sender == receiver, \"!receiver\");\n        require(_verify(_amount, _sig), \"invalid sig\");\n\n        (bool sent, ) = receiver.call{value: _amount}(\"\");\n        require(sent, \"Failed to send Ether\");\n        selfdestruct(sender);\n    }\n\n    function cancel() external {\n        require(msg.sender == sender, \"!sender\");\n        require(block.timestamp >= expiresAt, \"!expired\");\n        selfdestruct(sender);\n    }\n}\n",
  "sourceMap": "208:2010:9:-:0;;;463:239;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:0;1806:7;:22;-1:-1:-1;;;;;528:23:9;;520:59;;;;-1:-1:-1;;;520:59:9;;519:2:11;520:59:9;;;501:21:11;558:2;538:18;;;531:30;597:25;577:18;;;570:53;640:18;;520:59:9;;;;;;;;589:6;:28;;606:10;-1:-1:-1;;;;;;589:28:9;;;;;;;627:8;:20;;;;;-1:-1:-1;;;;;627:20:9;;;;;669:26;410:16;669:15;:26;:::i;:::-;657:9;:38;-1:-1:-1;208:2010:9;;14:298:11;92:6;145:2;133:9;124:7;120:23;116:32;113:52;;;161:1;158;151:12;113:52;187:16;;-1:-1:-1;;;;;232:31:11;;222:42;;212:70;;278:1;275;268:12;212:70;301:5;14:298;-1:-1:-1;;;14:298:11:o;669:225::-;709:3;740:1;736:6;733:1;730:13;727:136;;;785:10;780:3;776:20;773:1;766:31;820:4;817:1;810:15;848:4;845:1;838:15;727:136;-1:-1:-1;879:9:11;;669:225::o;:::-;208:2010:9;;;;;;",
  "sourcePath": "contracts/UnidirectionalPayment.sol",
  "type": "contract"
}