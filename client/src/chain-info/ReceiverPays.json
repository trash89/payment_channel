{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "claimPayment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "7": "contracts/ReceiverPays.sol"
  },
  "ast": {
    "absolutePath": "contracts/ReceiverPays.sol",
    "exportedSymbols": {
      "ReceiverPays": [
        1669
      ],
      "console": [
        10280
      ]
    },
    "id": 1670,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1509,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:7"
      },
      {
        "absolutePath": "contracts/console.sol",
        "file": "./console.sol",
        "id": 1510,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1670,
        "sourceUnit": 10281,
        "src": "60:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ReceiverPays",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1669,
        "linearizedBaseContracts": [
          1669
        ],
        "name": "ReceiverPays",
        "nameLocation": "94:12:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1514,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "121:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 1669,
            "src": "113:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1511,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "113:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 1512,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -15,
                "src": "129:3:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 1513,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "129:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1518,
            "mutability": "mutable",
            "name": "usedNonces",
            "nameLocation": "170:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 1669,
            "src": "145:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 1517,
              "keyType": {
                "id": 1515,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "153:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "145:24:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 1516,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "164:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1521,
              "nodeType": "Block",
              "src": "209:2:7",
              "statements": []
            },
            "id": 1522,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "198:2:7"
            },
            "returnParameters": {
              "id": 1520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "209:0:7"
            },
            "scope": 1669,
            "src": "187:24:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1577,
              "nodeType": "Block",
              "src": "333:373:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "351:18:7",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1532,
                            "name": "usedNonces",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1518,
                            "src": "352:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 1534,
                          "indexExpression": {
                            "id": 1533,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1526,
                            "src": "363:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "352:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1531,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "343:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "343:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1537,
                  "nodeType": "ExpressionStatement",
                  "src": "343:27:7"
                },
                {
                  "expression": {
                    "id": 1542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1538,
                        "name": "usedNonces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1518,
                        "src": "380:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 1540,
                      "indexExpression": {
                        "id": 1539,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1526,
                        "src": "391:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "380:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "400:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "380:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1543,
                  "nodeType": "ExpressionStatement",
                  "src": "380:24:7"
                },
                {
                  "assignments": [
                    1545
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1545,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "490:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1577,
                      "src": "482:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1544,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "482:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1558,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1550,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "549:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "549:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1552,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1524,
                                "src": "561:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1553,
                                "name": "nonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1526,
                                "src": "569:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1554,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "576:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ReceiverPays_$1669",
                                  "typeString": "contract ReceiverPays"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_contract$_ReceiverPays_$1669",
                                  "typeString": "contract ReceiverPays"
                                }
                              ],
                              "expression": {
                                "id": 1548,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "532:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 1549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "532:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 1555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "532:49:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1547,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "522:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 1556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "522:60:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1546,
                      "name": "prefixed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1668,
                      "src": "500:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 1557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "500:92:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "482:110:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1561,
                              "name": "message",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1545,
                              "src": "624:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1562,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1528,
                              "src": "633:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1560,
                            "name": "recoverSigner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1651,
                            "src": "610:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 1563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "610:33:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1564,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1514,
                          "src": "647:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "610:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "602:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "602:51:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1567,
                  "nodeType": "ExpressionStatement",
                  "src": "602:51:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1574,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1524,
                        "src": "692:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1570,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "671:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "671:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "663:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1568,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "663:8:7",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "663:19:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "663:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "663:36:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1576,
                  "nodeType": "ExpressionStatement",
                  "src": "663:36:7"
                }
              ]
            },
            "functionSelector": "a90ae887",
            "id": 1578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimPayment",
            "nameLocation": "226:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1524,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "256:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1578,
                  "src": "248:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "248:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1526,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "280:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1578,
                  "src": "272:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "272:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1528,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "308:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1578,
                  "src": "295:22:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1527,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "238:85:7"
            },
            "returnParameters": {
              "id": 1530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:0:7"
            },
            "scope": 1669,
            "src": "217:489:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1597,
              "nodeType": "Block",
              "src": "802:88:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1583,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "820:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "820:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1585,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1514,
                          "src": "834:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "820:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "812:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "812:28:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1588,
                  "nodeType": "ExpressionStatement",
                  "src": "812:28:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1592,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "871:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "871:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "863:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1590,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "863:8:7",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "863:19:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1589,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "850:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 1595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "850:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1596,
                  "nodeType": "ExpressionStatement",
                  "src": "850:33:7"
                }
              ]
            },
            "documentation": {
              "id": 1579,
              "nodeType": "StructuredDocumentation",
              "src": "712:56:7",
              "text": "destroy the contract and reclaim the leftover funds."
            },
            "functionSelector": "fc0e74d1",
            "id": 1598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "shutdown",
            "nameLocation": "782:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "790:2:7"
            },
            "returnParameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "802:0:7"
            },
            "scope": 1669,
            "src": "773:117:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1623,
              "nodeType": "Block",
              "src": "1093:366:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1611,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1601,
                            "src": "1111:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1111:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 1613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1125:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "1111:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1103:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1103:25:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1616,
                  "nodeType": "ExpressionStatement",
                  "src": "1103:25:7"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1147:280:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1217:24:7",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "sig",
                                  "nodeType": "YulIdentifier",
                                  "src": "1232:3:7"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1237:2:7",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1228:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1228:12:7"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1222:5:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1222:19:7"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "1217:1:7"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1286:24:7",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "sig",
                                  "nodeType": "YulIdentifier",
                                  "src": "1301:3:7"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1306:2:7",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1297:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1297:12:7"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1291:5:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1291:19:7"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "1286:1:7"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1384:33:7",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1394:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "sig",
                                      "nodeType": "YulIdentifier",
                                      "src": "1407:3:7"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1412:2:7",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1403:3:7"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1403:12:7"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1397:5:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1397:19:7"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "1389:4:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1389:28:7"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "1384:1:7"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1606,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1217:1:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1608,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1286:1:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1601,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1232:3:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1601,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1301:3:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1601,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1407:3:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1604,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1384:1:7",
                      "valueSize": 1
                    }
                  ],
                  "id": 1617,
                  "nodeType": "InlineAssembly",
                  "src": "1138:289:7"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1618,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1604,
                        "src": "1444:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1619,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1606,
                        "src": "1447:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1620,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1608,
                        "src": "1450:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 1621,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1443:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(uint8,bytes32,bytes32)"
                    }
                  },
                  "functionReturnParameters": 1609,
                  "id": 1622,
                  "nodeType": "Return",
                  "src": "1436:16:7"
                }
              ]
            },
            "documentation": {
              "id": 1599,
              "nodeType": "StructuredDocumentation",
              "src": "896:22:7",
              "text": "signature methods."
            },
            "id": 1624,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "splitSignature",
            "nameLocation": "932:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1601,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "960:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "947:16:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1600,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "946:18:7"
            },
            "returnParameters": {
              "id": 1609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1604,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "1031:1:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "1025:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1603,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1025:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1606,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "1054:1:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "1046:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1605,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1608,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "1077:1:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "1069:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1607,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:77:7"
            },
            "scope": 1669,
            "src": "923:536:7",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1650,
              "nodeType": "Block",
              "src": "1583:114:7",
              "statements": [
                {
                  "assignments": [
                    1634,
                    1636,
                    1638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1634,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "1600:1:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1650,
                      "src": "1594:7:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1633,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1594:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1636,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "1611:1:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1650,
                      "src": "1603:9:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1635,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1603:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1638,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "1622:1:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1650,
                      "src": "1614:9:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1637,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1614:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1642,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1640,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1628,
                        "src": "1642:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1639,
                      "name": "splitSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1624,
                      "src": "1627:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (uint8,bytes32,bytes32)"
                      }
                    },
                    "id": 1641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1627:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(uint8,bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1593:53:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1644,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1626,
                        "src": "1673:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1645,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1634,
                        "src": "1682:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1646,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1636,
                        "src": "1685:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1647,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1638,
                        "src": "1688:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1643,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "1663:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 1648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1663:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1632,
                  "id": 1649,
                  "nodeType": "Return",
                  "src": "1656:34:7"
                }
              ]
            },
            "id": 1651,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recoverSigner",
            "nameLocation": "1474:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1626,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "1496:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1651,
                  "src": "1488:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1625,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1488:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1628,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "1518:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1651,
                  "src": "1505:16:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1627,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1505:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1487:35:7"
            },
            "returnParameters": {
              "id": 1632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1651,
                  "src": "1570:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1570:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1569:9:7"
            },
            "scope": 1669,
            "src": "1465:232:7",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1667,
              "nodeType": "Block",
              "src": "1833:135:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                            "id": 1662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1906:34:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n32"
                          },
                          {
                            "id": 1663,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1654,
                            "src": "1942:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1660,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1889:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1889:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1889:58:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1659,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1862:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1862:99:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1658,
                  "id": 1666,
                  "nodeType": "Return",
                  "src": "1843:118:7"
                }
              ]
            },
            "documentation": {
              "id": 1652,
              "nodeType": "StructuredDocumentation",
              "src": "1703:61:7",
              "text": "builds a prefixed hash to mimic the behavior of eth_sign."
            },
            "id": 1668,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prefixed",
            "nameLocation": "1778:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1654,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "1795:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1668,
                  "src": "1787:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1653,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1787:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1786:14:7"
            },
            "returnParameters": {
              "id": 1658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1657,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1668,
                  "src": "1824:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1656,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1824:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1823:9:7"
            },
            "scope": 1669,
            "src": "1769:199:7",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1670,
        "src": "85:1885:7",
        "usedErrors": []
      }
    ],
    "src": "36:1935:7"
  },
  "bytecode": "6080604052600080546001600160a01b03191633179055610354806100256000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a90ae8871461003b578063fc0e74d114610050575b600080fd5b61004e61004936600461025a565b610058565b005b61004e61017c565b60008281526001602052604090205460ff161561007457600080fd5b6000828152600160208181526040808420805460ff191690931790925581516bffffffffffffffffffffffff1933606090811b821683850152603483018990526054830188905230901b166074820152825180820360680181526088820184528051908301207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a883015260c4808301919091528351808303909101815260e4909101909252815191012090546001600160a01b03166101358284610196565b6001600160a01b03161461014857600080fd5b604051339085156108fc029086906000818181858888f19350505050158015610175573d6000803e3d6000fd5b5050505050565b6000546001600160a01b0316331461019357600080fd5b33ff5b6000806000806101a585610215565b6040805160008152602081018083528b905260ff8516918101919091526060810183905260808101829052929550909350915060019060a0016020604051602081039080840390855afa158015610200573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411461022857600080fd5b5050506020810151604082015160609092015160001a92909190565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561026f57600080fd5b8335925060208401359150604084013567ffffffffffffffff8082111561029557600080fd5b818601915086601f8301126102a957600080fd5b8135818111156102bb576102bb610244565b604051601f8201601f19908116603f011681019083821181831017156102e3576102e3610244565b816040528281528960208487010111156102fc57600080fd5b826020860160208301376000602084830101528095505050505050925092509256fea2646970667358221220f4eb70afad042608ccce4ddf65cb74261930bb2d45a5ceee9319783dd1d6e55364736f6c634300080e0033",
  "bytecodeSha1": "b65d7a407bc0de2d0ab0a5225e8fb5d53eaa8442",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "ReceiverPays",
  "coverageMap": {
    "branches": {
      "7": {
        "ReceiverPays.claimPayment": {
          "9": [
            351,
            369,
            true
          ],
          "10": [
            610,
            652,
            true
          ]
        },
        "ReceiverPays.shutdown": {
          "11": [
            820,
            839,
            true
          ]
        },
        "ReceiverPays.splitSignature": {
          "12": [
            1111,
            1127,
            true
          ]
        }
      }
    },
    "statements": {
      "7": {
        "ReceiverPays.claimPayment": {
          "0": [
            343,
            370
          ],
          "1": [
            380,
            404
          ],
          "3": [
            602,
            653
          ],
          "4": [
            663,
            699
          ]
        },
        "ReceiverPays.prefixed": {
          "2": [
            1843,
            1961
          ]
        },
        "ReceiverPays.recoverSigner": {
          "7": [
            1656,
            1690
          ]
        },
        "ReceiverPays.shutdown": {
          "5": [
            812,
            840
          ],
          "6": [
            850,
            883
          ]
        },
        "ReceiverPays.splitSignature": {
          "8": [
            1103,
            1128
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063a90ae8871461003b578063fc0e74d114610050575b600080fd5b61004e61004936600461025a565b610058565b005b61004e61017c565b60008281526001602052604090205460ff161561007457600080fd5b6000828152600160208181526040808420805460ff191690931790925581516bffffffffffffffffffffffff1933606090811b821683850152603483018990526054830188905230901b166074820152825180820360680181526088820184528051908301207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a883015260c4808301919091528351808303909101815260e4909101909252815191012090546001600160a01b03166101358284610196565b6001600160a01b03161461014857600080fd5b604051339085156108fc029086906000818181858888f19350505050158015610175573d6000803e3d6000fd5b5050505050565b6000546001600160a01b0316331461019357600080fd5b33ff5b6000806000806101a585610215565b6040805160008152602081018083528b905260ff8516918101919091526060810183905260808101829052929550909350915060019060a0016020604051602081039080840390855afa158015610200573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411461022857600080fd5b5050506020810151604082015160609092015160001a92909190565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561026f57600080fd5b8335925060208401359150604084013567ffffffffffffffff8082111561029557600080fd5b818601915086601f8301126102a957600080fd5b8135818111156102bb576102bb610244565b604051601f8201601f19908116603f011681019083821181831017156102e3576102e3610244565b816040528281528960208487010111156102fc57600080fd5b826020860160208301376000602084830101528095505050505050925092509256fea2646970667358221220f4eb70afad042608ccce4ddf65cb74261930bb2d45a5ceee9319783dd1d6e55364736f6c634300080e0033",
  "deployedSourceMap": "85:1885:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:489;;;;;;:::i;:::-;;:::i;:::-;;773:117;;;:::i;217:489::-;352:17;;;;:10;:17;;;;;;;;351:18;343:27;;;;;;380:17;;;;400:4;380:17;;;;;;;;:24;;-1:-1:-1;;380:24:7;;;;;;;532:49;;-1:-1:-1;;549:10:7;1512:2:11;1508:15;;;1504:24;;532:49:7;;;1492:37:11;1545:12;;;1538:28;;;1582:12;;;1575:28;;;576:4:7;1637:15:11;;1633:24;1619:12;;;1612:46;532:49:7;;;;;;;;;1674:13:11;;;532:49:7;;522:60;;;;;;1940:66:11;1889:58:7;;;1928:79:11;2023:12;;;;2016:28;;;;1889:58:7;;;;;;;;;;2060:12:11;;;;1889:58:7;;;1862:99;;;;;647:5;;-1:-1:-1;;;;;647:5:7;610:33;1862:99;633:9;610:13;:33::i;:::-;-1:-1:-1;;;;;610:42:7;;602:51;;;;;;663:36;;671:10;;663:36;;;;;692:6;;663:36;;;;692:6;671:10;663:36;;;;;;;;;;;;;;;;;;;;;333:373;217:489;;;:::o;773:117::-;834:5;;-1:-1:-1;;;;;834:5:7;820:10;:19;812:28;;;;;;871:10;850:33;1465:232;1570:7;1594;1603:9;1614;1627:19;1642:3;1627:14;:19::i;:::-;1663:27;;;;;;;;;;;;2310:25:11;;;2383:4;2371:17;;2351:18;;;2344:45;;;;2405:18;;;2398:34;;;2448:18;;;2441:34;;;1593:53:7;;-1:-1:-1;1593:53:7;;-1:-1:-1;1593:53:7;-1:-1:-1;1663:27:7;;2282:19:11;;1663:27:7;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1663:27:7;;-1:-1:-1;;1663:27:7;;;1465:232;-1:-1:-1;;;;;;;1465:232:7:o;923:536::-;1025:7;1046:9;1069;1111:3;:10;1125:2;1111:16;1103:25;;;;;;-1:-1:-1;;;1237:2:7;1228:12;;1222:19;1306:2;1297:12;;1291:19;1412:2;1403:12;;;1397:19;1394:1;1389:28;;1222:19;;1291;923:536::o;14:127:11:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1057;232:6;240;248;301:2;289:9;280:7;276:23;272:32;269:52;;;317:1;314;307:12;269:52;353:9;340:23;330:33;;410:2;399:9;395:18;382:32;372:42;;465:2;454:9;450:18;437:32;488:18;529:2;521:6;518:14;515:34;;;545:1;542;535:12;515:34;583:6;572:9;568:22;558:32;;628:7;621:4;617:2;613:13;609:27;599:55;;650:1;647;640:12;599:55;686:2;673:16;708:2;704;701:10;698:36;;;714:18;;:::i;:::-;789:2;783:9;757:2;843:13;;-1:-1:-1;;839:22:11;;;863:2;835:31;831:40;819:53;;;887:18;;;907:22;;;884:46;881:72;;;933:18;;:::i;:::-;973:10;969:2;962:22;1008:2;1000:6;993:18;1048:7;1043:2;1038;1034;1030:11;1026:20;1023:33;1020:53;;;1069:1;1066;1059:12;1020:53;1125:2;1120;1116;1112:11;1107:2;1099:6;1095:15;1082:46;1170:1;1165:2;1160;1152:6;1148:15;1144:24;1137:35;1191:6;1181:16;;;;;;;146:1057;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "shutdown()": {
        "notice": "destroy the contract and reclaim the leftover funds."
      }
    },
    "version": 1
  },
  "offset": [
    85,
    1970
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA90AE887 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFC0E74D1 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x25A JUMP JUMPDEST PUSH2 0x58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E PUSH2 0x17C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP2 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND DUP4 DUP6 ADD MSTORE PUSH1 0x34 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0x54 DUP4 ADD DUP9 SWAP1 MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x74 DUP3 ADD MSTORE DUP3 MLOAD DUP1 DUP3 SUB PUSH1 0x68 ADD DUP2 MSTORE PUSH1 0x88 DUP3 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0xA8 DUP4 ADD MSTORE PUSH1 0xC4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE4 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x135 DUP3 DUP5 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 ISZERO PUSH2 0x8FC MUL SWAP1 DUP7 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x175 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1A5 DUP6 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP6 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x200 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x0 BYTE SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2BB JUMPI PUSH2 0x2BB PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2E3 JUMPI PUSH2 0x2E3 PUSH2 0x244 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xEB PUSH17 0xAFAD042608CCCE4DDF65CB74261930BB2D GASLIMIT 0xA5 0xCE 0xEE SWAP4 NOT PUSH25 0x3DD1D6E55364736F6C634300080E0033000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        85,
        1970
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "12": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "REVERT",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "POP",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "LT",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "29": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "SHR",
      "path": "7"
    },
    "32": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "DUP1",
      "path": "7"
    },
    "33": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA90AE887"
    },
    "38": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "EQ",
      "path": "7"
    },
    "39": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "43": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "DUP1",
      "path": "7"
    },
    "44": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFC0E74D1"
    },
    "49": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "EQ",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x50"
    },
    "53": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "54": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "55": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "57": {
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "DUP1",
      "path": "7"
    },
    "58": {
      "first_revert": true,
      "fn": null,
      "offset": [
        85,
        1970
      ],
      "op": "REVERT",
      "path": "7"
    },
    "59": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        217,
        706
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "60": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        217,
        706
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4E"
    },
    "63": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        217,
        706
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x49"
    },
    "66": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        217,
        706
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "67": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        217,
        706
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "69": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        217,
        706
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x25A"
    },
    "72": {
      "fn": "ReceiverPays.claimPayment",
      "jump": "i",
      "offset": [
        217,
        706
      ],
      "op": "JUMP",
      "path": "7"
    },
    "73": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        217,
        706
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "74": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        217,
        706
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x58"
    },
    "77": {
      "fn": "ReceiverPays.claimPayment",
      "jump": "i",
      "offset": [
        217,
        706
      ],
      "op": "JUMP",
      "path": "7"
    },
    "78": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        217,
        706
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "79": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        217,
        706
      ],
      "op": "STOP",
      "path": "7"
    },
    "80": {
      "fn": "ReceiverPays.shutdown",
      "offset": [
        773,
        890
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "81": {
      "fn": "ReceiverPays.shutdown",
      "offset": [
        773,
        890
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4E"
    },
    "84": {
      "fn": "ReceiverPays.shutdown",
      "offset": [
        773,
        890
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17C"
    },
    "87": {
      "fn": "ReceiverPays.shutdown",
      "jump": "i",
      "offset": [
        773,
        890
      ],
      "op": "JUMP",
      "path": "7"
    },
    "88": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        217,
        706
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "89": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        352,
        369
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 0,
      "value": "0x0"
    },
    "91": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        352,
        369
      ],
      "op": "DUP3",
      "path": "7"
    },
    "92": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        352,
        369
      ],
      "op": "DUP2",
      "path": "7"
    },
    "93": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        352,
        369
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "94": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        352,
        362
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "96": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        352,
        369
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "98": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        352,
        369
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "99": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        352,
        369
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "101": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        352,
        369
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "102": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        352,
        369
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "103": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        352,
        369
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "104": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        352,
        369
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "106": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        352,
        369
      ],
      "op": "AND",
      "path": "7"
    },
    "107": {
      "branch": 9,
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        351,
        369
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "108": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        343,
        370
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x74"
    },
    "111": {
      "branch": 9,
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        343,
        370
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "112": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        343,
        370
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "114": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        343,
        370
      ],
      "op": "DUP1",
      "path": "7"
    },
    "115": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        343,
        370
      ],
      "op": "REVERT",
      "path": "7"
    },
    "116": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        343,
        370
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "117": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        397
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 1,
      "value": "0x0"
    },
    "119": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        397
      ],
      "op": "DUP3",
      "path": "7"
    },
    "120": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        397
      ],
      "op": "DUP2",
      "path": "7"
    },
    "121": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        397
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "122": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        400,
        404
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "124": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        397
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "126": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        397
      ],
      "op": "DUP2",
      "path": "7"
    },
    "127": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        397
      ],
      "op": "DUP2",
      "path": "7"
    },
    "128": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        397
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "129": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        397
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "131": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        397
      ],
      "op": "DUP1",
      "path": "7"
    },
    "132": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        397
      ],
      "op": "DUP5",
      "path": "7"
    },
    "133": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        397
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "134": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        404
      ],
      "op": "DUP1",
      "path": "7"
    },
    "135": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        404
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "136": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "138": {
      "op": "NOT"
    },
    "139": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        404
      ],
      "op": "AND",
      "path": "7"
    },
    "140": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        404
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "141": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        404
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "142": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        404
      ],
      "op": "OR",
      "path": "7"
    },
    "143": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        404
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "144": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        404
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "145": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        380,
        404
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "146": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        532,
        581
      ],
      "op": "DUP2",
      "path": "7"
    },
    "147": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        532,
        581
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "148": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "161": {
      "op": "NOT"
    },
    "162": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        549,
        559
      ],
      "op": "CALLER",
      "path": "7"
    },
    "163": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "165": {
      "op": "SWAP1"
    },
    "166": {
      "op": "DUP2"
    },
    "167": {
      "op": "SHL"
    },
    "168": {
      "op": "DUP3"
    },
    "169": {
      "op": "AND"
    },
    "170": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        532,
        581
      ],
      "op": "DUP4",
      "path": "7"
    },
    "171": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        532,
        581
      ],
      "op": "DUP6",
      "path": "7"
    },
    "172": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        532,
        581
      ],
      "op": "ADD",
      "path": "7"
    },
    "173": {
      "op": "MSTORE"
    },
    "174": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "176": {
      "op": "DUP4"
    },
    "177": {
      "op": "ADD"
    },
    "178": {
      "op": "DUP10"
    },
    "179": {
      "op": "SWAP1"
    },
    "180": {
      "op": "MSTORE"
    },
    "181": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "183": {
      "op": "DUP4"
    },
    "184": {
      "op": "ADD"
    },
    "185": {
      "op": "DUP9"
    },
    "186": {
      "op": "SWAP1"
    },
    "187": {
      "op": "MSTORE"
    },
    "188": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        576,
        580
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "189": {
      "op": "SWAP1"
    },
    "190": {
      "op": "SHL"
    },
    "191": {
      "op": "AND"
    },
    "192": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "194": {
      "op": "DUP3"
    },
    "195": {
      "op": "ADD"
    },
    "196": {
      "op": "MSTORE"
    },
    "197": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        532,
        581
      ],
      "op": "DUP3",
      "path": "7"
    },
    "198": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        532,
        581
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "199": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        532,
        581
      ],
      "op": "DUP1",
      "path": "7"
    },
    "200": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        532,
        581
      ],
      "op": "DUP3",
      "path": "7"
    },
    "201": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        532,
        581
      ],
      "op": "SUB",
      "path": "7"
    },
    "202": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        532,
        581
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x68"
    },
    "204": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        532,
        581
      ],
      "op": "ADD",
      "path": "7"
    },
    "205": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        532,
        581
      ],
      "op": "DUP2",
      "path": "7"
    },
    "206": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        532,
        581
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "207": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "209": {
      "op": "DUP3"
    },
    "210": {
      "op": "ADD"
    },
    "211": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        532,
        581
      ],
      "op": "DUP5",
      "path": "7"
    },
    "212": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        532,
        581
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "213": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        522,
        582
      ],
      "op": "DUP1",
      "path": "7"
    },
    "214": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        522,
        582
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "215": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        522,
        582
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "216": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        522,
        582
      ],
      "op": "DUP4",
      "path": "7"
    },
    "217": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        522,
        582
      ],
      "op": "ADD",
      "path": "7"
    },
    "218": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        522,
        582
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "219": {
      "op": "PUSH32",
      "value": "0x19457468657265756D205369676E6564204D6573736167653A0A333200000000"
    },
    "252": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1889,
        1947
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 2,
      "value": "0xA8"
    },
    "254": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1889,
        1947
      ],
      "op": "DUP4",
      "path": "7"
    },
    "255": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1889,
        1947
      ],
      "op": "ADD",
      "path": "7"
    },
    "256": {
      "op": "MSTORE"
    },
    "257": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "259": {
      "op": "DUP1"
    },
    "260": {
      "op": "DUP4"
    },
    "261": {
      "op": "ADD"
    },
    "262": {
      "op": "SWAP2"
    },
    "263": {
      "op": "SWAP1"
    },
    "264": {
      "op": "SWAP2"
    },
    "265": {
      "op": "MSTORE"
    },
    "266": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1889,
        1947
      ],
      "op": "DUP4",
      "path": "7"
    },
    "267": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1889,
        1947
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "268": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1889,
        1947
      ],
      "op": "DUP1",
      "path": "7"
    },
    "269": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1889,
        1947
      ],
      "op": "DUP4",
      "path": "7"
    },
    "270": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1889,
        1947
      ],
      "op": "SUB",
      "path": "7"
    },
    "271": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1889,
        1947
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "272": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1889,
        1947
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "273": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1889,
        1947
      ],
      "op": "ADD",
      "path": "7"
    },
    "274": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1889,
        1947
      ],
      "op": "DUP2",
      "path": "7"
    },
    "275": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1889,
        1947
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "276": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "278": {
      "op": "SWAP1"
    },
    "279": {
      "op": "SWAP2"
    },
    "280": {
      "op": "ADD"
    },
    "281": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1889,
        1947
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "282": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1889,
        1947
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "283": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1889,
        1947
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "284": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1862,
        1961
      ],
      "op": "DUP2",
      "path": "7"
    },
    "285": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1862,
        1961
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "286": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1862,
        1961
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "287": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1862,
        1961
      ],
      "op": "ADD",
      "path": "7"
    },
    "288": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1862,
        1961
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "289": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        647,
        652
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 3
    },
    "290": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        647,
        652
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "297": {
      "op": "SHL"
    },
    "298": {
      "op": "SUB"
    },
    "299": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        647,
        652
      ],
      "op": "AND",
      "path": "7"
    },
    "300": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        610,
        643
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x135"
    },
    "303": {
      "fn": "ReceiverPays.prefixed",
      "offset": [
        1862,
        1961
      ],
      "op": "DUP3",
      "path": "7"
    },
    "304": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        633,
        642
      ],
      "op": "DUP5",
      "path": "7"
    },
    "305": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        610,
        623
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x196"
    },
    "308": {
      "fn": "ReceiverPays.claimPayment",
      "jump": "i",
      "offset": [
        610,
        643
      ],
      "op": "JUMP",
      "path": "7"
    },
    "309": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        610,
        643
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "316": {
      "op": "SHL"
    },
    "317": {
      "op": "SUB"
    },
    "318": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        610,
        652
      ],
      "op": "AND",
      "path": "7"
    },
    "319": {
      "branch": 10,
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        610,
        652
      ],
      "op": "EQ",
      "path": "7"
    },
    "320": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        602,
        653
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x148"
    },
    "323": {
      "branch": 10,
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        602,
        653
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "324": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        602,
        653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "326": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        602,
        653
      ],
      "op": "DUP1",
      "path": "7"
    },
    "327": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        602,
        653
      ],
      "op": "REVERT",
      "path": "7"
    },
    "328": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        602,
        653
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "329": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 4,
      "value": "0x40"
    },
    "331": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "332": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        671,
        681
      ],
      "op": "CALLER",
      "path": "7"
    },
    "333": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        671,
        681
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "334": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "DUP6",
      "path": "7"
    },
    "335": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "336": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8FC"
    },
    "339": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "MUL",
      "path": "7"
    },
    "340": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "341": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        692,
        698
      ],
      "op": "DUP7",
      "path": "7"
    },
    "342": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        692,
        698
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "343": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "345": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "DUP2",
      "path": "7"
    },
    "346": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "DUP2",
      "path": "7"
    },
    "347": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "DUP2",
      "path": "7"
    },
    "348": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        692,
        698
      ],
      "op": "DUP6",
      "path": "7"
    },
    "349": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        671,
        681
      ],
      "op": "DUP9",
      "path": "7"
    },
    "350": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "DUP9",
      "path": "7"
    },
    "351": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "CALL",
      "path": "7"
    },
    "352": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "353": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "POP",
      "path": "7"
    },
    "354": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "POP",
      "path": "7"
    },
    "355": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "POP",
      "path": "7"
    },
    "356": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "POP",
      "path": "7"
    },
    "357": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "358": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "DUP1",
      "path": "7"
    },
    "359": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "360": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x175"
    },
    "363": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "364": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "365": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "367": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "DUP1",
      "path": "7"
    },
    "368": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "369": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "370": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "372": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "REVERT",
      "path": "7"
    },
    "373": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "374": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        663,
        699
      ],
      "op": "POP",
      "path": "7"
    },
    "375": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        333,
        706
      ],
      "op": "POP",
      "path": "7"
    },
    "376": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        217,
        706
      ],
      "op": "POP",
      "path": "7"
    },
    "377": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        217,
        706
      ],
      "op": "POP",
      "path": "7"
    },
    "378": {
      "fn": "ReceiverPays.claimPayment",
      "offset": [
        217,
        706
      ],
      "op": "POP",
      "path": "7"
    },
    "379": {
      "fn": "ReceiverPays.claimPayment",
      "jump": "o",
      "offset": [
        217,
        706
      ],
      "op": "JUMP",
      "path": "7"
    },
    "380": {
      "fn": "ReceiverPays.shutdown",
      "offset": [
        773,
        890
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "381": {
      "fn": "ReceiverPays.shutdown",
      "offset": [
        834,
        839
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 5,
      "value": "0x0"
    },
    "383": {
      "fn": "ReceiverPays.shutdown",
      "offset": [
        834,
        839
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "390": {
      "op": "SHL"
    },
    "391": {
      "op": "SUB"
    },
    "392": {
      "fn": "ReceiverPays.shutdown",
      "offset": [
        834,
        839
      ],
      "op": "AND",
      "path": "7"
    },
    "393": {
      "fn": "ReceiverPays.shutdown",
      "offset": [
        820,
        830
      ],
      "op": "CALLER",
      "path": "7"
    },
    "394": {
      "branch": 11,
      "fn": "ReceiverPays.shutdown",
      "offset": [
        820,
        839
      ],
      "op": "EQ",
      "path": "7"
    },
    "395": {
      "fn": "ReceiverPays.shutdown",
      "offset": [
        812,
        840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x193"
    },
    "398": {
      "branch": 11,
      "fn": "ReceiverPays.shutdown",
      "offset": [
        812,
        840
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "399": {
      "fn": "ReceiverPays.shutdown",
      "offset": [
        812,
        840
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "401": {
      "fn": "ReceiverPays.shutdown",
      "offset": [
        812,
        840
      ],
      "op": "DUP1",
      "path": "7"
    },
    "402": {
      "fn": "ReceiverPays.shutdown",
      "offset": [
        812,
        840
      ],
      "op": "REVERT",
      "path": "7"
    },
    "403": {
      "fn": "ReceiverPays.shutdown",
      "offset": [
        812,
        840
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "404": {
      "fn": "ReceiverPays.shutdown",
      "offset": [
        871,
        881
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 6
    },
    "405": {
      "fn": "ReceiverPays.shutdown",
      "offset": [
        850,
        883
      ],
      "op": "SELFDESTRUCT",
      "path": "7"
    },
    "406": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1465,
        1697
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "407": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1570,
        1577
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "409": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1594,
        1601
      ],
      "op": "DUP1",
      "path": "7"
    },
    "410": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1603,
        1612
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "412": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1614,
        1623
      ],
      "op": "DUP1",
      "path": "7"
    },
    "413": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1627,
        1646
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A5"
    },
    "416": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1642,
        1645
      ],
      "op": "DUP6",
      "path": "7"
    },
    "417": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1627,
        1641
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x215"
    },
    "420": {
      "fn": "ReceiverPays.recoverSigner",
      "jump": "i",
      "offset": [
        1627,
        1646
      ],
      "op": "JUMP",
      "path": "7"
    },
    "421": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1627,
        1646
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "422": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 7,
      "value": "0x40"
    },
    "424": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "DUP1",
      "path": "7"
    },
    "425": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "426": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "428": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "DUP2",
      "path": "7"
    },
    "429": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "430": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "432": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "DUP2",
      "path": "7"
    },
    "433": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "ADD",
      "path": "7"
    },
    "434": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "DUP1",
      "path": "7"
    },
    "435": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "DUP4",
      "path": "7"
    },
    "436": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "437": {
      "op": "DUP12"
    },
    "438": {
      "op": "SWAP1"
    },
    "439": {
      "op": "MSTORE"
    },
    "440": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "442": {
      "op": "DUP6"
    },
    "443": {
      "op": "AND"
    },
    "444": {
      "op": "SWAP2"
    },
    "445": {
      "op": "DUP2"
    },
    "446": {
      "op": "ADD"
    },
    "447": {
      "op": "SWAP2"
    },
    "448": {
      "op": "SWAP1"
    },
    "449": {
      "op": "SWAP2"
    },
    "450": {
      "op": "MSTORE"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "453": {
      "op": "DUP2"
    },
    "454": {
      "op": "ADD"
    },
    "455": {
      "op": "DUP4"
    },
    "456": {
      "op": "SWAP1"
    },
    "457": {
      "op": "MSTORE"
    },
    "458": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "460": {
      "op": "DUP2"
    },
    "461": {
      "op": "ADD"
    },
    "462": {
      "op": "DUP3"
    },
    "463": {
      "op": "SWAP1"
    },
    "464": {
      "op": "MSTORE"
    },
    "465": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1593,
        1646
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "466": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1593,
        1646
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "467": {
      "op": "POP"
    },
    "468": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1593,
        1646
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "469": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1593,
        1646
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "470": {
      "op": "POP"
    },
    "471": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1593,
        1646
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "472": {
      "op": "POP"
    },
    "473": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "475": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "478": {
      "op": "ADD"
    },
    "479": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "481": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "483": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "484": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "486": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "DUP2",
      "path": "7"
    },
    "487": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "SUB",
      "path": "7"
    },
    "488": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "489": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "DUP1",
      "path": "7"
    },
    "490": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "DUP5",
      "path": "7"
    },
    "491": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "SUB",
      "path": "7"
    },
    "492": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "493": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "DUP6",
      "path": "7"
    },
    "494": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "GAS",
      "path": "7"
    },
    "495": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "496": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "497": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "DUP1",
      "path": "7"
    },
    "498": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "499": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x200"
    },
    "502": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "503": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "504": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "506": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "DUP1",
      "path": "7"
    },
    "507": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "508": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "509": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "511": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "REVERT",
      "path": "7"
    },
    "512": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "513": {
      "op": "POP"
    },
    "514": {
      "op": "POP"
    },
    "515": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "517": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "520": {
      "op": "NOT"
    },
    "521": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "ADD",
      "path": "7"
    },
    "522": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "523": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1663,
        1690
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "524": {
      "fn": "ReceiverPays.recoverSigner",
      "offset": [
        1465,
        1697
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "525": {
      "op": "POP"
    },
    "526": {
      "op": "POP"
    },
    "527": {
      "op": "POP"
    },
    "528": {
      "op": "POP"
    },
    "529": {
      "op": "POP"
    },
    "530": {
      "op": "POP"
    },
    "531": {
      "op": "POP"
    },
    "532": {
      "fn": "ReceiverPays.recoverSigner",
      "jump": "o",
      "offset": [
        1465,
        1697
      ],
      "op": "JUMP",
      "path": "7"
    },
    "533": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        923,
        1459
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "534": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1025,
        1032
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "536": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1046,
        1055
      ],
      "op": "DUP1",
      "path": "7"
    },
    "537": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1069,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "539": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1111,
        1114
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 8
    },
    "540": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1111,
        1121
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "541": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1125,
        1127
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x41"
    },
    "543": {
      "branch": 12,
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1111,
        1127
      ],
      "op": "EQ",
      "path": "7"
    },
    "544": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1103,
        1128
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x228"
    },
    "547": {
      "branch": 12,
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1103,
        1128
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "548": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1103,
        1128
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "550": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1103,
        1128
      ],
      "op": "DUP1",
      "path": "7"
    },
    "551": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1103,
        1128
      ],
      "op": "REVERT",
      "path": "7"
    },
    "552": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1103,
        1128
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "553": {
      "op": "POP"
    },
    "554": {
      "op": "POP"
    },
    "555": {
      "op": "POP"
    },
    "556": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1237,
        1239
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "558": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1228,
        1240
      ],
      "op": "DUP2",
      "path": "7"
    },
    "559": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1228,
        1240
      ],
      "op": "ADD",
      "path": "7"
    },
    "560": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1222,
        1241
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "561": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1306,
        1308
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "563": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1297,
        1309
      ],
      "op": "DUP3",
      "path": "7"
    },
    "564": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1297,
        1309
      ],
      "op": "ADD",
      "path": "7"
    },
    "565": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1291,
        1310
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "566": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1412,
        1414
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "568": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1403,
        1415
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "569": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1403,
        1415
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "570": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1403,
        1415
      ],
      "op": "ADD",
      "path": "7"
    },
    "571": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1397,
        1416
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "572": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1394,
        1395
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "574": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1389,
        1417
      ],
      "op": "BYTE",
      "path": "7"
    },
    "575": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1389,
        1417
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "576": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1222,
        1241
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "577": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1222,
        1241
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "578": {
      "fn": "ReceiverPays.splitSignature",
      "offset": [
        1291,
        1310
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "579": {
      "fn": "ReceiverPays.splitSignature",
      "jump": "o",
      "offset": [
        923,
        1459
      ],
      "op": "JUMP",
      "path": "7"
    },
    "580": {
      "op": "JUMPDEST"
    },
    "581": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "586": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "588": {
      "op": "SHL"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "591": {
      "op": "MSTORE"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "596": {
      "op": "MSTORE"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "601": {
      "op": "REVERT"
    },
    "602": {
      "op": "JUMPDEST"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "605": {
      "op": "DUP1"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "610": {
      "op": "DUP5"
    },
    "611": {
      "op": "DUP7"
    },
    "612": {
      "op": "SUB"
    },
    "613": {
      "op": "SLT"
    },
    "614": {
      "op": "ISZERO"
    },
    "615": {
      "op": "PUSH2",
      "value": "0x26F"
    },
    "618": {
      "op": "JUMPI"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "621": {
      "op": "DUP1"
    },
    "622": {
      "op": "REVERT"
    },
    "623": {
      "op": "JUMPDEST"
    },
    "624": {
      "op": "DUP4"
    },
    "625": {
      "op": "CALLDATALOAD"
    },
    "626": {
      "op": "SWAP3"
    },
    "627": {
      "op": "POP"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "630": {
      "op": "DUP5"
    },
    "631": {
      "op": "ADD"
    },
    "632": {
      "op": "CALLDATALOAD"
    },
    "633": {
      "op": "SWAP2"
    },
    "634": {
      "op": "POP"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "637": {
      "op": "DUP5"
    },
    "638": {
      "op": "ADD"
    },
    "639": {
      "op": "CALLDATALOAD"
    },
    "640": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "649": {
      "op": "DUP1"
    },
    "650": {
      "op": "DUP3"
    },
    "651": {
      "op": "GT"
    },
    "652": {
      "op": "ISZERO"
    },
    "653": {
      "op": "PUSH2",
      "value": "0x295"
    },
    "656": {
      "op": "JUMPI"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "659": {
      "op": "DUP1"
    },
    "660": {
      "op": "REVERT"
    },
    "661": {
      "op": "JUMPDEST"
    },
    "662": {
      "op": "DUP2"
    },
    "663": {
      "op": "DUP7"
    },
    "664": {
      "op": "ADD"
    },
    "665": {
      "op": "SWAP2"
    },
    "666": {
      "op": "POP"
    },
    "667": {
      "op": "DUP7"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "670": {
      "op": "DUP4"
    },
    "671": {
      "op": "ADD"
    },
    "672": {
      "op": "SLT"
    },
    "673": {
      "op": "PUSH2",
      "value": "0x2A9"
    },
    "676": {
      "op": "JUMPI"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "679": {
      "op": "DUP1"
    },
    "680": {
      "op": "REVERT"
    },
    "681": {
      "op": "JUMPDEST"
    },
    "682": {
      "op": "DUP2"
    },
    "683": {
      "op": "CALLDATALOAD"
    },
    "684": {
      "op": "DUP2"
    },
    "685": {
      "op": "DUP2"
    },
    "686": {
      "op": "GT"
    },
    "687": {
      "op": "ISZERO"
    },
    "688": {
      "op": "PUSH2",
      "value": "0x2BB"
    },
    "691": {
      "op": "JUMPI"
    },
    "692": {
      "op": "PUSH2",
      "value": "0x2BB"
    },
    "695": {
      "op": "PUSH2",
      "value": "0x244"
    },
    "698": {
      "jump": "i",
      "op": "JUMP"
    },
    "699": {
      "op": "JUMPDEST"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "702": {
      "op": "MLOAD"
    },
    "703": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "705": {
      "op": "DUP3"
    },
    "706": {
      "op": "ADD"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "709": {
      "op": "NOT"
    },
    "710": {
      "op": "SWAP1"
    },
    "711": {
      "op": "DUP2"
    },
    "712": {
      "op": "AND"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "715": {
      "op": "ADD"
    },
    "716": {
      "op": "AND"
    },
    "717": {
      "op": "DUP2"
    },
    "718": {
      "op": "ADD"
    },
    "719": {
      "op": "SWAP1"
    },
    "720": {
      "op": "DUP4"
    },
    "721": {
      "op": "DUP3"
    },
    "722": {
      "op": "GT"
    },
    "723": {
      "op": "DUP2"
    },
    "724": {
      "op": "DUP4"
    },
    "725": {
      "op": "LT"
    },
    "726": {
      "op": "OR"
    },
    "727": {
      "op": "ISZERO"
    },
    "728": {
      "op": "PUSH2",
      "value": "0x2E3"
    },
    "731": {
      "op": "JUMPI"
    },
    "732": {
      "op": "PUSH2",
      "value": "0x2E3"
    },
    "735": {
      "op": "PUSH2",
      "value": "0x244"
    },
    "738": {
      "jump": "i",
      "op": "JUMP"
    },
    "739": {
      "op": "JUMPDEST"
    },
    "740": {
      "op": "DUP2"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "743": {
      "op": "MSTORE"
    },
    "744": {
      "op": "DUP3"
    },
    "745": {
      "op": "DUP2"
    },
    "746": {
      "op": "MSTORE"
    },
    "747": {
      "op": "DUP10"
    },
    "748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "750": {
      "op": "DUP5"
    },
    "751": {
      "op": "DUP8"
    },
    "752": {
      "op": "ADD"
    },
    "753": {
      "op": "ADD"
    },
    "754": {
      "op": "GT"
    },
    "755": {
      "op": "ISZERO"
    },
    "756": {
      "op": "PUSH2",
      "value": "0x2FC"
    },
    "759": {
      "op": "JUMPI"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "762": {
      "op": "DUP1"
    },
    "763": {
      "op": "REVERT"
    },
    "764": {
      "op": "JUMPDEST"
    },
    "765": {
      "op": "DUP3"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "768": {
      "op": "DUP7"
    },
    "769": {
      "op": "ADD"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "772": {
      "op": "DUP4"
    },
    "773": {
      "op": "ADD"
    },
    "774": {
      "op": "CALLDATACOPY"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "779": {
      "op": "DUP5"
    },
    "780": {
      "op": "DUP4"
    },
    "781": {
      "op": "ADD"
    },
    "782": {
      "op": "ADD"
    },
    "783": {
      "op": "MSTORE"
    },
    "784": {
      "op": "DUP1"
    },
    "785": {
      "op": "SWAP6"
    },
    "786": {
      "op": "POP"
    },
    "787": {
      "op": "POP"
    },
    "788": {
      "op": "POP"
    },
    "789": {
      "op": "POP"
    },
    "790": {
      "op": "POP"
    },
    "791": {
      "op": "POP"
    },
    "792": {
      "op": "SWAP3"
    },
    "793": {
      "op": "POP"
    },
    "794": {
      "op": "SWAP3"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "op": "SWAP3"
    },
    "797": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d4902f97ecd06eff50fc585906823293feef1f52",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.14;\nimport \"./console.sol\";\n\ncontract ReceiverPays {\n    address owner = msg.sender;\n    mapping(uint256 => bool) usedNonces;\n\n    constructor() payable {}\n\n    function claimPayment(\n        uint256 amount,\n        uint256 nonce,\n        bytes memory signature\n    ) external {\n        require(!usedNonces[nonce]);\n        usedNonces[nonce] = true;\n        // this recreates the message that was signed on the client\n        bytes32 message = prefixed(\n            keccak256(abi.encodePacked(msg.sender, amount, nonce, this))\n        );\n        require(recoverSigner(message, signature) == owner);\n        payable(msg.sender).transfer(amount);\n    }\n\n    /// destroy the contract and reclaim the leftover funds.\n    function shutdown() external {\n        require(msg.sender == owner);\n        selfdestruct(payable(msg.sender));\n    }\n\n    /// signature methods.\n    function splitSignature(bytes memory sig)\n        internal\n        pure\n        returns (\n            uint8 v,\n            bytes32 r,\n            bytes32 s\n        )\n    {\n        require(sig.length == 65);\n        assembly {\n            // first 32 bytes, after the length prefix.\n            r := mload(add(sig, 32))\n            // second 32 bytes.\n            s := mload(add(sig, 64))\n            // final byte (first byte of the next 32 bytes).\n            v := byte(0, mload(add(sig, 96)))\n        }\n        return (v, r, s);\n    }\n\n    function recoverSigner(bytes32 message, bytes memory sig)\n        internal\n        pure\n        returns (address)\n    {\n        (uint8 v, bytes32 r, bytes32 s) = splitSignature(sig);\n        return ecrecover(message, v, r, s);\n    }\n\n    /// builds a prefixed hash to mimic the behavior of eth_sign.\n    function prefixed(bytes32 hash) internal pure returns (bytes32) {\n        return\n            keccak256(\n                abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash)\n            );\n    }\n}\n",
  "sourceMap": "85:1885:7:-:0;;;113:26;;;-1:-1:-1;;;;;;113:26:7;129:10;113:26;;;85:1885;;;;;;",
  "sourcePath": "contracts/ReceiverPays.sol",
  "type": "contract"
}