{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable[2]",
          "name": "_users",
          "type": "address[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "_balances",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256",
          "name": "_expiresAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_challengePeriod",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "ChallengeExit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "_balances",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes[2]",
          "name": "_signatures",
          "type": "bytes[2]"
        }
      ],
      "name": "challengeExit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "challengePeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expiresAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isUser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[2]",
          "name": "_signatures",
          "type": "bytes[2]"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "address[2]",
          "name": "_signers",
          "type": "address[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "_balances",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "1": "/home/marius/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Strings.sol",
    "10": "contracts/console.sol",
    "2": "/home/marius/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/cryptography/ECDSA.sol",
    "3": "/home/marius/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/math/SafeMath.sol",
    "4": "contracts/BidirectionalPayment.sol"
  },
  "ast": {
    "absolutePath": "contracts/BidirectionalPayment.sol",
    "exportedSymbols": {
      "BiDirectionalPaymentChannel": [
        580
      ],
      "ECDSA": [
        10687
      ],
      "SafeMath": [
        10999
      ],
      "Strings": [
        11242
      ],
      "console": [
        10280
      ]
    },
    "id": 581,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "absolutePath": "/home/marius/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 581,
        "sourceUnit": 11000,
        "src": "1102:57:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/marius/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 581,
        "sourceUnit": 10688,
        "src": "1160:62:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/console.sol",
        "file": "./console.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 581,
        "sourceUnit": 10281,
        "src": "1223:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BiDirectionalPaymentChannel",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 580,
        "linearizedBaseContracts": [
          580
        ],
        "name": "BiDirectionalPaymentChannel",
        "nameLocation": "1257:27:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 7,
            "libraryName": {
              "id": 5,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10999,
              "src": "1297:8:4"
            },
            "nodeType": "UsingForDirective",
            "src": "1291:27:4",
            "typeName": {
              "id": 6,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1310:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "global": false,
            "id": 10,
            "libraryName": {
              "id": 8,
              "name": "ECDSA",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10687,
              "src": "1329:5:4"
            },
            "nodeType": "UsingForDirective",
            "src": "1323:24:4",
            "typeName": {
              "id": 9,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1339:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "anonymous": false,
            "eventSelector": "5050c6e2a6fc173775ce4852f893c9e5aaeff00101f3aef75e0ec263cf083ca9",
            "id": 16,
            "name": "ChallengeExit",
            "nameLocation": "1359:13:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1389:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "1373:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "1405:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "1397:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1372:39:4"
            },
            "src": "1353:59:4"
          },
          {
            "anonymous": false,
            "eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
            "id": 22,
            "name": "Withdraw",
            "nameLocation": "1423:8:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1448:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "1432:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1432:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1460:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "1452:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1452:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1431:36:4"
            },
            "src": "1417:51:4"
          },
          {
            "constant": false,
            "functionSelector": "365b98b2",
            "id": 26,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "1500:5:4",
            "nodeType": "VariableDeclaration",
            "scope": 580,
            "src": "1474:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$2_storage",
              "typeString": "address payable[2]"
            },
            "typeName": {
              "baseType": {
                "id": 23,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1474:15:4",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 25,
              "length": {
                "hexValue": "32",
                "id": 24,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1490:1:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "nodeType": "ArrayTypeName",
              "src": "1474:18:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$2_storage_ptr",
                "typeString": "address payable[2]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4209fff1",
            "id": 30,
            "mutability": "mutable",
            "name": "isUser",
            "nameLocation": "1543:6:4",
            "nodeType": "VariableDeclaration",
            "scope": 580,
            "src": "1511:38:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 29,
              "keyType": {
                "id": 27,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1519:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1511:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 28,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1530:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27e235e3",
            "id": 34,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "1591:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 580,
            "src": "1556:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 33,
              "keyType": {
                "id": 31,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1564:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1556:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 32,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1575:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f3f480d9",
            "id": 36,
            "mutability": "mutable",
            "name": "challengePeriod",
            "nameLocation": "1621:15:4",
            "nodeType": "VariableDeclaration",
            "scope": 580,
            "src": "1606:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1606:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8622a689",
            "id": 38,
            "mutability": "mutable",
            "name": "expiresAt",
            "nameLocation": "1657:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 580,
            "src": "1642:24:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1642:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "affed0e0",
            "id": 40,
            "mutability": "mutable",
            "name": "nonce",
            "nameLocation": "1687:5:4",
            "nodeType": "VariableDeclaration",
            "scope": 580,
            "src": "1672:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1672:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "1751:533:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4269446972656374696f6e616c5061796d656e744368616e6e656c2e636865636b42616c616e63657328292063616c6c6564",
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1773:52:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_519a6f53ca79de61d9c38a7ccd69c0fe3023259fd58c20cd1980cde45ebb70eb",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.checkBalances() called\""
                        },
                        "value": "BiDirectionalPaymentChannel.checkBalances() called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_519a6f53ca79de61d9c38a7ccd69c0fe3023259fd58c20cd1980cde45ebb70eb",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.checkBalances() called\""
                        }
                      ],
                      "expression": {
                        "id": 46,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10280,
                        "src": "1761:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2811,
                      "src": "1761:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "1761:65:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "636f6e74726163742062616c616e63652069732025642c2062616c616e6365735b305d2069732025642c62616c616e6365735b315d206973202564",
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1861:61:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f975419f66ccae92da7029cb19f206a92dbd5cb1b7476984d891787d92129b9",
                          "typeString": "literal_string \"contract balance is %d, balances[0] is %d,balances[1] is %d\""
                        },
                        "value": "contract balance is %d, balances[0] is %d,balances[1] is %d"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 58,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1944:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BiDirectionalPaymentChannel_$580",
                                "typeString": "contract BiDirectionalPaymentChannel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BiDirectionalPaymentChannel_$580",
                                "typeString": "contract BiDirectionalPaymentChannel"
                              }
                            ],
                            "id": 57,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1936:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 56,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1936:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1936:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1936:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 61,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "1971:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 63,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1981:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1971:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 64,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "1997:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 66,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2007:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1997:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1f975419f66ccae92da7029cb19f206a92dbd5cb1b7476984d891787d92129b9",
                          "typeString": "literal_string \"contract balance is %d, balances[0] is %d,balances[1] is %d\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10280,
                        "src": "1836:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5886,
                      "src": "1836:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256,uint256) view"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1836:183:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1836:183:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 72,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2058:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BiDirectionalPaymentChannel_$580",
                                  "typeString": "contract BiDirectionalPaymentChannel"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BiDirectionalPaymentChannel_$580",
                                  "typeString": "contract BiDirectionalPaymentChannel"
                                }
                              ],
                              "id": 71,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2050:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 70,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2050:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2050:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "2050:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 79,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "2092:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 81,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 80,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2102:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2092:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 75,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "2075:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 77,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 76,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2085:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2075:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 78,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10863,
                            "src": "2075:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2075:30:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2050:55:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62616c616e6365206f6620636f6e7472616374206d757374206265203e3d20746f2074686520746f74616c2062616c616e6365206f66207573657273",
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2119:62:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8daf703cfb646ee756751ea1fb0763434b2c939d897297f8c23cb46a1ff20087",
                          "typeString": "literal_string \"balance of contract must be >= to the total balance of users\""
                        },
                        "value": "balance of contract must be >= to the total balance of users"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8daf703cfb646ee756751ea1fb0763434b2c939d897297f8c23cb46a1ff20087",
                          "typeString": "literal_string \"balance of contract must be >= to the total balance of users\""
                        }
                      ],
                      "id": 69,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2029:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2029:162:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "2029:162:4"
                },
                {
                  "id": 87,
                  "nodeType": "PlaceholderStatement",
                  "src": "2201:1:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4269446972656374696f6e616c5061796d656e744368616e6e656c2e636865636b42616c616e636573282920706173736564",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2224:52:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23eea652524585e4af27ecbca038ec3766d7f93d7d672cb3f9e34a1a1f88f967",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.checkBalances() passed\""
                        },
                        "value": "BiDirectionalPaymentChannel.checkBalances() passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_23eea652524585e4af27ecbca038ec3766d7f93d7d672cb3f9e34a1a1f88f967",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.checkBalances() passed\""
                        }
                      ],
                      "expression": {
                        "id": 88,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10280,
                        "src": "2212:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2811,
                      "src": "2212:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2212:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "2212:65:4"
                }
              ]
            },
            "id": 95,
            "name": "checkBalances",
            "nameLocation": "1708:13:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1740:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1722:27:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1722:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 43,
                    "length": {
                      "hexValue": "32",
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1730:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1722:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1721:29:4"
            },
            "src": "1699:585:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "2525:573:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4269446972656374696f6e616c5061796d656e744368616e6e656c2e636f6e7374727563746f722829",
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2547:43:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_152e24b046cdf60e5025727a6af99929427793c5135badf2c35dc30ec2c98076",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.constructor()\""
                        },
                        "value": "BiDirectionalPaymentChannel.constructor()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_152e24b046cdf60e5025727a6af99929427793c5135badf2c35dc30ec2c98076",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.constructor()\""
                        }
                      ],
                      "expression": {
                        "id": 113,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10280,
                        "src": "2535:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2811,
                      "src": "2535:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2535:56:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "2535:56:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 120,
                          "name": "_expiresAt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "2609:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 121,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2622:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2622:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2609:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45787069726174696f6e206d757374206265203e206e6f77",
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2639:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9749f8aafc243b33b74ad8bd7dcce336a683c17153d5b3f5bb6f0284db75567f",
                          "typeString": "literal_string \"Expiration must be > now\""
                        },
                        "value": "Expiration must be > now"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9749f8aafc243b33b74ad8bd7dcce336a683c17153d5b3f5bb6f0284db75567f",
                          "typeString": "literal_string \"Expiration must be > now\""
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2601:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2601:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2601:65:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 128,
                          "name": "_challengePeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "2684:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2703:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2684:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e676520706572696f64206d757374206265203e2030",
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2706:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a362ee288a780a758a98f0f20997d063a519c912b864f4d36d0fe1db82663d0b",
                          "typeString": "literal_string \"Challenge period must be > 0\""
                        },
                        "value": "Challenge period must be > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a362ee288a780a758a98f0f20997d063a519c912b864f4d36d0fe1db82663d0b",
                          "typeString": "literal_string \"Challenge period must be > 0\""
                        }
                      ],
                      "id": 127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2676:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2676:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "2676:61:4"
                },
                {
                  "body": {
                    "id": 179,
                    "nodeType": "Block",
                    "src": "2792:223:4",
                    "statements": [
                      {
                        "assignments": [
                          146
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 146,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "2822:4:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 179,
                            "src": "2806:20:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 145,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2806:15:4",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 150,
                        "initialValue": {
                          "baseExpression": {
                            "id": 147,
                            "name": "_users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "2829:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$2_memory_ptr",
                              "typeString": "address payable[2] memory"
                            }
                          },
                          "id": 149,
                          "indexExpression": {
                            "id": 148,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "2836:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2829:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2806:32:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2861:13:4",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 152,
                                  "name": "isUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "2862:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 154,
                                "indexExpression": {
                                  "id": 153,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 146,
                                  "src": "2869:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2862:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "75736572206d75737420626520756e69717565",
                              "id": 156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2876:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3b7cbd0a7c2b956541b9d6ea11007180ef1d061c88233ffc5910dcd74a7ca581",
                                "typeString": "literal_string \"user must be unique\""
                              },
                              "value": "user must be unique"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3b7cbd0a7c2b956541b9d6ea11007180ef1d061c88233ffc5910dcd74a7ca581",
                                "typeString": "literal_string \"user must be unique\""
                              }
                            ],
                            "id": 151,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2853:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2853:45:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 158,
                        "nodeType": "ExpressionStatement",
                        "src": "2853:45:4"
                      },
                      {
                        "expression": {
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 159,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "2912:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$2_storage",
                                "typeString": "address payable[2] storage ref"
                              }
                            },
                            "id": 161,
                            "indexExpression": {
                              "id": 160,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 135,
                              "src": "2918:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2912:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 162,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2923:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "2912:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "2912:15:4"
                      },
                      {
                        "expression": {
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 165,
                              "name": "isUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "2941:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 167,
                            "indexExpression": {
                              "id": 166,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "2948:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2941:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2956:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2941:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 170,
                        "nodeType": "ExpressionStatement",
                        "src": "2941:19:4"
                      },
                      {
                        "expression": {
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 171,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "2975:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 173,
                            "indexExpression": {
                              "id": 172,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "2984:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2975:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 174,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "2992:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            },
                            "id": 176,
                            "indexExpression": {
                              "id": 175,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 135,
                              "src": "3002:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2992:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2975:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 178,
                        "nodeType": "ExpressionStatement",
                        "src": "2975:29:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 138,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "2768:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 139,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "2772:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$2_memory_ptr",
                          "typeString": "address payable[2] memory"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2772:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2768:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 180,
                  "initializationExpression": {
                    "assignments": [
                      135
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 135,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2761:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2753:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 134,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2753:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 137,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2765:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2753:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2787:3:4",
                      "subExpression": {
                        "id": 142,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "2787:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 144,
                    "nodeType": "ExpressionStatement",
                    "src": "2787:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "2748:267:4"
                },
                {
                  "expression": {
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 181,
                      "name": "expiresAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "3025:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 182,
                      "name": "_expiresAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "3037:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3025:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "3025:22:4"
                },
                {
                  "expression": {
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 185,
                      "name": "challengePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "3057:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 186,
                      "name": "_challengePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "3075:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3057:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "3057:34:4"
                }
              ]
            },
            "id": 190,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 110,
                    "name": "_balances",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 103,
                    "src": "2514:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  }
                ],
                "id": 111,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 109,
                  "name": "checkBalances",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 95,
                  "src": "2500:13:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "2500:24:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "_users",
                  "nameLocation": "2380:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "2354:32:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$2_memory_ptr",
                    "typeString": "address payable[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 96,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2354:15:4",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 98,
                    "length": {
                      "hexValue": "32",
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2370:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2354:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$2_storage_ptr",
                      "typeString": "address payable[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "2414:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "2396:27:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 100,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2396:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 102,
                    "length": {
                      "hexValue": "32",
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2404:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2396:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "_expiresAt",
                  "nameLocation": "2441:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "2433:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2433:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "_challengePeriod",
                  "nameLocation": "2469:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "2461:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2461:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2344:147:4"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2525:0:4"
            },
            "scope": 580,
            "src": "2333:765:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "3314:991:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4269446972656374696f6e616c5061796d656e744368616e6e656c2e76657269667928292063616c6c6564",
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3336:45:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_728efd724a8ea7e5491622b8b47db7292f79c784a35f14f0fa21965b9bb285bf",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.verify() called\""
                        },
                        "value": "BiDirectionalPaymentChannel.verify() called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_728efd724a8ea7e5491622b8b47db7292f79c784a35f14f0fa21965b9bb285bf",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.verify() called\""
                        }
                      ],
                      "expression": {
                        "id": 211,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10280,
                        "src": "3324:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2811,
                      "src": "3324:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3324:58:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "3324:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f6e6365206973202564",
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3404:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39114f87d2594cef440b5bf1325dcd65462fbdc374594650ef37ea8c823948ea",
                          "typeString": "literal_string \"nonce is %d\""
                        },
                        "value": "nonce is %d"
                      },
                      {
                        "id": 221,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "3419:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_39114f87d2594cef440b5bf1325dcd65462fbdc374594650ef37ea8c823948ea",
                          "typeString": "literal_string \"nonce is %d\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 217,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10280,
                        "src": "3392:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2924,
                      "src": "3392:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3392:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "3392:34:4"
                },
                {
                  "body": {
                    "id": 312,
                    "nodeType": "Block",
                    "src": "3485:793:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "5f7369676e6572735b25645d206973202573",
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3663:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_03e9bd34e9d5ffa062c7421d13bd21648819374a88cf1c01c291eb8d8940a00b",
                                "typeString": "literal_string \"_signers[%d] is %s\""
                              },
                              "value": "_signers[%d] is %s"
                            },
                            {
                              "id": 239,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "3685:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 240,
                                "name": "_signers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 200,
                                "src": "3688:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                  "typeString": "address[2] memory"
                                }
                              },
                              "id": 242,
                              "indexExpression": {
                                "id": 241,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 225,
                                "src": "3697:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3688:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_03e9bd34e9d5ffa062c7421d13bd21648819374a88cf1c01c291eb8d8940a00b",
                                "typeString": "literal_string \"_signers[%d] is %s\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 235,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10280,
                              "src": "3651:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3511,
                            "src": "3651:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (string memory,uint256,address) view"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3651:49:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 244,
                        "nodeType": "ExpressionStatement",
                        "src": "3651:49:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "5f62616c616e6365735b25645d206973202573",
                              "id": 248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3726:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_affb699667f492317fe3ec1e4972530f116234aba4da70a6545e707cf6d6e898",
                                "typeString": "literal_string \"_balances[%d] is %s\""
                              },
                              "value": "_balances[%d] is %s"
                            },
                            {
                              "id": 249,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "3749:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 250,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 204,
                                "src": "3752:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 252,
                              "indexExpression": {
                                "id": 251,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 225,
                                "src": "3762:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3752:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_affb699667f492317fe3ec1e4972530f116234aba4da70a6545e707cf6d6e898",
                                "typeString": "literal_string \"_balances[%d] is %s\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 245,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10280,
                              "src": "3714:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3451,
                            "src": "3714:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256,uint256) view"
                            }
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3714:51:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 254,
                        "nodeType": "ExpressionStatement",
                        "src": "3714:51:4"
                      },
                      {
                        "assignments": [
                          256
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 256,
                            "mutability": "mutable",
                            "name": "decoded",
                            "nameLocation": "3787:7:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 312,
                            "src": "3779:15:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 255,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3779:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 274,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 270,
                                "name": "_signatures",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 194,
                                "src": "3921:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_memory_ptr_$2_memory_ptr",
                                  "typeString": "bytes memory[2] memory"
                                }
                              },
                              "id": 272,
                              "indexExpression": {
                                "id": 271,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 225,
                                "src": "3933:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3921:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 260,
                                          "name": "_contract",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 196,
                                          "src": "3841:9:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "id": 261,
                                            "name": "_balances",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 204,
                                            "src": "3852:9:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                              "typeString": "uint256[2] memory"
                                            }
                                          },
                                          "id": 263,
                                          "indexExpression": {
                                            "id": 262,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 225,
                                            "src": "3862:1:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "3852:12:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 264,
                                          "name": "_nonce",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 206,
                                          "src": "3866:6:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 258,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "3824:3:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 259,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "3824:16:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 265,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3824:49:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 257,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "3797:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 266,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3797:90:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "id": 267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toEthSignedMessageHash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10644,
                                "src": "3797:113:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                                  "typeString": "function (bytes32) pure returns (bytes32)"
                                }
                              },
                              "id": 268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3797:115:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "recover",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10436,
                            "src": "3797:123:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3797:139:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3779:157:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "6465636f646564206973202573",
                              "id": 278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3962:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0762860ad31cbac3024181afda0c981f46ce55b2a6f9b2c311cc4637e2fc4d17",
                                "typeString": "literal_string \"decoded is %s\""
                              },
                              "value": "decoded is %s"
                            },
                            {
                              "id": 279,
                              "name": "decoded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 256,
                              "src": "3979:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_0762860ad31cbac3024181afda0c981f46ce55b2a6f9b2c311cc4637e2fc4d17",
                                "typeString": "literal_string \"decoded is %s\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 275,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10280,
                              "src": "3950:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2975,
                            "src": "3950:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (string memory,address) view"
                            }
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3950:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 281,
                        "nodeType": "ExpressionStatement",
                        "src": "3950:37:4"
                      },
                      {
                        "assignments": [
                          283
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 283,
                            "mutability": "mutable",
                            "name": "valid",
                            "nameLocation": "4006:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 312,
                            "src": "4001:10:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 282,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4001:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 305,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 284,
                              "name": "_signers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "4014:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                "typeString": "address[2] memory"
                              }
                            },
                            "id": 286,
                            "indexExpression": {
                              "id": 285,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "4023:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4014:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 300,
                                  "name": "_signatures",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 194,
                                  "src": "4181:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$2_memory_ptr",
                                    "typeString": "bytes memory[2] memory"
                                  }
                                },
                                "id": 302,
                                "indexExpression": {
                                  "id": 301,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 225,
                                  "src": "4193:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4181:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 290,
                                            "name": "_contract",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 196,
                                            "src": "4072:9:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "baseExpression": {
                                              "id": 291,
                                              "name": "_balances",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 204,
                                              "src": "4083:9:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                                "typeString": "uint256[2] memory"
                                              }
                                            },
                                            "id": 293,
                                            "indexExpression": {
                                              "id": 292,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 225,
                                              "src": "4093:1:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "4083:12:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 294,
                                            "name": "_nonce",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 206,
                                            "src": "4097:6:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 288,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "4055:3:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 289,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "encodePacked",
                                          "nodeType": "MemberAccess",
                                          "src": "4055:16:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 295,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4055:49:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 287,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "4045:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 296,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4045:60:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "id": 297,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "toEthSignedMessageHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10644,
                                  "src": "4045:104:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                                    "typeString": "function (bytes32) pure returns (bytes32)"
                                  }
                                },
                                "id": 298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4045:106:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "recover",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10436,
                              "src": "4045:135:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                                "typeString": "function (bytes32,bytes memory) pure returns (address)"
                              }
                            },
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4045:151:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4014:182:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4001:195:4"
                      },
                      {
                        "condition": {
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4215:6:4",
                          "subExpression": {
                            "id": 306,
                            "name": "valid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "4216:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 311,
                        "nodeType": "IfStatement",
                        "src": "4211:57:4",
                        "trueBody": {
                          "id": 310,
                          "nodeType": "Block",
                          "src": "4223:45:4",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4248:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 210,
                              "id": 309,
                              "nodeType": "Return",
                              "src": "4241:12:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 228,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "3456:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 229,
                        "name": "_signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "3460:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$2_memory_ptr",
                          "typeString": "bytes memory[2] memory"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3460:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3456:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 313,
                  "initializationExpression": {
                    "assignments": [
                      225
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3449:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 313,
                        "src": "3441:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3441:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 227,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3453:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3441:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3480:3:4",
                      "subExpression": {
                        "id": 232,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "3480:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 234,
                    "nodeType": "ExpressionStatement",
                    "src": "3480:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "3436:842:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4294:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 210,
                  "id": 315,
                  "nodeType": "Return",
                  "src": "4287:11:4"
                }
              ]
            },
            "functionSelector": "21e66868",
            "id": 317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "3113:6:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "_signatures",
                  "nameLocation": "3145:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "3129:27:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$2_memory_ptr",
                    "typeString": "bytes[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 191,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "3129:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 193,
                    "length": {
                      "hexValue": "32",
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3135:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3129:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$2_storage_ptr",
                      "typeString": "bytes[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "3174:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "3166:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3166:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "_signers",
                  "nameLocation": "3211:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "3193:26:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                    "typeString": "address[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 197,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3193:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 199,
                    "length": {
                      "hexValue": "32",
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3201:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3193:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                      "typeString": "address[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "3247:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "3229:27:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 201,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3229:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 203,
                    "length": {
                      "hexValue": "32",
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3237:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3229:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "_nonce",
                  "nameLocation": "3274:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "3266:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3266:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3119:167:4"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "3308:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3308:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3307:6:4"
            },
            "scope": 580,
            "src": "3104:1201:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "4440:488:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4269446972656374696f6e616c5061796d656e744368616e6e656c2e636865636b5369676e61747572657328292063616c6c6564",
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4462:54:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e443b8658cb02f1bca6206caa82673b0e659eb98c2437ba68f1473c45af143ba",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.checkSignatures() called\""
                        },
                        "value": "BiDirectionalPaymentChannel.checkSignatures() called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e443b8658cb02f1bca6206caa82673b0e659eb98c2437ba68f1473c45af143ba",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.checkSignatures() called\""
                        }
                      ],
                      "expression": {
                        "id": 329,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10280,
                        "src": "4450:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2811,
                      "src": "4450:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4450:67:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "4450:67:4"
                },
                {
                  "assignments": [
                    340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 340,
                      "mutability": "mutable",
                      "name": "signers",
                      "nameLocation": "4591:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 384,
                      "src": "4573:25:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                        "typeString": "address[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 338,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4573:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 339,
                        "length": {
                          "hexValue": "32",
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4581:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "4573:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                          "typeString": "address[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 341,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4573:25:4"
                },
                {
                  "body": {
                    "id": 361,
                    "nodeType": "Block",
                    "src": "4651:46:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 353,
                              "name": "signers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 340,
                              "src": "4665:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                                "typeString": "address[2] memory"
                              }
                            },
                            "id": 355,
                            "indexExpression": {
                              "id": 354,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 343,
                              "src": "4673:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4665:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 356,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "4678:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$2_storage",
                                "typeString": "address payable[2] storage ref"
                              }
                            },
                            "id": 358,
                            "indexExpression": {
                              "id": 357,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 343,
                              "src": "4684:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4678:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "4665:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 360,
                        "nodeType": "ExpressionStatement",
                        "src": "4665:21:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 346,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "4628:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 347,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "4632:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$2_storage",
                          "typeString": "address payable[2] storage ref"
                        }
                      },
                      "id": 348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4632:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4628:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 362,
                  "initializationExpression": {
                    "assignments": [
                      343
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4621:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "4613:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4613:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 345,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4625:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4613:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4646:3:4",
                      "subExpression": {
                        "id": 350,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "4646:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 352,
                    "nodeType": "ExpressionStatement",
                    "src": "4646:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "4608:89:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 365,
                            "name": "_signatures",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "4735:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_ptr_$2_memory_ptr",
                              "typeString": "bytes memory[2] memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 368,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4756:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BiDirectionalPaymentChannel_$580",
                                  "typeString": "contract BiDirectionalPaymentChannel"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BiDirectionalPaymentChannel_$580",
                                  "typeString": "contract BiDirectionalPaymentChannel"
                                }
                              ],
                              "id": 367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4748:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 366,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4748:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4748:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 370,
                            "name": "signers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 340,
                            "src": "4763:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                              "typeString": "address[2] memory"
                            }
                          },
                          {
                            "id": 371,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "4772:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "id": 372,
                            "name": "_nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "4783:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes_memory_ptr_$2_memory_ptr",
                              "typeString": "bytes memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                              "typeString": "address[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 364,
                          "name": "verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 317,
                          "src": "4728:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_array$_t_bytes_memory_ptr_$2_memory_ptr_$_t_address_$_t_array$_t_address_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (bytes memory[2] memory,address,address[2] memory,uint256[2] memory,uint256) view returns (bool)"
                          }
                        },
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4728:62:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207369676e6174757265",
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4804:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
                          "typeString": "literal_string \"Invalid signature\""
                        },
                        "value": "Invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
                          "typeString": "literal_string \"Invalid signature\""
                        }
                      ],
                      "id": 363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4707:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4707:126:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "4707:126:4"
                },
                {
                  "id": 377,
                  "nodeType": "PlaceholderStatement",
                  "src": "4843:1:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4269446972656374696f6e616c5061796d656e744368616e6e656c2e636865636b5369676e617475726573282920706173736564",
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4866:54:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b19bf3e197f8ca67f1a4cf82901fee5b7e32e9ad1cd133cf6553bbd7ef8062a5",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.checkSignatures() passed\""
                        },
                        "value": "BiDirectionalPaymentChannel.checkSignatures() passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b19bf3e197f8ca67f1a4cf82901fee5b7e32e9ad1cd133cf6553bbd7ef8062a5",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.checkSignatures() passed\""
                        }
                      ],
                      "expression": {
                        "id": 378,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10280,
                        "src": "4854:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2811,
                      "src": "4854:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4854:67:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "4854:67:4"
                }
              ]
            },
            "id": 385,
            "name": "checkSignatures",
            "nameLocation": "4320:15:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "_signatures",
                  "nameLocation": "4361:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "4345:27:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$2_memory_ptr",
                    "typeString": "bytes[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 318,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4345:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 320,
                    "length": {
                      "hexValue": "32",
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4351:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4345:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$2_storage_ptr",
                      "typeString": "bytes[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "4400:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "4382:27:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 322,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4382:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 324,
                    "length": {
                      "hexValue": "32",
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4390:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4382:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "_nonce",
                  "nameLocation": "4427:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "4419:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4419:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4335:104:4"
            },
            "src": "4311:617:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "4954:207:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4269446972656374696f6e616c5061796d656e744368616e6e656c2e6f6e6c795573657228292063616c6c6564",
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4976:47:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_663b6cc0d144d943d3a410e05faa8f9499fc4887b7da02ca5e9570f5bdedb4ec",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.onlyUser() called\""
                        },
                        "value": "BiDirectionalPaymentChannel.onlyUser() called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_663b6cc0d144d943d3a410e05faa8f9499fc4887b7da02ca5e9570f5bdedb4ec",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.onlyUser() called\""
                        }
                      ],
                      "expression": {
                        "id": 387,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10280,
                        "src": "4964:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2811,
                      "src": "4964:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4964:60:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "4964:60:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 394,
                          "name": "isUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "5042:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 397,
                        "indexExpression": {
                          "expression": {
                            "id": 395,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5049:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5049:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5042:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742075736572",
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5062:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77f79b6f6695b7cb69a54c778ddb667a77aaff19429471dfd3f96947c51e6f39",
                          "typeString": "literal_string \"Not user\""
                        },
                        "value": "Not user"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77f79b6f6695b7cb69a54c778ddb667a77aaff19429471dfd3f96947c51e6f39",
                          "typeString": "literal_string \"Not user\""
                        }
                      ],
                      "id": 393,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5034:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5034:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 400,
                  "nodeType": "ExpressionStatement",
                  "src": "5034:39:4"
                },
                {
                  "id": 401,
                  "nodeType": "PlaceholderStatement",
                  "src": "5083:1:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4269446972656374696f6e616c5061796d656e744368616e6e656c2e6f6e6c7955736572282920706173736564",
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5106:47:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af8de269be751653ff7517bcf2f1a5398d25bbb7efb23efd701d5fa24e9e58b9",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.onlyUser() passed\""
                        },
                        "value": "BiDirectionalPaymentChannel.onlyUser() passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_af8de269be751653ff7517bcf2f1a5398d25bbb7efb23efd701d5fa24e9e58b9",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.onlyUser() passed\""
                        }
                      ],
                      "expression": {
                        "id": 402,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10280,
                        "src": "5094:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2811,
                      "src": "5094:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5094:60:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "5094:60:4"
                }
              ]
            },
            "id": 409,
            "name": "onlyUser",
            "nameLocation": "4943:8:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4951:2:4"
            },
            "src": "4934:227:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 494,
              "nodeType": "Block",
              "src": "5419:475:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4269446972656374696f6e616c5061796d656e744368616e6e656c2e6368616c6c656e6765457869742829",
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5441:45:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a28f71ddd819e4505b7c7e3e188bef077afcf0ff92643f6e8ba0e9c4b821586d",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.challengeExit()\""
                        },
                        "value": "BiDirectionalPaymentChannel.challengeExit()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a28f71ddd819e4505b7c7e3e188bef077afcf0ff92643f6e8ba0e9c4b821586d",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.challengeExit()\""
                        }
                      ],
                      "expression": {
                        "id": 432,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10280,
                        "src": "5429:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2811,
                      "src": "5429:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5429:58:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "5429:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 439,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5505:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5505:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 441,
                          "name": "expiresAt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "5523:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5505:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45787069726564206368616c6c656e676520706572696f64",
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5534:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bdd83c4961837c0b4648377f9787d5c330cf74ebee1e802711db0ec43f04b8ba",
                          "typeString": "literal_string \"Expired challenge period\""
                        },
                        "value": "Expired challenge period"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bdd83c4961837c0b4648377f9787d5c330cf74ebee1e802711db0ec43f04b8ba",
                          "typeString": "literal_string \"Expired challenge period\""
                        }
                      ],
                      "id": 438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5497:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5497:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "5497:64:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 447,
                          "name": "_nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 415,
                          "src": "5579:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 448,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "5588:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5579:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6e6365206d7573742062652067726561746572207468616e207468652063757272656e74206e6f6e6365",
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5595:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a3803ab88334139d1bd7725c61c9f2aeebbfb13cd7dedaf4a16051ef26eeffb",
                          "typeString": "literal_string \"Nonce must be greater than the current nonce\""
                        },
                        "value": "Nonce must be greater than the current nonce"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a3803ab88334139d1bd7725c61c9f2aeebbfb13cd7dedaf4a16051ef26eeffb",
                          "typeString": "literal_string \"Nonce must be greater than the current nonce\""
                        }
                      ],
                      "id": 446,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5571:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5571:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "5571:71:4"
                },
                {
                  "body": {
                    "id": 474,
                    "nodeType": "Block",
                    "src": "5700:58:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 464,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "5714:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 468,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 465,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "5723:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_payable_$2_storage",
                                  "typeString": "address payable[2] storage ref"
                                }
                              },
                              "id": 467,
                              "indexExpression": {
                                "id": 466,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 454,
                                "src": "5729:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5723:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5714:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 469,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 413,
                              "src": "5735:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                "typeString": "uint256[2] memory"
                              }
                            },
                            "id": 471,
                            "indexExpression": {
                              "id": 470,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 454,
                              "src": "5745:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5735:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5714:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 473,
                        "nodeType": "ExpressionStatement",
                        "src": "5714:33:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 457,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 454,
                      "src": "5673:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 458,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "5677:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      "id": 459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5677:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5673:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 475,
                  "initializationExpression": {
                    "assignments": [
                      454
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 454,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5666:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "5658:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 453,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5658:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 456,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5670:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5658:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5695:3:4",
                      "subExpression": {
                        "id": 461,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 454,
                        "src": "5695:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 463,
                    "nodeType": "ExpressionStatement",
                    "src": "5695:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "5653:105:4"
                },
                {
                  "expression": {
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 476,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "5767:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 477,
                      "name": "_nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 415,
                      "src": "5775:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5767:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "5767:14:4"
                },
                {
                  "expression": {
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 480,
                      "name": "expiresAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "5791:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 484,
                          "name": "challengePeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "5823:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 481,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5803:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5803:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10863,
                        "src": "5803:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5803:36:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5791:48:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 487,
                  "nodeType": "ExpressionStatement",
                  "src": "5791:48:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 489,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5869:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5869:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 491,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "5881:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 488,
                      "name": "ChallengeExit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "5855:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5855:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 493,
                  "nodeType": "EmitStatement",
                  "src": "5850:37:4"
                }
              ]
            },
            "functionSelector": "a0ff4999",
            "id": 495,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 422,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 421,
                  "name": "onlyUser",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 409,
                  "src": "5317:8:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5317:8:4"
              },
              {
                "arguments": [
                  {
                    "id": 424,
                    "name": "_signatures",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 419,
                    "src": "5350:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$2_memory_ptr",
                      "typeString": "bytes memory[2] memory"
                    }
                  },
                  {
                    "id": 425,
                    "name": "_balances",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 413,
                    "src": "5363:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  {
                    "id": 426,
                    "name": "_nonce",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 415,
                    "src": "5374:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 427,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 423,
                  "name": "checkSignatures",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 385,
                  "src": "5334:15:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5334:47:4"
              },
              {
                "arguments": [
                  {
                    "id": 429,
                    "name": "_balances",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 413,
                    "src": "5404:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  }
                ],
                "id": 430,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 428,
                  "name": "checkBalances",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 95,
                  "src": "5390:13:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5390:24:4"
              }
            ],
            "name": "challengeExit",
            "nameLocation": "5176:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "5217:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "5199:27:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 410,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5199:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 412,
                    "length": {
                      "hexValue": "32",
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5207:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "5199:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 415,
                  "mutability": "mutable",
                  "name": "_nonce",
                  "nameLocation": "5244:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "5236:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5236:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "_signatures",
                  "nameLocation": "5276:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "5260:27:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$2_memory_ptr",
                    "typeString": "bytes[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 416,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "5260:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 418,
                    "length": {
                      "hexValue": "32",
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5266:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "5260:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$2_storage_ptr",
                      "typeString": "bytes[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5189:104:4"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5419:0:4"
            },
            "scope": 580,
            "src": "5167:727:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 550,
              "nodeType": "Block",
              "src": "5936:738:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4269446972656374696f6e616c5061796d656e744368616e6e656c2e776974686472617728292063616c6c6564",
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6229:47:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a3608d0c759c8c4e29ce14cb69b2ea0bd01e42a9c01b7daa131f4739e71269f4",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.withdraw() called\""
                        },
                        "value": "BiDirectionalPaymentChannel.withdraw() called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a3608d0c759c8c4e29ce14cb69b2ea0bd01e42a9c01b7daa131f4739e71269f4",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.withdraw() called\""
                        }
                      ],
                      "expression": {
                        "id": 500,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10280,
                        "src": "6217:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2811,
                      "src": "6217:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6217:60:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "6217:60:4"
                },
                {
                  "assignments": [
                    507
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 507,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "6295:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 550,
                      "src": "6287:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 506,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6287:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 512,
                  "initialValue": {
                    "baseExpression": {
                      "id": 508,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "6304:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 511,
                    "indexExpression": {
                      "expression": {
                        "id": 509,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6313:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6313:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6304:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6287:37:4"
                },
                {
                  "expression": {
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 513,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "6334:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 516,
                      "indexExpression": {
                        "expression": {
                          "id": 514,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6343:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6343:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6334:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6357:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6334:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "6334:24:4"
                },
                {
                  "assignments": [
                    521,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 521,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "6375:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 550,
                      "src": "6370:9:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 520,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6370:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 529,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6416:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 522,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6385:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6385:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "6385:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 525,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 507,
                          "src": "6408:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6385:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6385:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6369:50:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 531,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "6437:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6443:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 530,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6429:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6429:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 534,
                  "nodeType": "ExpressionStatement",
                  "src": "6429:37:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4269446972656374696f6e616c5061796d656e744368616e6e656c2e776974686472617728292c206d73672e73656e6465722069732025732c20616d6f756e743d2564",
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6501:69:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa7f3ddfafba06baa3120d9fe50d37a1f263f56294c51873446d48ab380f1ea8",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.withdraw(), msg.sender is %s, amount=%d\""
                        },
                        "value": "BiDirectionalPaymentChannel.withdraw(), msg.sender is %s, amount=%d"
                      },
                      {
                        "expression": {
                          "id": 539,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6584:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6584:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 541,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 507,
                        "src": "6608:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_aa7f3ddfafba06baa3120d9fe50d37a1f263f56294c51873446d48ab380f1ea8",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.withdraw(), msg.sender is %s, amount=%d\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 535,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10280,
                        "src": "6476:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3691,
                      "src": "6476:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,address,uint256) view"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6476:148:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "6476:148:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 545,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6648:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6648:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 547,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 507,
                        "src": "6660:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 544,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "6639:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6639:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 549,
                  "nodeType": "EmitStatement",
                  "src": "6634:33:4"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 551,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 498,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 497,
                  "name": "onlyUser",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 409,
                  "src": "5927:8:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5927:8:4"
              }
            ],
            "name": "withdraw",
            "nameLocation": "5909:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5917:2:4"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5936:0:4"
            },
            "scope": 580,
            "src": "5900:774:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 564,
              "nodeType": "Block",
              "src": "6707:160:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4269446972656374696f6e616c5061796d656e744368616e6e656c2e7265636569766528292c20526563656976696e672025642066726f6d202573",
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6742:61:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b1527d820b290364b397a7b0bf4c64d4654c7da734e80eabb63d6b11ac39748",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.receive(), Receiving %d from %s\""
                        },
                        "value": "BiDirectionalPaymentChannel.receive(), Receiving %d from %s"
                      },
                      {
                        "expression": {
                          "id": 558,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6817:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "6817:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 560,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6840:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6840:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7b1527d820b290364b397a7b0bf4c64d4654c7da734e80eabb63d6b11ac39748",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.receive(), Receiving %d from %s\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 554,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10280,
                        "src": "6717:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3511,
                      "src": "6717:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (string memory,uint256,address) view"
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6717:143:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "6717:143:4"
                }
              ]
            },
            "id": 565,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6687:2:4"
            },
            "returnParameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6707:0:4"
            },
            "scope": 580,
            "src": "6680:187:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 578,
              "nodeType": "Block",
              "src": "6901:161:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4269446972656374696f6e616c5061796d656e744368616e6e656c2e66616c6c6261636b28292c20526563656976696e672025642066726f6d202573",
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6936:62:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2cd2e40a5f28ff926b60f5fe811314ec05956b4296b935c39a872e7ee30ee9e1",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.fallback(), Receiving %d from %s\""
                        },
                        "value": "BiDirectionalPaymentChannel.fallback(), Receiving %d from %s"
                      },
                      {
                        "expression": {
                          "id": 572,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7012:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "7012:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 574,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7035:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7035:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2cd2e40a5f28ff926b60f5fe811314ec05956b4296b935c39a872e7ee30ee9e1",
                          "typeString": "literal_string \"BiDirectionalPaymentChannel.fallback(), Receiving %d from %s\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 568,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10280,
                        "src": "6911:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$10280_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3511,
                      "src": "6911:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (string memory,uint256,address) view"
                      }
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6911:144:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 577,
                  "nodeType": "ExpressionStatement",
                  "src": "6911:144:4"
                }
              ]
            },
            "id": 579,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6881:2:4"
            },
            "returnParameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6901:0:4"
            },
            "scope": 580,
            "src": "6873:189:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 581,
        "src": "1248:5816:4",
        "usedErrors": []
      }
    ],
    "src": "32:7033:4"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "BiDirectionalPaymentChannel",
  "coverageMap": {
    "branches": {
      "1": {},
      "10": {},
      "2": {
        "ECDSA._throwError": {
          "55": [
            616,
            645,
            false
          ],
          "56": [
            712,
            750,
            false
          ],
          "57": [
            821,
            865,
            false
          ],
          "58": [
            943,
            982,
            false
          ],
          "59": [
            1063,
            1102,
            false
          ]
        },
        "ECDSA.tryRecover": {
          "53": [
            2554,
            2576,
            false
          ],
          "54": [
            3036,
            3058,
            false
          ],
          "60": [
            6753,
            6832,
            false
          ],
          "61": [
            6923,
            6930,
            false
          ],
          "62": [
            6934,
            6941,
            false
          ],
          "63": [
            7168,
            7188,
            false
          ]
        }
      },
      "3": {},
      "4": {
        "BiDirectionalPaymentChannel.challengeExit": {
          "48": [
            5042,
            5060,
            true
          ],
          "49": [
            4728,
            4790,
            true
          ],
          "50": [
            2050,
            2105,
            true
          ],
          "51": [
            5505,
            5532,
            true
          ],
          "52": [
            5579,
            5593,
            true
          ]
        },
        "BiDirectionalPaymentChannel.verify": {
          "46": [
            4216,
            4221,
            false
          ]
        },
        "BiDirectionalPaymentChannel.withdraw": {
          "47": [
            6437,
            6441,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {},
      "10": {
        "console.log": {
          "2": [
            10380,
            10460
          ],
          "25": [
            5102,
            5161
          ],
          "26": [
            28250,
            28336
          ],
          "28": [
            5945,
            6013
          ],
          "29": [
            9913,
            9990
          ],
          "32": [
            6358,
            6429
          ],
          "33": [
            11823,
            11903
          ]
        }
      },
      "2": {
        "ECDSA._throwError": {
          "37": [
            766,
            800
          ],
          "38": [
            881,
            922
          ],
          "39": [
            998,
            1042
          ],
          "40": [
            1118,
            1162
          ]
        },
        "ECDSA.recover": {
          "30": [
            4484,
            4502
          ],
          "31": [
            4512,
            4528
          ]
        },
        "ECDSA.toEthSignedMessageHash": {
          "7": [
            8194,
            8270
          ]
        },
        "ECDSA.tryRecover": {
          "34": [
            2983,
            3015
          ],
          "35": [
            3388,
            3418
          ],
          "36": [
            3449,
            3505
          ],
          "41": [
            6848,
            6899
          ],
          "42": [
            6957,
            7008
          ],
          "43": [
            7204,
            7254
          ],
          "44": [
            7275,
            7312
          ],
          "45": [
            5086,
            5118
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "27": [
            2832,
            2844
          ]
        }
      },
      "4": {
        "BiDirectionalPaymentChannel.<fallback>": {
          "1": [
            6911,
            7055
          ]
        },
        "BiDirectionalPaymentChannel.<receive>": {
          "0": [
            6717,
            6860
          ]
        },
        "BiDirectionalPaymentChannel.challengeExit": {
          "17": [
            5429,
            5487
          ],
          "18": [
            5497,
            5561
          ],
          "19": [
            5571,
            5642
          ],
          "20": [
            5714,
            5747
          ],
          "21": [
            5695,
            5698
          ],
          "22": [
            5767,
            5781
          ],
          "23": [
            5791,
            5839
          ],
          "24": [
            5850,
            5887
          ]
        },
        "BiDirectionalPaymentChannel.verify": {
          "3": [
            3324,
            3382
          ],
          "4": [
            3392,
            3426
          ],
          "5": [
            3651,
            3700
          ],
          "6": [
            3714,
            3765
          ],
          "8": [
            3950,
            3987
          ],
          "9": [
            4241,
            4253
          ],
          "10": [
            3480,
            3483
          ],
          "11": [
            4287,
            4298
          ]
        },
        "BiDirectionalPaymentChannel.withdraw": {
          "12": [
            6217,
            6277
          ],
          "13": [
            6334,
            6358
          ],
          "14": [
            6429,
            6466
          ],
          "15": [
            6476,
            6624
          ],
          "16": [
            6634,
            6667
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.6.0/ECDSA",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/SafeMath",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Strings",
    "console"
  ],
  "deployedBytecode": "60806040526004361061008a5760003560e01c80634209fff1116100595780634209fff1146101945780638622a689146101c4578063a0ff4999146101da578063affed0e0146101fa578063f3f480d914610210576100b4565b806321e66868146100d757806327e235e31461010c578063365b98b2146101475780633ccfd60b1461017f576100b4565b366100b4576100b26040518060600160405280603b8152602001611681603b91393433610226565b005b6100b26040518060600160405280603c81526020016115bb603c91393433610226565b3480156100e357600080fd5b506100f76100f2366004611231565b610272565b60405190151581526020015b60405180910390f35b34801561011857600080fd5b506101396101273660046112ed565b60036020526000908152604090205481565b604051908152602001610103565b34801561015357600080fd5b50610167610162366004611308565b61053b565b6040516001600160a01b039091168152602001610103565b34801561018b57600080fd5b506100b261055b565b3480156101a057600080fd5b506100f76101af3660046112ed565b60026020526000908152604090205460ff1681565b3480156101d057600080fd5b5061013960055481565b3480156101e657600080fd5b506100b26101f5366004611321565b61070b565b34801561020657600080fd5b5061013960065481565b34801561021c57600080fd5b5061013960045481565b61026d83838360405160240161023e939291906113c6565b60408051601f198184030181529190526020810180516001600160e01b031663e3849f7960e01b179052610bbd565b505050565b60006102956040518060600160405280602b8152602001611656602b9139610b15565b6102c26040518060400160405280600b81526020016a1b9bdb98d9481a5cc8095960aa1b81525083610bde565b60005b600281101561052c57610319604051806040016040528060128152602001715f7369676e6572735b25645d20697320257360701b8152508287846002811061030f5761030f6113f9565b6020020151610226565b610365604051806040016040528060138152602001725f62616c616e6365735b25645d20697320257360681b8152508286846002811061035b5761035b6113f9565b6020020151610c27565b600061043a88836002811061037c5761037c6113f9565b602002015161043489888660028110610397576103976113f9565b6020020151886040516020016103d49392919060609390931b6bffffffffffffffffffffffff191683526014830191909152603482015260540190565b60408051601f1981840301815282825280516020918201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000084830152603c8085019190915282518085039091018152605c909301909152815191012090565b90610c6e565b905061046b6040518060400160405280600d81526020016c6465636f64656420697320257360981b81525082610c92565b60006104da898460028110610482576104826113f9565b60200201516104348a89876002811061049d5761049d6113f9565b6020020151896040516020016103d49392919060609390931b6bffffffffffffffffffffffff191683526014830191909152603482015260540190565b6001600160a01b03168784600281106104f5576104f56113f9565b60200201516001600160a01b0316149050806105175760009350505050610532565b5050808061052490611425565b9150506102c5565b50600190505b95945050505050565b6000816002811061054b57600080fd5b01546001600160a01b0316905081565b61057c6040518060600160405280602d8152602001611629602d9139610b15565b3360009081526002602052604090205460ff166105cb5760405162461bcd60e51b81526020600482015260086024820152672737ba103ab9b2b960c11b60448201526064015b60405180910390fd5b6105ec6040518060600160405280602d81526020016116e7602d9139610b15565b33600081815260036020526040808220805490839055905190929083908381818185875af1925050503d8060008114610641576040519150601f19603f3d011682016040523d82523d6000602084013e610646565b606091505b505090508061068e5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016105c2565b6106b1604051806080016040528060438152602001611714604391393384610cd7565b60405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250506107096040518060600160405280602d8152602001611757602d9139610b15565b565b61072c6040518060600160405280602d8152602001611629602d9139610b15565b3360009081526002602052604090205460ff166107765760405162461bcd60e51b81526020600482015260086024820152672737ba103ab9b2b960c11b60448201526064016105c2565b80838361079a6040518060600160405280603481526020016117b860349139610b15565b6107a2611068565b60005b600281101561080357600081600281106107c1576107c16113f9565b01546001600160a01b03168282600281106107de576107de6113f9565b6001600160a01b039092166020929092020152806107fb81611425565b9150506107a5565b506108118430838686610272565b6108515760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b60448201526064016105c2565b866108736040518060600160405280603281526020016115f760329139610b15565b61089e6040518060600160405280603b815260200161154e603b913982516020840151479190610b5b565b602081015181516108ae91610baa565b4710156109235760405162461bcd60e51b815260206004820152603c60248201527f62616c616e6365206f6620636f6e7472616374206d757374206265203e3d207460448201527f6f2074686520746f74616c2062616c616e6365206f662075736572730000000060648201526084016105c2565b6109446040518060600160405280602b81526020016116bc602b9139610b15565b60055442106109955760405162461bcd60e51b815260206004820152601860248201527f45787069726564206368616c6c656e676520706572696f64000000000000000060448201526064016105c2565b60065487116109fb5760405162461bcd60e51b815260206004820152602c60248201527f4e6f6e6365206d7573742062652067726561746572207468616e20746865206360448201526b757272656e74206e6f6e636560a01b60648201526084016105c2565b60005b6002811015610a6257888160028110610a1957610a196113f9565b602002015160036000808460028110610a3457610a346113f9565b01546001600160a01b0316815260208101919091526040016000205580610a5a81611425565b9150506109fe565b506006879055600454610a76904290610baa565b60055560065460405190815233907f5050c6e2a6fc173775ce4852f893c9e5aaeff00101f3aef75e0ec263cf083ca99060200160405180910390a2610ad260405180606001604052806032815260200161158960329139610b15565b50610af460405180606001604052806034815260200161178460349139610b15565b5050505061026d6040518060600160405280602d8152602001611757602d91395b610b5881604051602401610b29919061143e565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610bbd565b50565b610ba484848484604051602401610b759493929190611451565b60408051601f198184030181529190526020810180516001600160e01b03166304772b3360e11b179052610bbd565b50505050565b6000610bb68284611480565b9392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610c238282604051602401610bf4929190611498565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610bbd565b5050565b61026d838383604051602401610c3f939291906114ba565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b179052610bbd565b6000806000610c7d8585610d1e565b91509150610c8a81610d8c565b509392505050565b610c238282604051602401610ca89291906114df565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610bbd565b61026d838383604051602401610cef93929190611509565b60408051601f198184030181529190526020810180516001600160e01b03166307c8121760e01b179052610bbd565b6000808251604103610d545760208301516040840151606085015160001a610d4887828585610f42565b94509450505050610d85565b8251604003610d7d5760208301516040840151610d7286838361102f565b935093505050610d85565b506000905060025b9250929050565b6000816004811115610da057610da0611537565b03610da85750565b6001816004811115610dbc57610dbc611537565b03610e095760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105c2565b6002816004811115610e1d57610e1d611537565b03610e6a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105c2565b6003816004811115610e7e57610e7e611537565b03610ed65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105c2565b6004816004811115610eea57610eea611537565b03610b585760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105c2565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610f795750600090506003611026565b8460ff16601b14158015610f9157508460ff16601c14155b15610fa25750600090506004611026565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610ff6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661101f57600060019250925050611026565b9150600090505b94509492505050565b6000806001600160ff1b0383168161104c60ff86901c601b611480565b905061105a87828885610f42565b935093505050935093915050565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156110bf576110bf611086565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156110ee576110ee611086565b604052919050565b6000601f838184011261110857600080fd5b61111061109c565b80604085018681111561112257600080fd5b855b818110156111b957803567ffffffffffffffff808211156111455760008081fd5b818901915089878301126111595760008081fd5b813560208282111561116d5761116d611086565b61117e828a01601f191682016110c5565b92508183528b818386010111156111955760008081fd5b81818501828501376000918301810191909152908652949094019350602001611124565b50909695505050505050565b80356001600160a01b03811681146111dc57600080fd5b919050565b600082601f8301126111f257600080fd5b6111fa61109c565b80604084018581111561120c57600080fd5b845b8181101561122657803584526020938401930161120e565b509095945050505050565b600080600080600060e0868803121561124957600080fd5b853567ffffffffffffffff81111561126057600080fd5b61126c888289016110f6565b955050602061127c8188016111c5565b945087605f88011261128d57600080fd5b61129561109c565b80608089018a8111156112a757600080fd5b60408a015b818110156112ca576112bd816111c5565b84529284019284016112ac565b508196506112d88b826111e1565b989b979a50959860c001359695505050505050565b6000602082840312156112ff57600080fd5b610bb6826111c5565b60006020828403121561131a57600080fd5b5035919050565b60008060006080848603121561133657600080fd5b61134085856111e1565b925060408401359150606084013567ffffffffffffffff81111561136357600080fd5b61136f868287016110f6565b9150509250925092565b6000815180845260005b8181101561139f57602081850181015186830182015201611383565b818111156113b1576000602083870101525b50601f01601f19169290920160200192915050565b6060815260006113d96060830186611379565b6020830194909452506001600160a01b0391909116604090910152919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016114375761143761140f565b5060010190565b602081526000610bb66020830184611379565b6080815260006114646080830187611379565b6020830195909552506040810192909252606090910152919050565b600082198211156114935761149361140f565b500190565b6040815260006114ab6040830185611379565b90508260208301529392505050565b6060815260006114cd6060830186611379565b60208301949094525060400152919050565b6040815260006114f26040830185611379565b905060018060a01b03831660208301529392505050565b60608152600061151c6060830186611379565b6001600160a01b039490941660208301525060400152919050565b634e487b7160e01b600052602160045260246000fdfe636f6e74726163742062616c616e63652069732025642c2062616c616e6365735b305d2069732025642c62616c616e6365735b315d2069732025644269446972656374696f6e616c5061796d656e744368616e6e656c2e636865636b42616c616e6365732829207061737365644269446972656374696f6e616c5061796d656e744368616e6e656c2e66616c6c6261636b28292c20526563656976696e672025642066726f6d2025734269446972656374696f6e616c5061796d656e744368616e6e656c2e636865636b42616c616e63657328292063616c6c65644269446972656374696f6e616c5061796d656e744368616e6e656c2e6f6e6c795573657228292063616c6c65644269446972656374696f6e616c5061796d656e744368616e6e656c2e76657269667928292063616c6c65644269446972656374696f6e616c5061796d656e744368616e6e656c2e7265636569766528292c20526563656976696e672025642066726f6d2025734269446972656374696f6e616c5061796d656e744368616e6e656c2e6368616c6c656e67654578697428294269446972656374696f6e616c5061796d656e744368616e6e656c2e776974686472617728292063616c6c65644269446972656374696f6e616c5061796d656e744368616e6e656c2e776974686472617728292c206d73672e73656e6465722069732025732c20616d6f756e743d25644269446972656374696f6e616c5061796d656e744368616e6e656c2e6f6e6c79557365722829207061737365644269446972656374696f6e616c5061796d656e744368616e6e656c2e636865636b5369676e6174757265732829207061737365644269446972656374696f6e616c5061796d656e744368616e6e656c2e636865636b5369676e61747572657328292063616c6c6564a2646970667358221220661d6f2d91cd38a2352e4ab10cecfa1ca623461022952e79075fcb9b7e70164864736f6c634300080e0033",
  "deployedSourceMap": "1248:5816:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6717:143;;;;;;;;;;;;;;;;;;6817:9;6840:10;6717:11;:143::i;:::-;1248:5816;;6911:144;;;;;;;;;;;;;;;;;;7012:9;7035:10;6911:11;:144::i;3104:1201::-;;;;;;;;;;-1:-1:-1;3104:1201:4;;;;;:::i;:::-;;:::i;:::-;;;3972:14:11;;3965:22;3947:41;;3935:2;3920:18;3104:1201:4;;;;;;;;1556:43;;;;;;;;;;-1:-1:-1;1556:43:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4336:25:11;;;4324:2;4309:18;1556:43:4;4190:177:11;1474:31:4;;;;;;;;;;-1:-1:-1;1474:31:4;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4737:32:11;;;4719:51;;4707:2;4692:18;1474:31:4;4557:219:11;5900:774:4;;;;;;;;;;;;;:::i;1511:38::-;;;;;;;;;;-1:-1:-1;1511:38:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;1642:24;;;;;;;;;;;;;;;;5167:727;;;;;;;;;;-1:-1:-1;5167:727:4;;;;;:::i;:::-;;:::i;1672:20::-;;;;;;;;;;;;;;;;1606:30;;;;;;;;;;;;;;;;10310:154:10;10380:80;10448:2;10452;10456;10396:63;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10396:63:10;;;;;;;;;;;;;;-1:-1:-1;;;;;10396:63:10;-1:-1:-1;;;10396:63:10;;;10380:15;:80::i;:::-;10310:154;;;:::o;3104:1201:4:-;3308:4;3324:58;;;;;;;;;;;;;;;;;;:11;:58::i;:::-;3392:34;;;;;;;;;;;;;;-1:-1:-1;;;3392:34:4;;;3419:6;3392:11;:34::i;:::-;3441:9;3436:842;3460:18;3456:1;:22;3436:842;;;3651:49;;;;;;;;;;;;;;-1:-1:-1;;;3651:49:4;;;3685:1;3688:8;3697:1;3688:11;;;;;;;:::i;:::-;;;;;3651;:49::i;:::-;3714:51;;;;;;;;;;;;;;-1:-1:-1;;;3714:51:4;;;3749:1;3752:9;3762:1;3752:12;;;;;;;:::i;:::-;;;;;3714:11;:51::i;:::-;3779:15;3797:139;3921:11;3933:1;3921:14;;;;;;;:::i;:::-;;;;;3797:115;3841:9;3852;3862:1;3852:12;;;;;;;:::i;:::-;;;;;3866:6;3824:49;;;;;;;;;6523:2:11;6519:15;;;;-1:-1:-1;;6515:53:11;6503:66;;6594:2;6585:12;;6578:28;;;;6631:2;6622:12;;6615:28;6668:2;6659:12;;6318:359;3824:49:4;;;;-1:-1:-1;;3824:49:4;;;;;;;;;3797:90;;3824:49;3797:90;;;;11093:66:11;8211:58:2;;;11081:79:11;11176:12;;;;11169:28;;;;8211:58:2;;;;;;;;;;11213:12:11;;;;8211:58:2;;;8201:69;;;;;;8012:265;3797:115:4;:123;;:139::i;:::-;3779:157;;3950:37;;;;;;;;;;;;;;-1:-1:-1;;;3950:37:4;;;3979:7;3950:11;:37::i;:::-;4001:10;4045:151;4181:11;4193:1;4181:14;;;;;;;:::i;:::-;;;;;4045:106;4072:9;4083;4093:1;4083:12;;;;;;;:::i;:::-;;;;;4097:6;4055:49;;;;;;;;;6523:2:11;6519:15;;;;-1:-1:-1;;6515:53:11;6503:66;;6594:2;6585:12;;6578:28;;;;6631:2;6622:12;;6615:28;6668:2;6659:12;;6318:359;4045:151:4;-1:-1:-1;;;;;4014:182:4;:8;4023:1;4014:11;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;4014:182:4;;4001:195;;4216:5;4211:57;;4248:5;4241:12;;;;;;;4211:57;3485:793;;3480:3;;;;;:::i;:::-;;;;3436:842;;;;4294:4;4287:11;;3104:1201;;;;;;;;:::o;1474:31::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1474:31:4;;-1:-1:-1;1474:31:4;:::o;5900:774::-;4964:60;;;;;;;;;;;;;;;;;;:11;:60::i;:::-;5049:10;5042:18;;;;:6;:18;;;;;;;;5034:39;;;;-1:-1:-1;;;5034:39:4;;7156:2:11;5034:39:4;;;7138:21:11;7195:1;7175:18;;;7168:29;-1:-1:-1;;;7213:18:11;;;7206:38;7261:18;;5034:39:4;;;;;;;;;6217:60:::1;;;;;;;;;;;;;;;;;;:11;:60::i;:::-;6313:10;6287:14;6304:20:::0;;;:8:::1;:20;::::0;;;;;;;6334:24;;;;6385:34;;6304:20;;6313:10;6304:20;;6287:14;6385:34;6287:14;6385:34;6304:20;6313:10;6385:34:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6369:50;;;6437:4;6429:37;;;::::0;-1:-1:-1;;;6429:37:4;;7702:2:11;6429:37:4::1;::::0;::::1;7684:21:11::0;7741:2;7721:18;;;7714:30;-1:-1:-1;;;7760:18:11;;;7753:50;7820:18;;6429:37:4::1;7500:344:11::0;6429:37:4::1;6476:148;;;;;;;;;;;;;;;;;;6584:10;6608:6;6476:11;:148::i;:::-;6639:28;::::0;4336:25:11;;;6648:10:4::1;::::0;6639:28:::1;::::0;4324:2:11;4309:18;6639:28:4::1;;;;;;;5936:738;;5094:60:::0;;;;;;;;;;;;;;;;;;:11;:60::i;:::-;5900:774::o;5167:727::-;4964:60;;;;;;;;;;;;;;;;;;:11;:60::i;:::-;5049:10;5042:18;;;;:6;:18;;;;;;;;5034:39;;;;-1:-1:-1;;;5034:39:4;;7156:2:11;5034:39:4;;;7138:21:11;7195:1;7175:18;;;7168:29;-1:-1:-1;;;7213:18:11;;;7206:38;7261:18;;5034:39:4;6954:331:11;5034:39:4;5350:11:::1;5363:9;5374:6;4450:67;;;;;;;;;;;;;;;;;;:11;:67::i;:::-;4573:25;;:::i;:::-;4613:9;4608:89;4632:12;4628:1;:16;4608:89;;;4678:5;4684:1;4678:8;;;;;;;:::i;:::-;;::::0;-1:-1:-1;;;;;4678:8:4::1;4665:7:::0;4673:1;4665:10:::1;::::0;::::1;;;;;:::i;:::-;-1:-1:-1::0;;;;;4665:21:4;;::::1;:10;::::0;;;::::1;;:21:::0;4646:3;::::1;::::0;::::1;:::i;:::-;;;;4608:89;;;;4728:62;4735:11;4756:4;4763:7;4772:9;4783:6;4728;:62::i;:::-;4707:126;;;::::0;-1:-1:-1;;;4707:126:4;;8051:2:11;4707:126:4::1;::::0;::::1;8033:21:11::0;8090:2;8070:18;;;8063:30;-1:-1:-1;;;8109:18:11;;;8102:47;8166:18;;4707:126:4::1;7849:341:11::0;4707:126:4::1;5404:9:::2;1761:65;;;;;;;;;;;;;;;;;;:11;:65::i;:::-;1836:183;;;;;;;;;;;;;;;;;;1971:12:::0;;::::2;1997::::0;::::2;::::0;1936:21:::2;::::0;1971:12;1836:11:::2;:183::i;:::-;2092:12;::::0;::::2;::::0;2075;;:30:::2;::::0;:16:::2;:30::i;:::-;2050:21;:55;;2029:162;;;::::0;-1:-1:-1;;;2029:162:4;;8397:2:11;2029:162:4::2;::::0;::::2;8379:21:11::0;8436:2;8416:18;;;8409:30;8475:34;8455:18;;;8448:62;8546:30;8526:18;;;8519:58;8594:19;;2029:162:4::2;8195:424:11::0;2029:162:4::2;5429:58:::3;;;;;;;;;;;;;;;;;;:11;:58::i;:::-;5523:9;;5505:15;:27;5497:64;;;::::0;-1:-1:-1;;;5497:64:4;;8826:2:11;5497:64:4::3;::::0;::::3;8808:21:11::0;8865:2;8845:18;;;8838:30;8904:26;8884:18;;;8877:54;8948:18;;5497:64:4::3;8624:348:11::0;5497:64:4::3;5588:5;;5579:6;:14;5571:71;;;::::0;-1:-1:-1;;;5571:71:4;;9179:2:11;5571:71:4::3;::::0;::::3;9161:21:11::0;9218:2;9198:18;;;9191:30;9257:34;9237:18;;;9230:62;-1:-1:-1;;;9308:18:11;;;9301:42;9360:19;;5571:71:4::3;8977:408:11::0;5571:71:4::3;5658:9;5653:105;5677:16;5673:1;:20;5653:105;;;5735:9;5745:1;5735:12;;;;;;;:::i;:::-;;;;;5714:8;:18;5723:5:::0;5729:1:::3;5723:8;;;;;;;:::i;:::-;;::::0;-1:-1:-1;;;;;5723:8:4::3;5714:18:::0;;::::3;::::0;::::3;::::0;;;;;;5723:8:::3;5714:18:::0;:33;5695:3;::::3;::::0;::::3;:::i;:::-;;;;5653:105;;;-1:-1:-1::0;5767:5:4::3;:14:::0;;;5823:15:::3;::::0;5803:36:::3;::::0;:15:::3;::::0;:19:::3;:36::i;:::-;5791:9;:48:::0;5881:5:::3;::::0;5855:32:::3;::::0;4336:25:11;;;5869:10:4::3;::::0;5855:32:::3;::::0;4324:2:11;4309:18;5855:32:4::3;;;;;;;2212:65:::2;;;;;;;;;;;;;;;;;;:11;:65::i;:::-;4843:1;4854:67:::1;;;;;;;;;;;;;;;;;;:11;:67::i;:::-;4440:488;5083:1;;;5094:60:::0;;;;;;;;;;;;;;;;;;5053:112:10;5102:59;5157:2;5118:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5118:42:10;;;;;;;;;;;;;;-1:-1:-1;;;;;5118:42:10;-1:-1:-1;;;5118:42:10;;;5102:15;:59::i;:::-;5053:112;:::o;28174:166::-;28250:86;28320:2;28324;28328;28332;28266:69;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;28266:69:10;;;;;;;;;;;;;;-1:-1:-1;;;;;28266:69:10;-1:-1:-1;;;28266:69:10;;;28250:15;:86::i;:::-;28174:166;;;;:::o;2755:96:3:-;2813:7;2839:5;2843:1;2839;:5;:::i;:::-;2832:12;2755:96;-1:-1:-1;;;2755:96:3:o;175:288:10:-;263:14;;128:42;372:2;359:16;;239:21;;263:14;359:16;128:42;399:5;388:68;379:77;;334:126;;175:288;:::o;5887:130::-;5945:68;6005:2;6009;5961:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5961:51:10;;;;;;;;;;;;;;-1:-1:-1;;;;;5961:51:10;-1:-1:-1;;;5961:51:10;;;5945:15;:68::i;:::-;5887:130;;:::o;9846:148::-;9913:77;9978:2;9982;9986;9929:60;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9929:60:10;;;;;;;;;;;;;;-1:-1:-1;;;;;9929:60:10;-1:-1:-1;;;9929:60:10;;;9913:15;:77::i;4308:227:2:-;4386:7;4406:17;4425:18;4447:27;4458:4;4464:9;4447:10;:27::i;:::-;4405:69;;;;4484:18;4496:5;4484:11;:18::i;:::-;-1:-1:-1;4519:9:2;4308:227;-1:-1:-1;;;4308:227:2:o;6297:136:10:-;6358:71;6421:2;6425;6374:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6374:54:10;;;;;;;;;;;;;;-1:-1:-1;;;;;6374:54:10;-1:-1:-1;;;6374:54:10;;;6358:15;:71::i;11753:154::-;11823:80;11891:2;11895;11899;11839:63;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11839:63:10;;;;;;;;;;;;;;-1:-1:-1;;;;;11839:63:10;-1:-1:-1;;;11839:63:10;;;11823:15;:80::i;2243:1279:2:-;2324:7;2333:12;2554:9;:16;2574:2;2554:22;2550:966;;2843:4;2828:20;;2822:27;2892:4;2877:20;;2871:27;2949:4;2934:20;;2928:27;2592:9;2920:36;2990:25;3001:4;2920:36;2822:27;2871;2990:10;:25::i;:::-;2983:32;;;;;;;;;2550:966;3036:9;:16;3056:2;3036:22;3032:484;;3305:4;3290:20;;3284:27;3355:4;3340:20;;3334:27;3395:23;3406:4;3284:27;3334;3395:10;:23::i;:::-;3388:30;;;;;;;;3032:484;-1:-1:-1;3465:1:2;;-1:-1:-1;3469:35:2;3032:484;2243:1279;;;;;:::o;548:631::-;625:20;616:5;:29;;;;;;;;:::i;:::-;;612:561;;548:631;:::o;612:561::-;721:29;712:5;:38;;;;;;;;:::i;:::-;;708:465;;766:34;;-1:-1:-1;;;766:34:2;;12285:2:11;766:34:2;;;12267:21:11;12324:2;12304:18;;;12297:30;12363:26;12343:18;;;12336:54;12407:18;;766:34:2;12083:348:11;708:465:2;830:35;821:5;:44;;;;;;;;:::i;:::-;;817:356;;881:41;;-1:-1:-1;;;881:41:2;;12638:2:11;881:41:2;;;12620:21:11;12677:2;12657:18;;;12650:30;12716:33;12696:18;;;12689:61;12767:18;;881:41:2;12436:355:11;817:356:2;952:30;943:5;:39;;;;;;;;:::i;:::-;;939:234;;998:44;;-1:-1:-1;;;998:44:2;;12998:2:11;998:44:2;;;12980:21:11;13037:2;13017:18;;;13010:30;13076:34;13056:18;;;13049:62;-1:-1:-1;;;13127:18:11;;;13120:32;13169:19;;998:44:2;12796:398:11;939:234:2;1072:30;1063:5;:39;;;;;;;;:::i;:::-;;1059:114;;1118:44;;-1:-1:-1;;;1118:44:2;;13401:2:11;1118:44:2;;;13383:21:11;13440:2;13420:18;;;13413:30;13479:34;13459:18;;;13452:62;-1:-1:-1;;;13530:18:11;;;13523:32;13572:19;;1118:44:2;13199:398:11;5716:1603:2;5842:7;;6766:66;6753:79;;6749:161;;;-1:-1:-1;6864:1:2;;-1:-1:-1;6868:30:2;6848:51;;6749:161;6923:1;:7;;6928:2;6923:7;;:18;;;;;6934:1;:7;;6939:2;6934:7;;6923:18;6919:100;;;-1:-1:-1;6973:1:2;;-1:-1:-1;6977:30:2;6957:51;;6919:100;7130:24;;;7113:14;7130:24;;;;;;;;;13829:25:11;;;13902:4;13890:17;;13870:18;;;13863:45;;;;13924:18;;;13917:34;;;13967:18;;;13960:34;;;7130:24:2;;13801:19:11;;7130:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7130:24:2;;-1:-1:-1;;7130:24:2;;;-1:-1:-1;;;;;;;7168:20:2;;7164:101;;7220:1;7224:29;7204:50;;;;;;;7164:101;7283:6;-1:-1:-1;7291:20:2;;-1:-1:-1;5716:1603:2;;;;;;;;:::o;4789:336::-;4899:7;;-1:-1:-1;;;;;4944:80:2;;4899:7;5050:25;5066:3;5051:18;;;5073:2;5050:25;:::i;:::-;5034:42;;5093:25;5104:4;5110:1;5113;5116;5093:10;:25::i;:::-;5086:32;;;;;;4789:336;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:11:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:251;218:2;212:9;;;248:15;;293:18;278:34;;314:22;;;275:62;272:88;;;340:18;;:::i;:::-;376:2;369:22;146:251;:::o;402:275::-;473:2;467:9;538:2;519:13;;-1:-1:-1;;515:27:11;503:40;;573:18;558:34;;594:22;;;555:62;552:88;;;620:18;;:::i;:::-;656:2;649:22;402:275;;-1:-1:-1;402:275:11:o;682:1349::-;730:5;760:4;804:3;799:2;791:6;787:15;783:25;773:53;;822:1;819;812:12;773:53;846:22;;:::i;:::-;890:3;928:2;920:6;916:15;954:3;946:6;943:15;940:35;;;971:1;968;961:12;940:35;995:6;1010:992;1026:6;1021:3;1018:15;1010:992;;;1114:3;1101:17;1141:18;1191:2;1178:11;1175:19;1172:109;;;1235:1;1264:2;1260;1253:14;1172:109;1316:11;1308:6;1304:24;1294:34;;1368:3;1363:2;1359;1355:11;1351:21;1341:119;;1414:1;1443:2;1439;1432:14;1341:119;1496:2;1483:16;1522:4;1549:2;1545;1542:10;1539:36;;;1555:18;;:::i;:::-;1603:51;1627:11;;;-1:-1:-1;;1623:25:11;1619:34;;1603:51;:::i;:::-;1588:66;;1683:2;1674:7;1667:19;1727:3;1722:2;1717;1713;1709:11;1705:20;1702:29;1699:119;;;1772:1;1801:2;1797;1790:14;1699:119;1875:2;1870;1866;1862:11;1857:2;1848:7;1844:16;1831:47;1925:1;1902:16;;;1898:25;;1891:36;;;;1940:20;;;1980:12;;;;;-1:-1:-1;1052:4:11;1043:14;1010:992;;;-1:-1:-1;2020:5:11;;682:1349;-1:-1:-1;;;;;;682:1349:11:o;2036:173::-;2104:20;;-1:-1:-1;;;;;2153:31:11;;2143:42;;2133:70;;2199:1;2196;2189:12;2133:70;2036:173;;;:::o;2214:484::-;2264:5;2317:3;2310:4;2302:6;2298:17;2294:27;2284:55;;2335:1;2332;2325:12;2284:55;2359:22;;:::i;:::-;2403:3;2441:2;2433:6;2429:15;2467:3;2459:6;2456:15;2453:35;;;2484:1;2481;2474:12;2453:35;2508:6;2523:146;2539:6;2534:3;2531:15;2523:146;;;2607:17;;2595:30;;2654:4;2645:14;;;;2556;2523:146;;;-1:-1:-1;2687:5:11;;2214:484;-1:-1:-1;;;;;2214:484:11:o;2703:1099::-;2876:6;2884;2892;2900;2908;2961:3;2949:9;2940:7;2936:23;2932:33;2929:53;;;2978:1;2975;2968:12;2929:53;3018:9;3005:23;3051:18;3043:6;3040:30;3037:50;;;3083:1;3080;3073:12;3037:50;3106:55;3153:7;3144:6;3133:9;3129:22;3106:55;:::i;:::-;3096:65;;;3180:2;3201:38;3235:2;3224:9;3220:18;3201:38;:::i;:::-;3191:48;;3282:7;3277:2;3266:9;3262:18;3258:32;3248:60;;3304:1;3301;3294:12;3248:60;3328:22;;:::i;:::-;3372:3;3413;3402:9;3398:19;3440:7;3432:6;3429:19;3426:39;;;3461:1;3458;3451:12;3426:39;3500:2;3489:9;3485:18;3512:148;3528:6;3523:3;3520:15;3512:148;;;3594:23;3613:3;3594:23;:::i;:::-;3582:36;;3638:12;;;;3545;;3512:148;;;3516:3;3679:5;3669:15;;3703:41;3736:7;3728:6;3703:41;:::i;:::-;2703:1099;;;;-1:-1:-1;2703:1099:11;;3791:3;3776:19;3763:33;;2703:1099;-1:-1:-1;;;;;;2703:1099:11:o;3999:186::-;4058:6;4111:2;4099:9;4090:7;4086:23;4082:32;4079:52;;;4127:1;4124;4117:12;4079:52;4150:29;4169:9;4150:29;:::i;4372:180::-;4431:6;4484:2;4472:9;4463:7;4459:23;4455:32;4452:52;;;4500:1;4497;4490:12;4452:52;-1:-1:-1;4523:23:11;;4372:180;-1:-1:-1;4372:180:11:o;4781:530::-;4913:6;4921;4929;4982:3;4970:9;4961:7;4957:23;4953:33;4950:53;;;4999:1;4996;4989:12;4950:53;5022:44;5058:7;5047:9;5022:44;:::i;:::-;5012:54;;5113:2;5102:9;5098:18;5085:32;5075:42;;5168:2;5157:9;5153:18;5140:32;5195:18;5187:6;5184:30;5181:50;;;5227:1;5224;5217:12;5181:50;5250:55;5297:7;5288:6;5277:9;5273:22;5250:55;:::i;:::-;5240:65;;;4781:530;;;;;:::o;5316:472::-;5358:3;5396:5;5390:12;5423:6;5418:3;5411:19;5448:1;5458:162;5472:6;5469:1;5466:13;5458:162;;;5534:4;5590:13;;;5586:22;;5580:29;5562:11;;;5558:20;;5551:59;5487:12;5458:162;;;5638:6;5635:1;5632:13;5629:87;;;5704:1;5697:4;5688:6;5683:3;5679:16;5675:27;5668:38;5629:87;-1:-1:-1;5770:2:11;5749:15;-1:-1:-1;;5745:29:11;5736:39;;;;5777:4;5732:50;;5316:472;-1:-1:-1;;5316:472:11:o;5793:388::-;5998:2;5987:9;5980:21;5961:4;6018:45;6059:2;6048:9;6044:18;6036:6;6018:45;:::i;:::-;6094:2;6079:18;;6072:34;;;;-1:-1:-1;;;;;;6142:32:11;;;;6137:2;6122:18;;;6115:60;6010:53;5793:388;-1:-1:-1;5793:388:11:o;6186:127::-;6247:10;6242:3;6238:20;6235:1;6228:31;6278:4;6275:1;6268:15;6302:4;6299:1;6292:15;6682:127;6743:10;6738:3;6734:20;6731:1;6724:31;6774:4;6771:1;6764:15;6798:4;6795:1;6788:15;6814:135;6853:3;6874:17;;;6871:43;;6894:18;;:::i;:::-;-1:-1:-1;6941:1:11;6930:13;;6814:135::o;9390:220::-;9539:2;9528:9;9521:21;9502:4;9559:45;9600:2;9589:9;9585:18;9577:6;9559:45;:::i;9615:435::-;9848:3;9837:9;9830:22;9811:4;9869:46;9910:3;9899:9;9895:19;9887:6;9869:46;:::i;:::-;9946:2;9931:18;;9924:34;;;;-1:-1:-1;9989:2:11;9974:18;;9967:34;;;;10032:2;10017:18;;;10010:34;9861:54;9615:435;-1:-1:-1;9615:435:11:o;10055:128::-;10095:3;10126:1;10122:6;10119:1;10116:13;10113:39;;;10132:18;;:::i;:::-;-1:-1:-1;10168:9:11;;10055:128::o;10188:291::-;10365:2;10354:9;10347:21;10328:4;10385:45;10426:2;10415:9;10411:18;10403:6;10385:45;:::i;:::-;10377:53;;10466:6;10461:2;10450:9;10446:18;10439:34;10188:291;;;;;:::o;10484:362::-;10689:2;10678:9;10671:21;10652:4;10709:45;10750:2;10739:9;10735:18;10727:6;10709:45;:::i;:::-;10785:2;10770:18;;10763:34;;;;-1:-1:-1;10828:2:11;10813:18;10806:34;10701:53;10484:362;-1:-1:-1;10484:362:11:o;11236:317::-;11413:2;11402:9;11395:21;11376:4;11433:45;11474:2;11463:9;11459:18;11451:6;11433:45;:::i;:::-;11425:53;;11543:1;11539;11534:3;11530:11;11526:19;11518:6;11514:32;11509:2;11498:9;11494:18;11487:60;11236:317;;;;;:::o;11558:388::-;11763:2;11752:9;11745:21;11726:4;11783:45;11824:2;11813:9;11809:18;11801:6;11783:45;:::i;:::-;-1:-1:-1;;;;;11864:32:11;;;;11859:2;11844:18;;11837:60;-1:-1:-1;11928:2:11;11913:18;11906:34;11775:53;11558:388;-1:-1:-1;11558:388:11:o;11951:127::-;12012:10;12007:3;12003:20;12000:1;11993:31;12043:4;12040:1;12033:15;12067:4;12064:1;12057:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    1248,
    7064
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4209FFF1 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x4209FFF1 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x8622A689 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xA0FF4999 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xF3F480D9 EQ PUSH2 0x210 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x21E66868 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x365B98B2 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x17F JUMPI PUSH2 0xB4 JUMP JUMPDEST CALLDATASIZE PUSH2 0xB4 JUMPI PUSH2 0xB2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1681 PUSH1 0x3B SWAP2 CODECOPY CALLVALUE CALLER PUSH2 0x226 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15BB PUSH1 0x3C SWAP2 CODECOPY CALLVALUE CALLER PUSH2 0x226 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1231 JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x167 PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x1308 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x55B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1321 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x23E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xE3849F79 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xBBD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1656 PUSH1 0x2B SWAP2 CODECOPY PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x2C2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x1B9BDB98D9481A5CC80959 PUSH1 0xAA SHL DUP2 MSTORE POP DUP4 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x52C JUMPI PUSH2 0x319 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x5F7369676E6572735B25645D206973202573 PUSH1 0x70 SHL DUP2 MSTORE POP DUP3 DUP8 DUP5 PUSH1 0x2 DUP2 LT PUSH2 0x30F JUMPI PUSH2 0x30F PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x226 JUMP JUMPDEST PUSH2 0x365 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH19 0x5F62616C616E6365735B25645D206973202573 PUSH1 0x68 SHL DUP2 MSTORE POP DUP3 DUP7 DUP5 PUSH1 0x2 DUP2 LT PUSH2 0x35B JUMPI PUSH2 0x35B PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43A DUP9 DUP4 PUSH1 0x2 DUP2 LT PUSH2 0x37C JUMPI PUSH2 0x37C PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x434 DUP10 DUP9 DUP7 PUSH1 0x2 DUP2 LT PUSH2 0x397 JUMPI PUSH2 0x397 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3D4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 MSTORE PUSH1 0x14 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP5 DUP4 ADD MSTORE PUSH1 0x3C DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x5C SWAP1 SWAP4 ADD SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC6E JUMP JUMPDEST SWAP1 POP PUSH2 0x46B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x6465636F646564206973202573 PUSH1 0x98 SHL DUP2 MSTORE POP DUP3 PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA DUP10 DUP5 PUSH1 0x2 DUP2 LT PUSH2 0x482 JUMPI PUSH2 0x482 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x434 DUP11 DUP10 DUP8 PUSH1 0x2 DUP2 LT PUSH2 0x49D JUMPI PUSH2 0x49D PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3D4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 MSTORE PUSH1 0x14 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP5 PUSH1 0x2 DUP2 LT PUSH2 0x4F5 JUMPI PUSH2 0x4F5 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP DUP1 PUSH2 0x517 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x532 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x524 SWAP1 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2C5 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x57C PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1629 PUSH1 0x2D SWAP2 CODECOPY PUSH2 0xB15 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x5CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2737BA103AB9B2B9 PUSH1 0xC1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EC PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E7 PUSH1 0x2D SWAP2 CODECOPY PUSH2 0xB15 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x641 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x646 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x68E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x6B1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1714 PUSH1 0x43 SWAP2 CODECOPY CALLER DUP5 PUSH2 0xCD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x709 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1757 PUSH1 0x2D SWAP2 CODECOPY PUSH2 0xB15 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x72C PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1629 PUSH1 0x2D SWAP2 CODECOPY PUSH2 0xB15 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2737BA103AB9B2B9 PUSH1 0xC1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C2 JUMP JUMPDEST DUP1 DUP4 DUP4 PUSH2 0x79A PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17B8 PUSH1 0x34 SWAP2 CODECOPY PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x7A2 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x803 JUMPI PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x7C1 JUMPI PUSH2 0x7C1 PUSH2 0x13F9 JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 PUSH1 0x2 DUP2 LT PUSH2 0x7DE JUMPI PUSH2 0x7DE PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 SWAP1 SWAP3 MUL ADD MSTORE DUP1 PUSH2 0x7FB DUP2 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7A5 JUMP JUMPDEST POP PUSH2 0x811 DUP5 ADDRESS DUP4 DUP7 DUP7 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x851 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C2 JUMP JUMPDEST DUP7 PUSH2 0x873 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15F7 PUSH1 0x32 SWAP2 CODECOPY PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x89E PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x154E PUSH1 0x3B SWAP2 CODECOPY DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SELFBALANCE SWAP2 SWAP1 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP2 MLOAD PUSH2 0x8AE SWAP2 PUSH2 0xBAA JUMP JUMPDEST SELFBALANCE LT ISZERO PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62616C616E6365206F6620636F6E7472616374206D757374206265203E3D2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F2074686520746F74616C2062616C616E6365206F6620757365727300000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x944 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16BC PUSH1 0x2B SWAP2 CODECOPY PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45787069726564206368616C6C656E676520706572696F640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP8 GT PUSH2 0x9FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E6365206D7573742062652067726561746572207468616E207468652063 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x757272656E74206E6F6E6365 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0xA62 JUMPI DUP9 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0xA19 JUMPI PUSH2 0xA19 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP1 DUP5 PUSH1 0x2 DUP2 LT PUSH2 0xA34 JUMPI PUSH2 0xA34 PUSH2 0x13F9 JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE DUP1 PUSH2 0xA5A DUP2 PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9FE JUMP JUMPDEST POP PUSH1 0x6 DUP8 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH2 0xA76 SWAP1 TIMESTAMP SWAP1 PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x5050C6E2A6FC173775CE4852F893C9E5AAEFF00101F3AEF75E0EC263CF083CA9 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xAD2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1589 PUSH1 0x32 SWAP2 CODECOPY PUSH2 0xB15 JUMP JUMPDEST POP PUSH2 0xAF4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1784 PUSH1 0x34 SWAP2 CODECOPY PUSH2 0xB15 JUMP JUMPDEST POP POP POP POP PUSH2 0x26D PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1757 PUSH1 0x2D SWAP2 CODECOPY JUMPDEST PUSH2 0xB58 DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0x143E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x104C13EB PUSH1 0xE2 SHL OR SWAP1 MSTORE PUSH2 0xBBD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xBA4 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB75 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x4772B33 PUSH1 0xE1 SHL OR SWAP1 MSTORE PUSH2 0xBBD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB6 DUP3 DUP5 PUSH2 0x1480 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH11 0x636F6E736F6C652E6C6F67 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP1 DUP5 DUP4 DUP6 GAS STATICCALL POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC23 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xBF4 SWAP3 SWAP2 SWAP1 PUSH2 0x1498 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x9710A9D PUSH1 0xE4 SHL OR SWAP1 MSTORE PUSH2 0xBBD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x26D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC3F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x969CDD03 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xC7D DUP6 DUP6 PUSH2 0xD1E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xC8A DUP2 PUSH2 0xD8C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC23 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xCA8 SWAP3 SWAP2 SWAP1 PUSH2 0x14DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x319AF333 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xBBD JUMP JUMPDEST PUSH2 0x26D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xCEF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x7C81217 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0xD54 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0xD48 DUP8 DUP3 DUP6 DUP6 PUSH2 0xF42 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0xD85 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 SUB PUSH2 0xD7D JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0xD72 DUP7 DUP4 DUP4 PUSH2 0x102F JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP PUSH2 0xD85 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDA0 JUMPI PUSH2 0xDA0 PUSH2 0x1537 JUMP JUMPDEST SUB PUSH2 0xDA8 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDBC JUMPI PUSH2 0xDBC PUSH2 0x1537 JUMP JUMPDEST SUB PUSH2 0xE09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE1D JUMPI PUSH2 0xE1D PUSH2 0x1537 JUMP JUMPDEST SUB PUSH2 0xE6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE7E JUMPI PUSH2 0xE7E PUSH2 0x1537 JUMP JUMPDEST SUB PUSH2 0xED6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xEEA JUMPI PUSH2 0xEEA PUSH2 0x1537 JUMP JUMPDEST SUB PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0xF79 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1026 JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0xF91 JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0xFA2 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x1026 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x101F JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1026 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP4 AND DUP2 PUSH2 0x104C PUSH1 0xFF DUP7 SWAP1 SHR PUSH1 0x1B PUSH2 0x1480 JUMP JUMPDEST SWAP1 POP PUSH2 0x105A DUP8 DUP3 DUP9 DUP6 PUSH2 0xF42 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BF PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x10EE JUMPI PUSH2 0x10EE PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 DUP2 DUP5 ADD SLT PUSH2 0x1108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1110 PUSH2 0x109C JUMP JUMPDEST DUP1 PUSH1 0x40 DUP6 ADD DUP7 DUP2 GT ISZERO PUSH2 0x1122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11B9 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1145 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 DUP8 DUP4 ADD SLT PUSH2 0x1159 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH2 0x116D JUMPI PUSH2 0x116D PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x117E DUP3 DUP11 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH2 0x10C5 JUMP JUMPDEST SWAP3 POP DUP2 DUP4 MSTORE DUP12 DUP2 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1195 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP2 DUP6 ADD DUP3 DUP6 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP4 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP7 MSTORE SWAP5 SWAP1 SWAP5 ADD SWAP4 POP PUSH1 0x20 ADD PUSH2 0x1124 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11FA PUSH2 0x109C JUMP JUMPDEST DUP1 PUSH1 0x40 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH2 0x120C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1226 JUMPI DUP1 CALLDATALOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x120E JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x126C DUP9 DUP3 DUP10 ADD PUSH2 0x10F6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x127C DUP2 DUP9 ADD PUSH2 0x11C5 JUMP JUMPDEST SWAP5 POP DUP8 PUSH1 0x5F DUP9 ADD SLT PUSH2 0x128D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1295 PUSH2 0x109C JUMP JUMPDEST DUP1 PUSH1 0x80 DUP10 ADD DUP11 DUP2 GT ISZERO PUSH2 0x12A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP11 ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12CA JUMPI PUSH2 0x12BD DUP2 PUSH2 0x11C5 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 DUP5 ADD PUSH2 0x12AC JUMP JUMPDEST POP DUP2 SWAP7 POP PUSH2 0x12D8 DUP12 DUP3 PUSH2 0x11E1 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 PUSH1 0xC0 ADD CALLDATALOAD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB6 DUP3 PUSH2 0x11C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x131A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1340 DUP6 DUP6 PUSH2 0x11E1 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x136F DUP7 DUP3 DUP8 ADD PUSH2 0x10F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x139F JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1383 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x13B1 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x13D9 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1379 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1437 JUMPI PUSH2 0x1437 PUSH2 0x140F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBB6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1379 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1464 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1379 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1493 JUMPI PUSH2 0x1493 PUSH2 0x140F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14AB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1379 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14CD PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1379 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14F2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1379 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x151C PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1379 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH3 0x616C61 PUSH15 0x63652069732025642C2062616C616E PUSH4 0x65735B30 0x5D KECCAK256 PUSH10 0x732025642C62616C616E PUSH4 0x65735B31 0x5D KECCAK256 PUSH10 0x73202564426944697265 PUSH4 0x74696F6E PUSH2 0x6C50 PUSH2 0x796D PUSH6 0x6E744368616E PUSH15 0x656C2E636865636B42616C616E6365 PUSH20 0x2829207061737365644269446972656374696F6E PUSH2 0x6C50 PUSH2 0x796D PUSH6 0x6E744368616E PUSH15 0x656C2E66616C6C6261636B28292C20 MSTORE PUSH6 0x63656976696E PUSH8 0x2025642066726F6D KECCAK256 0x25 PUSH20 0x4269446972656374696F6E616C5061796D656E74 NUMBER PUSH9 0x616E6E656C2E636865 PUSH4 0x6B42616C PUSH2 0x6E63 PUSH6 0x732829206361 PUSH13 0x6C65644269446972656374696F PUSH15 0x616C5061796D656E744368616E6E65 PUSH13 0x2E6F6E6C795573657228292063 PUSH2 0x6C6C PUSH6 0x644269446972 PUSH6 0x6374696F6E61 PUSH13 0x5061796D656E744368616E6E65 PUSH13 0x2E76657269667928292063616C PUSH13 0x65644269446972656374696F6E PUSH2 0x6C50 PUSH2 0x796D PUSH6 0x6E744368616E PUSH15 0x656C2E7265636569766528292C2052 PUSH6 0x63656976696E PUSH8 0x2025642066726F6D KECCAK256 0x25 PUSH20 0x4269446972656374696F6E616C5061796D656E74 NUMBER PUSH9 0x616E6E656C2E636861 PUSH13 0x6C656E67654578697428294269 DIFFICULTY PUSH10 0x72656374696F6E616C50 PUSH2 0x796D PUSH6 0x6E744368616E PUSH15 0x656C2E776974686472617728292063 PUSH2 0x6C6C PUSH6 0x644269446972 PUSH6 0x6374696F6E61 PUSH13 0x5061796D656E744368616E6E65 PUSH13 0x2E776974686472617728292C20 PUSH14 0x73672E73656E6465722069732025 PUSH20 0x2C20616D6F756E743D2564426944697265637469 PUSH16 0x6E616C5061796D656E744368616E6E65 PUSH13 0x2E6F6E6C795573657228292070 PUSH2 0x7373 PUSH6 0x644269446972 PUSH6 0x6374696F6E61 PUSH13 0x5061796D656E744368616E6E65 PUSH13 0x2E636865636B5369676E617475 PUSH19 0x65732829207061737365644269446972656374 PUSH10 0x6F6E616C5061796D656E PUSH21 0x4368616E6E656C2E636865636B5369676E61747572 PUSH6 0x732829206361 PUSH13 0x6C6564A2646970667358221220 PUSH7 0x1D6F2D91CD38A2 CALLDATALOAD 0x2E 0x4A 0xB1 0xC 0xEC STATICCALL SHR 0xA6 0x23 CHAINID LT 0x22 SWAP6 0x2E PUSH26 0x75FCB9B7E70164864736F6C634300080E003300000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "LT",
      "path": "4"
    },
    "9": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A"
    },
    "12": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "13": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "SHR",
      "path": "4"
    },
    "19": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "DUP1",
      "path": "4"
    },
    "20": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4209FFF1"
    },
    "25": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "GT",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x59"
    },
    "29": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "30": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "DUP1",
      "path": "4"
    },
    "31": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4209FFF1"
    },
    "36": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "EQ",
      "path": "4"
    },
    "37": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x194"
    },
    "40": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "41": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "DUP1",
      "path": "4"
    },
    "42": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8622A689"
    },
    "47": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "EQ",
      "path": "4"
    },
    "48": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C4"
    },
    "51": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "52": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "DUP1",
      "path": "4"
    },
    "53": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA0FF4999"
    },
    "58": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "EQ",
      "path": "4"
    },
    "59": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DA"
    },
    "62": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "63": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "DUP1",
      "path": "4"
    },
    "64": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xAFFED0E0"
    },
    "69": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "EQ",
      "path": "4"
    },
    "70": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FA"
    },
    "73": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "74": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "DUP1",
      "path": "4"
    },
    "75": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF3F480D9"
    },
    "80": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "EQ",
      "path": "4"
    },
    "81": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x210"
    },
    "84": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "85": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB4"
    },
    "88": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "JUMP",
      "path": "4"
    },
    "89": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "90": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "DUP1",
      "path": "4"
    },
    "91": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x21E66868"
    },
    "96": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "EQ",
      "path": "4"
    },
    "97": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD7"
    },
    "100": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "101": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "DUP1",
      "path": "4"
    },
    "102": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x27E235E3"
    },
    "107": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "EQ",
      "path": "4"
    },
    "108": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10C"
    },
    "111": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "112": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "DUP1",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x365B98B2"
    },
    "118": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "EQ",
      "path": "4"
    },
    "119": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x147"
    },
    "122": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "123": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "DUP1",
      "path": "4"
    },
    "124": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x3CCFD60B"
    },
    "129": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "EQ",
      "path": "4"
    },
    "130": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17F"
    },
    "133": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "134": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB4"
    },
    "137": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "JUMP",
      "path": "4"
    },
    "138": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "139": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "140": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB4"
    },
    "143": {
      "fn": null,
      "offset": [
        1248,
        7064
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "144": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 0,
      "value": "0xB2"
    },
    "147": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "149": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "150": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "DUP1",
      "path": "4"
    },
    "151": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "153": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "ADD",
      "path": "4"
    },
    "154": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "156": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "157": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "DUP1",
      "path": "4"
    },
    "158": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3B"
    },
    "160": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "DUP2",
      "path": "4"
    },
    "161": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "162": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "164": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "ADD",
      "path": "4"
    },
    "165": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1681"
    },
    "168": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3B"
    },
    "170": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "171": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "172": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6817,
        6826
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "173": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6840,
        6850
      ],
      "op": "CALLER",
      "path": "4"
    },
    "174": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6728
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x226"
    },
    "177": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "jump": "i",
      "offset": [
        6717,
        6860
      ],
      "op": "JUMP",
      "path": "4"
    },
    "178": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        6717,
        6860
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "179": {
      "offset": [
        1248,
        7064
      ],
      "op": "STOP",
      "path": "4"
    },
    "180": {
      "fn": "BiDirectionalPaymentChannel.<receive>",
      "offset": [
        1248,
        7064
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "181": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 1,
      "value": "0xB2"
    },
    "184": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "186": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "187": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "DUP1",
      "path": "4"
    },
    "188": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "190": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "ADD",
      "path": "4"
    },
    "191": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "193": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "194": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "DUP1",
      "path": "4"
    },
    "195": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3C"
    },
    "197": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "DUP2",
      "path": "4"
    },
    "198": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "199": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "201": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "ADD",
      "path": "4"
    },
    "202": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15BB"
    },
    "205": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3C"
    },
    "207": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "208": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        7055
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "209": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        7012,
        7021
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "210": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        7035,
        7045
      ],
      "op": "CALLER",
      "path": "4"
    },
    "211": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "offset": [
        6911,
        6922
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x226"
    },
    "214": {
      "fn": "BiDirectionalPaymentChannel.<fallback>",
      "jump": "i",
      "offset": [
        6911,
        7055
      ],
      "op": "JUMP",
      "path": "4"
    },
    "215": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "216": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "217": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "DUP1",
      "path": "4"
    },
    "218": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "219": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE3"
    },
    "222": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "223": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "225": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "DUP1",
      "path": "4"
    },
    "226": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "REVERT",
      "path": "4"
    },
    "227": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "228": {
      "op": "POP"
    },
    "229": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF7"
    },
    "232": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF2"
    },
    "235": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "236": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "238": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1231"
    },
    "241": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        3104,
        4305
      ],
      "op": "JUMP",
      "path": "4"
    },
    "242": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "243": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x272"
    },
    "246": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        3104,
        4305
      ],
      "op": "JUMP",
      "path": "4"
    },
    "247": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "248": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "250": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "251": {
      "op": "SWAP1"
    },
    "252": {
      "op": "ISZERO"
    },
    "253": {
      "op": "ISZERO"
    },
    "254": {
      "op": "DUP2"
    },
    "255": {
      "op": "MSTORE"
    },
    "256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "258": {
      "op": "ADD"
    },
    "259": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "260": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "262": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "263": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "DUP1",
      "path": "4"
    },
    "264": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "265": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "SUB",
      "path": "4"
    },
    "266": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "267": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "RETURN",
      "path": "4"
    },
    "268": {
      "offset": [
        1556,
        1599
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "269": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "270": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "DUP1",
      "path": "4"
    },
    "271": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "272": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x118"
    },
    "275": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "276": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "278": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "DUP1",
      "path": "4"
    },
    "279": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "REVERT",
      "path": "4"
    },
    "280": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "281": {
      "op": "POP"
    },
    "282": {
      "offset": [
        1556,
        1599
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139"
    },
    "285": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x127"
    },
    "288": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "289": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "291": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12ED"
    },
    "294": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        1556,
        1599
      ],
      "op": "JUMP",
      "path": "4"
    },
    "295": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "296": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "298": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "300": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "301": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "303": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "304": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "DUP2",
      "path": "4"
    },
    "305": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "306": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "308": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "309": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "310": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "311": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "DUP2",
      "path": "4"
    },
    "312": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "JUMP",
      "path": "4"
    },
    "313": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "314": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "316": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1556,
        1599
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "317": {
      "op": "SWAP1"
    },
    "318": {
      "op": "DUP2"
    },
    "319": {
      "op": "MSTORE"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "322": {
      "op": "ADD"
    },
    "323": {
      "offset": [
        1556,
        1599
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x103"
    },
    "326": {
      "op": "JUMP"
    },
    "327": {
      "offset": [
        1474,
        1505
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "328": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "329": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "DUP1",
      "path": "4"
    },
    "330": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "331": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x153"
    },
    "334": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "335": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "337": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "DUP1",
      "path": "4"
    },
    "338": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "REVERT",
      "path": "4"
    },
    "339": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "340": {
      "op": "POP"
    },
    "341": {
      "offset": [
        1474,
        1505
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x167"
    },
    "344": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x162"
    },
    "347": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "348": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "350": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1308"
    },
    "353": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        1474,
        1505
      ],
      "op": "JUMP",
      "path": "4"
    },
    "354": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "355": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x53B"
    },
    "358": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        1474,
        1505
      ],
      "op": "JUMP",
      "path": "4"
    },
    "359": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "360": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "362": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "369": {
      "op": "SHL"
    },
    "370": {
      "op": "SUB"
    },
    "371": {
      "op": "SWAP1"
    },
    "372": {
      "op": "SWAP2"
    },
    "373": {
      "op": "AND"
    },
    "374": {
      "op": "DUP2"
    },
    "375": {
      "op": "MSTORE"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "378": {
      "op": "ADD"
    },
    "379": {
      "offset": [
        1474,
        1505
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x103"
    },
    "382": {
      "op": "JUMP"
    },
    "383": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5900,
        6674
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "384": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5900,
        6674
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "385": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5900,
        6674
      ],
      "op": "DUP1",
      "path": "4"
    },
    "386": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5900,
        6674
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "387": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5900,
        6674
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18B"
    },
    "390": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5900,
        6674
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "391": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5900,
        6674
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "393": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5900,
        6674
      ],
      "op": "DUP1",
      "path": "4"
    },
    "394": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5900,
        6674
      ],
      "op": "REVERT",
      "path": "4"
    },
    "395": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5900,
        6674
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "396": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5900,
        6674
      ],
      "op": "POP",
      "path": "4"
    },
    "397": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5900,
        6674
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB2"
    },
    "400": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5900,
        6674
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x55B"
    },
    "403": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "jump": "i",
      "offset": [
        5900,
        6674
      ],
      "op": "JUMP",
      "path": "4"
    },
    "404": {
      "offset": [
        1511,
        1549
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "405": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "406": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "DUP1",
      "path": "4"
    },
    "407": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "408": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A0"
    },
    "411": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "412": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "414": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "DUP1",
      "path": "4"
    },
    "415": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "REVERT",
      "path": "4"
    },
    "416": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "417": {
      "op": "POP"
    },
    "418": {
      "offset": [
        1511,
        1549
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF7"
    },
    "421": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AF"
    },
    "424": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "425": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "427": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12ED"
    },
    "430": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "jump": "i",
      "offset": [
        1511,
        1549
      ],
      "op": "JUMP",
      "path": "4"
    },
    "431": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "432": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "434": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "436": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "437": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "439": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "440": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "DUP2",
      "path": "4"
    },
    "441": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "442": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "444": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "445": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "446": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "447": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "449": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "AND",
      "path": "4"
    },
    "450": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "DUP2",
      "path": "4"
    },
    "451": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1511,
        1549
      ],
      "op": "JUMP",
      "path": "4"
    },
    "452": {
      "offset": [
        1642,
        1666
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "453": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1642,
        1666
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "454": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1642,
        1666
      ],
      "op": "DUP1",
      "path": "4"
    },
    "455": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1642,
        1666
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "456": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1642,
        1666
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D0"
    },
    "459": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1642,
        1666
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "460": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1642,
        1666
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "462": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1642,
        1666
      ],
      "op": "DUP1",
      "path": "4"
    },
    "463": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1642,
        1666
      ],
      "op": "REVERT",
      "path": "4"
    },
    "464": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1642,
        1666
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "465": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1642,
        1666
      ],
      "op": "POP",
      "path": "4"
    },
    "466": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1642,
        1666
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139"
    },
    "469": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1642,
        1666
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "471": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1642,
        1666
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "472": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1642,
        1666
      ],
      "op": "DUP2",
      "path": "4"
    },
    "473": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        1642,
        1666
      ],
      "op": "JUMP",
      "path": "4"
    },
    "474": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "475": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "476": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "DUP1",
      "path": "4"
    },
    "477": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "478": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E6"
    },
    "481": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "482": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "484": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "DUP1",
      "path": "4"
    },
    "485": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "REVERT",
      "path": "4"
    },
    "486": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "487": {
      "op": "POP"
    },
    "488": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB2"
    },
    "491": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F5"
    },
    "494": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "495": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "497": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1321"
    },
    "500": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "jump": "i",
      "offset": [
        5167,
        5894
      ],
      "op": "JUMP",
      "path": "4"
    },
    "501": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "502": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x70B"
    },
    "505": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "jump": "i",
      "offset": [
        5167,
        5894
      ],
      "op": "JUMP",
      "path": "4"
    },
    "506": {
      "offset": [
        1672,
        1692
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "507": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1672,
        1692
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "508": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1672,
        1692
      ],
      "op": "DUP1",
      "path": "4"
    },
    "509": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1672,
        1692
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "510": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1672,
        1692
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x206"
    },
    "513": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1672,
        1692
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "514": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1672,
        1692
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "516": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1672,
        1692
      ],
      "op": "DUP1",
      "path": "4"
    },
    "517": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1672,
        1692
      ],
      "op": "REVERT",
      "path": "4"
    },
    "518": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1672,
        1692
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "519": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1672,
        1692
      ],
      "op": "POP",
      "path": "4"
    },
    "520": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1672,
        1692
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139"
    },
    "523": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1672,
        1692
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "525": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1672,
        1692
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "526": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1672,
        1692
      ],
      "op": "DUP2",
      "path": "4"
    },
    "527": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1672,
        1692
      ],
      "op": "JUMP",
      "path": "4"
    },
    "528": {
      "offset": [
        1606,
        1636
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "529": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1606,
        1636
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "530": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1606,
        1636
      ],
      "op": "DUP1",
      "path": "4"
    },
    "531": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1606,
        1636
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "532": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1606,
        1636
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21C"
    },
    "535": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1606,
        1636
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "536": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1606,
        1636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "538": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1606,
        1636
      ],
      "op": "DUP1",
      "path": "4"
    },
    "539": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1606,
        1636
      ],
      "op": "REVERT",
      "path": "4"
    },
    "540": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1606,
        1636
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "541": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1606,
        1636
      ],
      "op": "POP",
      "path": "4"
    },
    "542": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1606,
        1636
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139"
    },
    "545": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1606,
        1636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "547": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1606,
        1636
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "548": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1606,
        1636
      ],
      "op": "DUP2",
      "path": "4"
    },
    "549": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1606,
        1636
      ],
      "op": "JUMP",
      "path": "4"
    },
    "550": {
      "fn": "console.log",
      "offset": [
        10310,
        10464
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "551": {
      "fn": "console.log",
      "offset": [
        10380,
        10460
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 2,
      "value": "0x26D"
    },
    "554": {
      "fn": "console.log",
      "offset": [
        10448,
        10450
      ],
      "op": "DUP4",
      "path": "10"
    },
    "555": {
      "fn": "console.log",
      "offset": [
        10452,
        10454
      ],
      "op": "DUP4",
      "path": "10"
    },
    "556": {
      "fn": "console.log",
      "offset": [
        10456,
        10458
      ],
      "op": "DUP4",
      "path": "10"
    },
    "557": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "559": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "560": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "562": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "ADD",
      "path": "10"
    },
    "563": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23E"
    },
    "566": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "567": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "568": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "569": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "570": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13C6"
    },
    "573": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        10396,
        10459
      ],
      "op": "JUMP",
      "path": "10"
    },
    "574": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "575": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "577": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "DUP1",
      "path": "10"
    },
    "578": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "581": {
      "op": "NOT"
    },
    "582": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "DUP2",
      "path": "10"
    },
    "583": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "DUP5",
      "path": "10"
    },
    "584": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "SUB",
      "path": "10"
    },
    "585": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "ADD",
      "path": "10"
    },
    "586": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "DUP2",
      "path": "10"
    },
    "587": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "588": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "589": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "590": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "591": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "593": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "DUP2",
      "path": "10"
    },
    "594": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "ADD",
      "path": "10"
    },
    "595": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "DUP1",
      "path": "10"
    },
    "596": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "601": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "603": {
      "op": "SHL"
    },
    "604": {
      "op": "SUB"
    },
    "605": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "AND",
      "path": "10"
    },
    "606": {
      "op": "PUSH4",
      "value": "0xE3849F79"
    },
    "611": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "613": {
      "op": "SHL"
    },
    "614": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "OR",
      "path": "10"
    },
    "615": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "616": {
      "fn": "console.log",
      "offset": [
        10396,
        10459
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "617": {
      "fn": "console.log",
      "offset": [
        10380,
        10395
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBBD"
    },
    "620": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        10380,
        10460
      ],
      "op": "JUMP",
      "path": "10"
    },
    "621": {
      "fn": "console.log",
      "offset": [
        10380,
        10460
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "622": {
      "fn": "console.log",
      "offset": [
        10310,
        10464
      ],
      "op": "POP",
      "path": "10"
    },
    "623": {
      "fn": "console.log",
      "offset": [
        10310,
        10464
      ],
      "op": "POP",
      "path": "10"
    },
    "624": {
      "fn": "console.log",
      "offset": [
        10310,
        10464
      ],
      "op": "POP",
      "path": "10"
    },
    "625": {
      "fn": "console.log",
      "jump": "o",
      "offset": [
        10310,
        10464
      ],
      "op": "JUMP",
      "path": "10"
    },
    "626": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "627": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3308,
        3312
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "629": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 3,
      "value": "0x295"
    },
    "632": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "634": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "635": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "DUP1",
      "path": "4"
    },
    "636": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "638": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "ADD",
      "path": "4"
    },
    "639": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "641": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "642": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "DUP1",
      "path": "4"
    },
    "643": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2B"
    },
    "645": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "DUP2",
      "path": "4"
    },
    "646": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "647": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "649": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "ADD",
      "path": "4"
    },
    "650": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1656"
    },
    "653": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2B"
    },
    "655": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "656": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "657": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3335
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB15"
    },
    "660": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        3324,
        3382
      ],
      "op": "JUMP",
      "path": "4"
    },
    "661": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3324,
        3382
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "662": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 4,
      "value": "0x2C2"
    },
    "665": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "667": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "668": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "DUP1",
      "path": "4"
    },
    "669": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "671": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "ADD",
      "path": "4"
    },
    "672": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "674": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "675": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "DUP1",
      "path": "4"
    },
    "676": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xB"
    },
    "678": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "DUP2",
      "path": "4"
    },
    "679": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "680": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "682": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "ADD",
      "path": "4"
    },
    "683": {
      "op": "PUSH11",
      "value": "0x1B9BDB98D9481A5CC80959"
    },
    "695": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "697": {
      "op": "SHL"
    },
    "698": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "DUP2",
      "path": "4"
    },
    "699": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "700": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "POP",
      "path": "4"
    },
    "701": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3419,
        3425
      ],
      "op": "DUP4",
      "path": "4"
    },
    "702": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3403
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBDE"
    },
    "705": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        3392,
        3426
      ],
      "op": "JUMP",
      "path": "4"
    },
    "706": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3392,
        3426
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "707": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3441,
        3450
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "709": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3436,
        4278
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "710": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3460,
        3478
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "712": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3456,
        3457
      ],
      "op": "DUP2",
      "path": "4"
    },
    "713": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3456,
        3478
      ],
      "op": "LT",
      "path": "4"
    },
    "714": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3436,
        4278
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "715": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3436,
        4278
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x52C"
    },
    "718": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3436,
        4278
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "719": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 5,
      "value": "0x319"
    },
    "722": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "724": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "725": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "DUP1",
      "path": "4"
    },
    "726": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "728": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "ADD",
      "path": "4"
    },
    "729": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "731": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "732": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "DUP1",
      "path": "4"
    },
    "733": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x12"
    },
    "735": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "DUP2",
      "path": "4"
    },
    "736": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "737": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "739": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "ADD",
      "path": "4"
    },
    "740": {
      "op": "PUSH18",
      "value": "0x5F7369676E6572735B25645D206973202573"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "DUP2",
      "path": "4"
    },
    "763": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "764": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "POP",
      "path": "4"
    },
    "765": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3685,
        3686
      ],
      "op": "DUP3",
      "path": "4"
    },
    "766": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3688,
        3696
      ],
      "op": "DUP8",
      "path": "4"
    },
    "767": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3697,
        3698
      ],
      "op": "DUP5",
      "path": "4"
    },
    "768": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3688,
        3699
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "770": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3688,
        3699
      ],
      "op": "DUP2",
      "path": "4"
    },
    "771": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3688,
        3699
      ],
      "op": "LT",
      "path": "4"
    },
    "772": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3688,
        3699
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30F"
    },
    "775": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3688,
        3699
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "776": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3688,
        3699
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30F"
    },
    "779": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3688,
        3699
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F9"
    },
    "782": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        3688,
        3699
      ],
      "op": "JUMP",
      "path": "4"
    },
    "783": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3688,
        3699
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "784": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3688,
        3699
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "786": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3688,
        3699
      ],
      "op": "MUL",
      "path": "4"
    },
    "787": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3688,
        3699
      ],
      "op": "ADD",
      "path": "4"
    },
    "788": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3688,
        3699
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "789": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3662
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x226"
    },
    "792": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        3651,
        3700
      ],
      "op": "JUMP",
      "path": "4"
    },
    "793": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3651,
        3700
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "794": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 6,
      "value": "0x365"
    },
    "797": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "799": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "800": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "DUP1",
      "path": "4"
    },
    "801": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "803": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "ADD",
      "path": "4"
    },
    "804": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "806": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "807": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "DUP1",
      "path": "4"
    },
    "808": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x13"
    },
    "810": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "DUP2",
      "path": "4"
    },
    "811": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "812": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "814": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "ADD",
      "path": "4"
    },
    "815": {
      "op": "PUSH19",
      "value": "0x5F62616C616E6365735B25645D206973202573"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "837": {
      "op": "SHL"
    },
    "838": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "DUP2",
      "path": "4"
    },
    "839": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "840": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "POP",
      "path": "4"
    },
    "841": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3749,
        3750
      ],
      "op": "DUP3",
      "path": "4"
    },
    "842": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3752,
        3761
      ],
      "op": "DUP7",
      "path": "4"
    },
    "843": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3762,
        3763
      ],
      "op": "DUP5",
      "path": "4"
    },
    "844": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3752,
        3764
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "846": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3752,
        3764
      ],
      "op": "DUP2",
      "path": "4"
    },
    "847": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3752,
        3764
      ],
      "op": "LT",
      "path": "4"
    },
    "848": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3752,
        3764
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35B"
    },
    "851": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3752,
        3764
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "852": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3752,
        3764
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35B"
    },
    "855": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3752,
        3764
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F9"
    },
    "858": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        3752,
        3764
      ],
      "op": "JUMP",
      "path": "4"
    },
    "859": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3752,
        3764
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "860": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3752,
        3764
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "862": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3752,
        3764
      ],
      "op": "MUL",
      "path": "4"
    },
    "863": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3752,
        3764
      ],
      "op": "ADD",
      "path": "4"
    },
    "864": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3752,
        3764
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "865": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3725
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC27"
    },
    "868": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        3714,
        3765
      ],
      "op": "JUMP",
      "path": "4"
    },
    "869": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3714,
        3765
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "870": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3779,
        3794
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "872": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3797,
        3936
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x43A"
    },
    "875": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3921,
        3932
      ],
      "op": "DUP9",
      "path": "4"
    },
    "876": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3933,
        3934
      ],
      "op": "DUP4",
      "path": "4"
    },
    "877": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3921,
        3935
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "879": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3921,
        3935
      ],
      "op": "DUP2",
      "path": "4"
    },
    "880": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3921,
        3935
      ],
      "op": "LT",
      "path": "4"
    },
    "881": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3921,
        3935
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x37C"
    },
    "884": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3921,
        3935
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "885": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3921,
        3935
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x37C"
    },
    "888": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3921,
        3935
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F9"
    },
    "891": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        3921,
        3935
      ],
      "op": "JUMP",
      "path": "4"
    },
    "892": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3921,
        3935
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "893": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3921,
        3935
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "895": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3921,
        3935
      ],
      "op": "MUL",
      "path": "4"
    },
    "896": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3921,
        3935
      ],
      "op": "ADD",
      "path": "4"
    },
    "897": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3921,
        3935
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "898": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3797,
        3912
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x434"
    },
    "901": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3841,
        3850
      ],
      "op": "DUP10",
      "path": "4"
    },
    "902": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3852,
        3861
      ],
      "op": "DUP9",
      "path": "4"
    },
    "903": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3862,
        3863
      ],
      "op": "DUP7",
      "path": "4"
    },
    "904": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3852,
        3864
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "906": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3852,
        3864
      ],
      "op": "DUP2",
      "path": "4"
    },
    "907": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3852,
        3864
      ],
      "op": "LT",
      "path": "4"
    },
    "908": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3852,
        3864
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x397"
    },
    "911": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3852,
        3864
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "912": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3852,
        3864
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x397"
    },
    "915": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3852,
        3864
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F9"
    },
    "918": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        3852,
        3864
      ],
      "op": "JUMP",
      "path": "4"
    },
    "919": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3852,
        3864
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "920": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3852,
        3864
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "922": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3852,
        3864
      ],
      "op": "MUL",
      "path": "4"
    },
    "923": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3852,
        3864
      ],
      "op": "ADD",
      "path": "4"
    },
    "924": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3852,
        3864
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "925": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3866,
        3872
      ],
      "op": "DUP9",
      "path": "4"
    },
    "926": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "928": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "929": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "931": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "ADD",
      "path": "4"
    },
    "932": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3D4"
    },
    "935": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "936": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "937": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "938": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "941": {
      "op": "SWAP4"
    },
    "942": {
      "op": "SWAP1"
    },
    "943": {
      "op": "SWAP4"
    },
    "944": {
      "op": "SHL"
    },
    "945": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "958": {
      "op": "NOT"
    },
    "959": {
      "op": "AND"
    },
    "960": {
      "op": "DUP4"
    },
    "961": {
      "op": "MSTORE"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "964": {
      "op": "DUP4"
    },
    "965": {
      "op": "ADD"
    },
    "966": {
      "op": "SWAP2"
    },
    "967": {
      "op": "SWAP1"
    },
    "968": {
      "op": "SWAP2"
    },
    "969": {
      "op": "MSTORE"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "972": {
      "op": "DUP3"
    },
    "973": {
      "op": "ADD"
    },
    "974": {
      "op": "MSTORE"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "977": {
      "op": "ADD"
    },
    "978": {
      "op": "SWAP1"
    },
    "979": {
      "op": "JUMP"
    },
    "980": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "981": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "983": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "DUP1",
      "path": "4"
    },
    "984": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "987": {
      "op": "NOT"
    },
    "988": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "DUP2",
      "path": "4"
    },
    "989": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "DUP5",
      "path": "4"
    },
    "990": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "SUB",
      "path": "4"
    },
    "991": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "ADD",
      "path": "4"
    },
    "992": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "DUP2",
      "path": "4"
    },
    "993": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "994": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "DUP3",
      "path": "4"
    },
    "995": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "DUP3",
      "path": "4"
    },
    "996": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "997": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3797,
        3887
      ],
      "op": "DUP1",
      "path": "4"
    },
    "998": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3797,
        3887
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "999": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3824,
        3873
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1001": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3797,
        3887
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1002": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3797,
        3887
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1003": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3797,
        3887
      ],
      "op": "ADD",
      "path": "4"
    },
    "1004": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3797,
        3887
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1005": {
      "op": "PUSH32",
      "value": "0x19457468657265756D205369676E6564204D6573736167653A0A333200000000"
    },
    "1038": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 7
    },
    "1039": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1040": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "ADD",
      "path": "2"
    },
    "1041": {
      "op": "MSTORE"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "1044": {
      "op": "DUP1"
    },
    "1045": {
      "op": "DUP6"
    },
    "1046": {
      "op": "ADD"
    },
    "1047": {
      "op": "SWAP2"
    },
    "1048": {
      "op": "SWAP1"
    },
    "1049": {
      "op": "SWAP2"
    },
    "1050": {
      "op": "MSTORE"
    },
    "1051": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1052": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1053": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1054": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1055": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "SUB",
      "path": "2"
    },
    "1056": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1057": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1058": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "ADD",
      "path": "2"
    },
    "1059": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1060": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "1063": {
      "op": "SWAP1"
    },
    "1064": {
      "op": "SWAP4"
    },
    "1065": {
      "op": "ADD"
    },
    "1066": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1067": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1068": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8211,
        8269
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1069": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8201,
        8270
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1070": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8201,
        8270
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1071": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8201,
        8270
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1072": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8201,
        8270
      ],
      "op": "ADD",
      "path": "2"
    },
    "1073": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8201,
        8270
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1074": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8201,
        8270
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1075": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        8012,
        8277
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1076": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3797,
        3912
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1077": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3797,
        3920
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1078": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3797,
        3920
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC6E"
    },
    "1081": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        3797,
        3936
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1082": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3797,
        3936
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1083": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3779,
        3936
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1084": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3779,
        3936
      ],
      "op": "POP",
      "path": "4"
    },
    "1085": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 8,
      "value": "0x46B"
    },
    "1088": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1090": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1091": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1092": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1094": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "ADD",
      "path": "4"
    },
    "1095": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1097": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1098": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1099": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xD"
    },
    "1101": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1102": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1103": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1105": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "ADD",
      "path": "4"
    },
    "1106": {
      "op": "PUSH13",
      "value": "0x6465636F646564206973202573"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "1122": {
      "op": "SHL"
    },
    "1123": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1124": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1125": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "POP",
      "path": "4"
    },
    "1126": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3979,
        3986
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1127": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3961
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC92"
    },
    "1130": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        3950,
        3987
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1131": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3950,
        3987
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1132": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4001,
        4011
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1134": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4045,
        4196
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4DA"
    },
    "1137": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4181,
        4192
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1138": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4193,
        4194
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1139": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4181,
        4195
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1141": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4181,
        4195
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1142": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4181,
        4195
      ],
      "op": "LT",
      "path": "4"
    },
    "1143": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4181,
        4195
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x482"
    },
    "1146": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4181,
        4195
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1147": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4181,
        4195
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x482"
    },
    "1150": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4181,
        4195
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F9"
    },
    "1153": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        4181,
        4195
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1154": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4181,
        4195
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1155": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4181,
        4195
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1157": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4181,
        4195
      ],
      "op": "MUL",
      "path": "4"
    },
    "1158": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4181,
        4195
      ],
      "op": "ADD",
      "path": "4"
    },
    "1159": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4181,
        4195
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1160": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4045,
        4151
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x434"
    },
    "1163": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4072,
        4081
      ],
      "op": "DUP11",
      "path": "4"
    },
    "1164": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4083,
        4092
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1165": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4093,
        4094
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1166": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4083,
        4095
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1168": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4083,
        4095
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1169": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4083,
        4095
      ],
      "op": "LT",
      "path": "4"
    },
    "1170": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4083,
        4095
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x49D"
    },
    "1173": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4083,
        4095
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1174": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4083,
        4095
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x49D"
    },
    "1177": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4083,
        4095
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F9"
    },
    "1180": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        4083,
        4095
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1181": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4083,
        4095
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1182": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4083,
        4095
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1184": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4083,
        4095
      ],
      "op": "MUL",
      "path": "4"
    },
    "1185": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4083,
        4095
      ],
      "op": "ADD",
      "path": "4"
    },
    "1186": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4083,
        4095
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1187": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4097,
        4103
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1188": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4055,
        4104
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1190": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4055,
        4104
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1191": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4055,
        4104
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1193": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4055,
        4104
      ],
      "op": "ADD",
      "path": "4"
    },
    "1194": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4055,
        4104
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3D4"
    },
    "1197": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4055,
        4104
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1198": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4055,
        4104
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1199": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4055,
        4104
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1200": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4055,
        4104
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1203": {
      "op": "SWAP4"
    },
    "1204": {
      "op": "SWAP1"
    },
    "1205": {
      "op": "SWAP4"
    },
    "1206": {
      "op": "SHL"
    },
    "1207": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1220": {
      "op": "NOT"
    },
    "1221": {
      "op": "AND"
    },
    "1222": {
      "op": "DUP4"
    },
    "1223": {
      "op": "MSTORE"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1226": {
      "op": "DUP4"
    },
    "1227": {
      "op": "ADD"
    },
    "1228": {
      "op": "SWAP2"
    },
    "1229": {
      "op": "SWAP1"
    },
    "1230": {
      "op": "SWAP2"
    },
    "1231": {
      "op": "MSTORE"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "1234": {
      "op": "DUP3"
    },
    "1235": {
      "op": "ADD"
    },
    "1236": {
      "op": "MSTORE"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "1239": {
      "op": "ADD"
    },
    "1240": {
      "op": "SWAP1"
    },
    "1241": {
      "op": "JUMP"
    },
    "1242": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4045,
        4196
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1249": {
      "op": "SHL"
    },
    "1250": {
      "op": "SUB"
    },
    "1251": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4014,
        4196
      ],
      "op": "AND",
      "path": "4"
    },
    "1252": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4014,
        4022
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1253": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4023,
        4024
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1254": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4014,
        4025
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1256": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4014,
        4025
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1257": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4014,
        4025
      ],
      "op": "LT",
      "path": "4"
    },
    "1258": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4014,
        4025
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4F5"
    },
    "1261": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4014,
        4025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1262": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4014,
        4025
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4F5"
    },
    "1265": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4014,
        4025
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F9"
    },
    "1268": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        4014,
        4025
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1269": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4014,
        4025
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1270": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4014,
        4025
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1272": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4014,
        4025
      ],
      "op": "MUL",
      "path": "4"
    },
    "1273": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4014,
        4025
      ],
      "op": "ADD",
      "path": "4"
    },
    "1274": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4014,
        4025
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1281": {
      "op": "SHL"
    },
    "1282": {
      "op": "SUB"
    },
    "1283": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4014,
        4196
      ],
      "op": "AND",
      "path": "4"
    },
    "1284": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4014,
        4196
      ],
      "op": "EQ",
      "path": "4"
    },
    "1285": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4001,
        4196
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1286": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4001,
        4196
      ],
      "op": "POP",
      "path": "4"
    },
    "1287": {
      "branch": 46,
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4216,
        4221
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1288": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4211,
        4268
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x517"
    },
    "1291": {
      "branch": 46,
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4211,
        4268
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1292": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4248,
        4253
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 9,
      "value": "0x0"
    },
    "1294": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4241,
        4253
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1295": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4241,
        4253
      ],
      "op": "POP",
      "path": "4"
    },
    "1296": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4241,
        4253
      ],
      "op": "POP",
      "path": "4"
    },
    "1297": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4241,
        4253
      ],
      "op": "POP",
      "path": "4"
    },
    "1298": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4241,
        4253
      ],
      "op": "POP",
      "path": "4"
    },
    "1299": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4241,
        4253
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x532"
    },
    "1302": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4241,
        4253
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1303": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4211,
        4268
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1304": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3485,
        4278
      ],
      "op": "POP",
      "path": "4"
    },
    "1305": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3485,
        4278
      ],
      "op": "POP",
      "path": "4"
    },
    "1306": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3480,
        3483
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 10
    },
    "1307": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3480,
        3483
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1308": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3480,
        3483
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x524"
    },
    "1311": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3480,
        3483
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1312": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3480,
        3483
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1425"
    },
    "1315": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "i",
      "offset": [
        3480,
        3483
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1316": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3480,
        3483
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1317": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3480,
        3483
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1318": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3480,
        3483
      ],
      "op": "POP",
      "path": "4"
    },
    "1319": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3480,
        3483
      ],
      "op": "POP",
      "path": "4"
    },
    "1320": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3436,
        4278
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C5"
    },
    "1323": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3436,
        4278
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1324": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3436,
        4278
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1325": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3436,
        4278
      ],
      "op": "POP",
      "path": "4"
    },
    "1326": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4294,
        4298
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 11,
      "value": "0x1"
    },
    "1328": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4287,
        4298
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1329": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        4287,
        4298
      ],
      "op": "POP",
      "path": "4"
    },
    "1330": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1331": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "1332": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1333": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "POP",
      "path": "4"
    },
    "1334": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "POP",
      "path": "4"
    },
    "1335": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "POP",
      "path": "4"
    },
    "1336": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "POP",
      "path": "4"
    },
    "1337": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        3104,
        4305
      ],
      "op": "POP",
      "path": "4"
    },
    "1338": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "o",
      "offset": [
        3104,
        4305
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1339": {
      "offset": [
        1474,
        1505
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1340": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1342": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1343": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1345": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1346": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "LT",
      "path": "4"
    },
    "1347": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x54B"
    },
    "1350": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1351": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1353": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1354": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1355": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1356": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "ADD",
      "path": "4"
    },
    "1357": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1364": {
      "op": "SHL"
    },
    "1365": {
      "op": "SUB"
    },
    "1366": {
      "offset": [
        1474,
        1505
      ],
      "op": "AND",
      "path": "4"
    },
    "1367": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "offset": [
        1474,
        1505
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1368": {
      "op": "POP"
    },
    "1369": {
      "offset": [
        1474,
        1505
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1370": {
      "fn": "BiDirectionalPaymentChannel.verify",
      "jump": "o",
      "offset": [
        1474,
        1505
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1371": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5900,
        6674
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1372": {
      "offset": [
        4964,
        5024
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x57C"
    },
    "1375": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1377": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1378": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1379": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1381": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "ADD",
      "path": "4"
    },
    "1382": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1384": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1385": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1386": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2D"
    },
    "1388": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1389": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1390": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1392": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "ADD",
      "path": "4"
    },
    "1393": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1629"
    },
    "1396": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2D"
    },
    "1398": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1399": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "1400": {
      "offset": [
        4964,
        4975
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB15"
    },
    "1403": {
      "jump": "i",
      "offset": [
        4964,
        5024
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1404": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        4964,
        5024
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1405": {
      "offset": [
        5049,
        5059
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1406": {
      "offset": [
        5042,
        5060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1408": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5042,
        5060
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1409": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5042,
        5060
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1410": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5042,
        5060
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1411": {
      "offset": [
        5042,
        5048
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1413": {
      "offset": [
        5042,
        5060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1415": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5042,
        5060
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1416": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5042,
        5060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1418": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5042,
        5060
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1419": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5042,
        5060
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1420": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5042,
        5060
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1421": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5042,
        5060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "1423": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5042,
        5060
      ],
      "op": "AND",
      "path": "4"
    },
    "1424": {
      "offset": [
        5034,
        5073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5CB"
    },
    "1427": {
      "offset": [
        5034,
        5073
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1428": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5034,
        5073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1430": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5034,
        5073
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1431": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1437": {
      "op": "SHL"
    },
    "1438": {
      "offset": [
        5034,
        5073
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1439": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5034,
        5073
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1442": {
      "offset": [
        5034,
        5073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1444": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5034,
        5073
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1445": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5034,
        5073
      ],
      "op": "ADD",
      "path": "4"
    },
    "1446": {
      "op": "MSTORE"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1451": {
      "op": "DUP3"
    },
    "1452": {
      "op": "ADD"
    },
    "1453": {
      "op": "MSTORE"
    },
    "1454": {
      "op": "PUSH8",
      "value": "0x2737BA103AB9B2B9"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1468": {
      "op": "DUP3"
    },
    "1469": {
      "op": "ADD"
    },
    "1470": {
      "op": "MSTORE"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1473": {
      "op": "ADD"
    },
    "1474": {
      "offset": [
        5034,
        5073
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1475": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5034,
        5073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1477": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5034,
        5073
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1478": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5034,
        5073
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1479": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5034,
        5073
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1480": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5034,
        5073
      ],
      "op": "SUB",
      "path": "4"
    },
    "1481": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5034,
        5073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1482": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5034,
        5073
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "1483": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5034,
        5073
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1484": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 12,
      "value": "0x5EC"
    },
    "1487": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1489": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1490": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1491": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1493": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "ADD",
      "path": "4"
    },
    "1494": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1496": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1497": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1498": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2D"
    },
    "1500": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1501": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1502": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1504": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "ADD",
      "path": "4"
    },
    "1505": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16E7"
    },
    "1508": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2D"
    },
    "1510": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1511": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "1512": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6228
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB15"
    },
    "1515": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "jump": "i",
      "offset": [
        6217,
        6277
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1516": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6217,
        6277
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1517": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6313,
        6323
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1518": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6287,
        6301
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1520": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6324
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1521": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6324
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1522": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6324
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1523": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6312
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1525": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6324
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1527": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6324
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1528": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6324
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1530": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6324
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1531": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6324
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1532": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6324
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1533": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6324
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1534": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6324
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1535": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6334,
        6358
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 13
    },
    "1536": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6334,
        6358
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1537": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6334,
        6358
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1538": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6334,
        6358
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1539": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1540": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1541": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6324
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1542": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6324
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1543": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6313,
        6323
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1544": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6324
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1545": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6324
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1546": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6287,
        6301
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1547": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1548": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6287,
        6301
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1549": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1550": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6304,
        6324
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1551": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6313,
        6323
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1552": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "GAS",
      "path": "4"
    },
    "1553": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "CALL",
      "path": "4"
    },
    "1554": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1555": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "POP",
      "path": "4"
    },
    "1556": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "POP",
      "path": "4"
    },
    "1557": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "POP",
      "path": "4"
    },
    "1558": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1559": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1560": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1562": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1563": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "EQ",
      "path": "4"
    },
    "1564": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x641"
    },
    "1567": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1568": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1570": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1571": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1572": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "POP",
      "path": "4"
    },
    "1573": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1575": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "NOT",
      "path": "4"
    },
    "1576": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3F"
    },
    "1578": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1579": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "ADD",
      "path": "4"
    },
    "1580": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "AND",
      "path": "4"
    },
    "1581": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1582": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "ADD",
      "path": "4"
    },
    "1583": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1585": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1586": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1587": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1588": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1589": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1590": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1592": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1594": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1595": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "ADD",
      "path": "4"
    },
    "1596": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1597": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x646"
    },
    "1600": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1601": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1602": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1604": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1605": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "POP",
      "path": "4"
    },
    "1606": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1607": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6385,
        6419
      ],
      "op": "POP",
      "path": "4"
    },
    "1608": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6369,
        6419
      ],
      "op": "POP",
      "path": "4"
    },
    "1609": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6369,
        6419
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1610": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6369,
        6419
      ],
      "op": "POP",
      "path": "4"
    },
    "1611": {
      "branch": 47,
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6437,
        6441
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 14
    },
    "1612": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6429,
        6466
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x68E"
    },
    "1615": {
      "branch": 47,
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6429,
        6466
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1616": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6429,
        6466
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1618": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6429,
        6466
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1619": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1625": {
      "op": "SHL"
    },
    "1626": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6429,
        6466
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1627": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6429,
        6466
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1630": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6429,
        6466
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1632": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6429,
        6466
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1633": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6429,
        6466
      ],
      "op": "ADD",
      "path": "4"
    },
    "1634": {
      "op": "MSTORE"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1639": {
      "op": "DUP3"
    },
    "1640": {
      "op": "ADD"
    },
    "1641": {
      "op": "MSTORE"
    },
    "1642": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "1665": {
      "op": "SHL"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1668": {
      "op": "DUP3"
    },
    "1669": {
      "op": "ADD"
    },
    "1670": {
      "op": "MSTORE"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1673": {
      "op": "ADD"
    },
    "1674": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6429,
        6466
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5C2"
    },
    "1677": {
      "op": "JUMP"
    },
    "1678": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6429,
        6466
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1679": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 15,
      "value": "0x6B1"
    },
    "1682": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1684": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1685": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1686": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "1688": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "ADD",
      "path": "4"
    },
    "1689": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1691": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1692": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1693": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x43"
    },
    "1695": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1696": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1697": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1699": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "ADD",
      "path": "4"
    },
    "1700": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1714"
    },
    "1703": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x43"
    },
    "1705": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1706": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "1707": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6584,
        6594
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1708": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6608,
        6614
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1709": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6487
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCD7"
    },
    "1712": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "jump": "i",
      "offset": [
        6476,
        6624
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1713": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6476,
        6624
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1714": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6639,
        6667
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 16,
      "value": "0x40"
    },
    "1716": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6639,
        6667
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1717": {
      "op": "DUP3"
    },
    "1718": {
      "op": "DUP2"
    },
    "1719": {
      "op": "MSTORE"
    },
    "1720": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6648,
        6658
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1721": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6648,
        6658
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1722": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6639,
        6667
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
    },
    "1755": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6639,
        6667
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1758": {
      "op": "ADD"
    },
    "1759": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6639,
        6667
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1761": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6639,
        6667
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1762": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6639,
        6667
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1763": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6639,
        6667
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1764": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6639,
        6667
      ],
      "op": "SUB",
      "path": "4"
    },
    "1765": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6639,
        6667
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1766": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        6639,
        6667
      ],
      "op": "LOG2",
      "path": "4"
    },
    "1767": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5936,
        6674
      ],
      "op": "POP",
      "path": "4"
    },
    "1768": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5936,
        6674
      ],
      "op": "POP",
      "path": "4"
    },
    "1769": {
      "offset": [
        5094,
        5154
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x709"
    },
    "1772": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1774": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1775": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1776": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1778": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "ADD",
      "path": "4"
    },
    "1779": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1781": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1782": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1783": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2D"
    },
    "1785": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1786": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1787": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1789": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "ADD",
      "path": "4"
    },
    "1790": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1757"
    },
    "1793": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2D"
    },
    "1795": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1796": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "1797": {
      "offset": [
        5094,
        5105
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB15"
    },
    "1800": {
      "jump": "i",
      "offset": [
        5094,
        5154
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1801": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "offset": [
        5094,
        5154
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1802": {
      "fn": "BiDirectionalPaymentChannel.withdraw",
      "jump": "o",
      "offset": [
        5900,
        6674
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1803": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5167,
        5894
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1804": {
      "offset": [
        4964,
        5024
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x72C"
    },
    "1807": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1809": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1810": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1811": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1813": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "ADD",
      "path": "4"
    },
    "1814": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1816": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1817": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1818": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2D"
    },
    "1820": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1821": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1822": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1824": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "ADD",
      "path": "4"
    },
    "1825": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1629"
    },
    "1828": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2D"
    },
    "1830": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1831": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "1832": {
      "offset": [
        4964,
        4975
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB15"
    },
    "1835": {
      "jump": "i",
      "offset": [
        4964,
        5024
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1836": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4964,
        5024
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1837": {
      "offset": [
        5049,
        5059
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1838": {
      "offset": [
        5042,
        5060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1840": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5042,
        5060
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1841": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5042,
        5060
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1842": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5042,
        5060
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1843": {
      "offset": [
        5042,
        5048
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1845": {
      "offset": [
        5042,
        5060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1847": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5042,
        5060
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1848": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5042,
        5060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1850": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5042,
        5060
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1851": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5042,
        5060
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1852": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5042,
        5060
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1853": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5042,
        5060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "1855": {
      "branch": 48,
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5042,
        5060
      ],
      "op": "AND",
      "path": "4"
    },
    "1856": {
      "offset": [
        5034,
        5073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x776"
    },
    "1859": {
      "branch": 48,
      "offset": [
        5034,
        5073
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1860": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5034,
        5073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1862": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5034,
        5073
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1863": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1869": {
      "op": "SHL"
    },
    "1870": {
      "offset": [
        5034,
        5073
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1871": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5034,
        5073
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1874": {
      "offset": [
        5034,
        5073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1876": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5034,
        5073
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1877": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5034,
        5073
      ],
      "op": "ADD",
      "path": "4"
    },
    "1878": {
      "op": "MSTORE"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1883": {
      "op": "DUP3"
    },
    "1884": {
      "op": "ADD"
    },
    "1885": {
      "op": "MSTORE"
    },
    "1886": {
      "op": "PUSH8",
      "value": "0x2737BA103AB9B2B9"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "1897": {
      "op": "SHL"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1900": {
      "op": "DUP3"
    },
    "1901": {
      "op": "ADD"
    },
    "1902": {
      "op": "MSTORE"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1905": {
      "op": "ADD"
    },
    "1906": {
      "offset": [
        5034,
        5073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5C2"
    },
    "1909": {
      "op": "JUMP"
    },
    "1910": {
      "offset": [
        5034,
        5073
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1911": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5350,
        5361
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1912": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5363,
        5372
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1913": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5374,
        5380
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1914": {
      "offset": [
        4450,
        4517
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x79A"
    },
    "1917": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1919": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1920": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1921": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1923": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "ADD",
      "path": "4"
    },
    "1924": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1926": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1927": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1928": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x34"
    },
    "1930": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1931": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1932": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1934": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "ADD",
      "path": "4"
    },
    "1935": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17B8"
    },
    "1938": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x34"
    },
    "1940": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1941": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "1942": {
      "offset": [
        4450,
        4461
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB15"
    },
    "1945": {
      "jump": "i",
      "offset": [
        4450,
        4517
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1946": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4450,
        4517
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1947": {
      "offset": [
        4573,
        4598
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7A2"
    },
    "1950": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4573,
        4598
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1068"
    },
    "1953": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "jump": "i",
      "offset": [
        4573,
        4598
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1954": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4573,
        4598
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1955": {
      "offset": [
        4613,
        4622
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1957": {
      "offset": [
        4608,
        4697
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1958": {
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1960": {
      "offset": [
        4628,
        4629
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1961": {
      "offset": [
        4628,
        4644
      ],
      "op": "LT",
      "path": "4"
    },
    "1962": {
      "offset": [
        4608,
        4697
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1963": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4608,
        4697
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x803"
    },
    "1966": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4608,
        4697
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1967": {
      "offset": [
        4678,
        4683
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1969": {
      "offset": [
        4684,
        4685
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1970": {
      "offset": [
        4678,
        4686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1972": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4678,
        4686
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1973": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4678,
        4686
      ],
      "op": "LT",
      "path": "4"
    },
    "1974": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4678,
        4686
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C1"
    },
    "1977": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4678,
        4686
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1978": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4678,
        4686
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C1"
    },
    "1981": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4678,
        4686
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F9"
    },
    "1984": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "jump": "i",
      "offset": [
        4678,
        4686
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1985": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4678,
        4686
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1986": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4678,
        4686
      ],
      "op": "ADD",
      "path": "4"
    },
    "1987": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4678,
        4686
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1994": {
      "op": "SHL"
    },
    "1995": {
      "op": "SUB"
    },
    "1996": {
      "offset": [
        4678,
        4686
      ],
      "op": "AND",
      "path": "4"
    },
    "1997": {
      "offset": [
        4665,
        4672
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1998": {
      "offset": [
        4673,
        4674
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1999": {
      "offset": [
        4665,
        4675
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2001": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4665,
        4675
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2002": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4665,
        4675
      ],
      "op": "LT",
      "path": "4"
    },
    "2003": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4665,
        4675
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7DE"
    },
    "2006": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4665,
        4675
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2007": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4665,
        4675
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7DE"
    },
    "2010": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4665,
        4675
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F9"
    },
    "2013": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "jump": "i",
      "offset": [
        4665,
        4675
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2014": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4665,
        4675
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2021": {
      "op": "SHL"
    },
    "2022": {
      "op": "SUB"
    },
    "2023": {
      "offset": [
        4665,
        4686
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2024": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4665,
        4686
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2025": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4665,
        4686
      ],
      "op": "AND",
      "path": "4"
    },
    "2026": {
      "offset": [
        4665,
        4675
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2028": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4665,
        4675
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2029": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4665,
        4675
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2030": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4665,
        4675
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2031": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4665,
        4675
      ],
      "op": "MUL",
      "path": "4"
    },
    "2032": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4665,
        4675
      ],
      "op": "ADD",
      "path": "4"
    },
    "2033": {
      "offset": [
        4665,
        4686
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2034": {
      "offset": [
        4646,
        4649
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2035": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4646,
        4649
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7FB"
    },
    "2038": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4646,
        4649
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2039": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4646,
        4649
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1425"
    },
    "2042": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "jump": "i",
      "offset": [
        4646,
        4649
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2043": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4646,
        4649
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2044": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4646,
        4649
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2045": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4646,
        4649
      ],
      "op": "POP",
      "path": "4"
    },
    "2046": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4646,
        4649
      ],
      "op": "POP",
      "path": "4"
    },
    "2047": {
      "offset": [
        4608,
        4697
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7A5"
    },
    "2050": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4608,
        4697
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2051": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4608,
        4697
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2052": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4608,
        4697
      ],
      "op": "POP",
      "path": "4"
    },
    "2053": {
      "offset": [
        4728,
        4790
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x811"
    },
    "2056": {
      "offset": [
        4735,
        4746
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2057": {
      "offset": [
        4756,
        4760
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "2058": {
      "offset": [
        4763,
        4770
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2059": {
      "offset": [
        4772,
        4781
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2060": {
      "offset": [
        4783,
        4789
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2061": {
      "offset": [
        4728,
        4734
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x272"
    },
    "2064": {
      "jump": "i",
      "offset": [
        4728,
        4790
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2065": {
      "branch": 49,
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4728,
        4790
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2066": {
      "offset": [
        4707,
        4833
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x851"
    },
    "2069": {
      "branch": 49,
      "offset": [
        4707,
        4833
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2070": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4707,
        4833
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2072": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4707,
        4833
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2073": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2079": {
      "op": "SHL"
    },
    "2080": {
      "offset": [
        4707,
        4833
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2081": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4707,
        4833
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2084": {
      "offset": [
        4707,
        4833
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2086": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4707,
        4833
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2087": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4707,
        4833
      ],
      "op": "ADD",
      "path": "4"
    },
    "2088": {
      "op": "MSTORE"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2093": {
      "op": "DUP3"
    },
    "2094": {
      "op": "ADD"
    },
    "2095": {
      "op": "MSTORE"
    },
    "2096": {
      "op": "PUSH17",
      "value": "0x496E76616C6964207369676E6174757265"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2116": {
      "op": "SHL"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2119": {
      "op": "DUP3"
    },
    "2120": {
      "op": "ADD"
    },
    "2121": {
      "op": "MSTORE"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2124": {
      "op": "ADD"
    },
    "2125": {
      "offset": [
        4707,
        4833
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5C2"
    },
    "2128": {
      "op": "JUMP"
    },
    "2129": {
      "offset": [
        4707,
        4833
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2130": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5404,
        5413
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2131": {
      "offset": [
        1761,
        1826
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x873"
    },
    "2134": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2136": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2137": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2138": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2140": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "ADD",
      "path": "4"
    },
    "2141": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2143": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2144": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2145": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x32"
    },
    "2147": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2148": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2149": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2151": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "ADD",
      "path": "4"
    },
    "2152": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15F7"
    },
    "2155": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x32"
    },
    "2157": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2158": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "2159": {
      "offset": [
        1761,
        1772
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB15"
    },
    "2162": {
      "jump": "i",
      "offset": [
        1761,
        1826
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2163": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1761,
        1826
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2164": {
      "offset": [
        1836,
        2019
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x89E"
    },
    "2167": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2169": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2170": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2171": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2173": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "ADD",
      "path": "4"
    },
    "2174": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2176": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2177": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2178": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3B"
    },
    "2180": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2181": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2182": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2184": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "ADD",
      "path": "4"
    },
    "2185": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x154E"
    },
    "2188": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3B"
    },
    "2190": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2191": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "2192": {
      "offset": [
        1971,
        1983
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2193": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1971,
        1983
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2194": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1971,
        1983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2196": {
      "offset": [
        1997,
        2009
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2197": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1997,
        2009
      ],
      "op": "ADD",
      "path": "4"
    },
    "2198": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1997,
        2009
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2199": {
      "offset": [
        1936,
        1957
      ],
      "op": "SELFBALANCE",
      "path": "4"
    },
    "2200": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1936,
        1957
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2201": {
      "offset": [
        1971,
        1983
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2202": {
      "offset": [
        1836,
        1847
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB5B"
    },
    "2205": {
      "jump": "i",
      "offset": [
        1836,
        2019
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2206": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        1836,
        2019
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2207": {
      "offset": [
        2092,
        2104
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2209": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2092,
        2104
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2210": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2092,
        2104
      ],
      "op": "ADD",
      "path": "4"
    },
    "2211": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2092,
        2104
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2212": {
      "offset": [
        2075,
        2087
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2213": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2075,
        2087
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2214": {
      "offset": [
        2075,
        2105
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8AE"
    },
    "2217": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2075,
        2105
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2218": {
      "offset": [
        2075,
        2091
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBAA"
    },
    "2221": {
      "jump": "i",
      "offset": [
        2075,
        2105
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2222": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2075,
        2105
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2223": {
      "offset": [
        2050,
        2071
      ],
      "op": "SELFBALANCE",
      "path": "4"
    },
    "2224": {
      "offset": [
        2050,
        2105
      ],
      "op": "LT",
      "path": "4"
    },
    "2225": {
      "branch": 50,
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2050,
        2105
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2226": {
      "offset": [
        2029,
        2191
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x923"
    },
    "2229": {
      "branch": 50,
      "offset": [
        2029,
        2191
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2230": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2029,
        2191
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2232": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2029,
        2191
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2233": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2239": {
      "op": "SHL"
    },
    "2240": {
      "offset": [
        2029,
        2191
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2241": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2029,
        2191
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2244": {
      "offset": [
        2029,
        2191
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2246": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2029,
        2191
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2247": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2029,
        2191
      ],
      "op": "ADD",
      "path": "4"
    },
    "2248": {
      "op": "MSTORE"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2253": {
      "op": "DUP3"
    },
    "2254": {
      "op": "ADD"
    },
    "2255": {
      "op": "MSTORE"
    },
    "2256": {
      "op": "PUSH32",
      "value": "0x62616C616E6365206F6620636F6E7472616374206D757374206265203E3D2074"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2291": {
      "op": "DUP3"
    },
    "2292": {
      "op": "ADD"
    },
    "2293": {
      "op": "MSTORE"
    },
    "2294": {
      "op": "PUSH32",
      "value": "0x6F2074686520746F74616C2062616C616E6365206F6620757365727300000000"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2329": {
      "op": "DUP3"
    },
    "2330": {
      "op": "ADD"
    },
    "2331": {
      "op": "MSTORE"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2334": {
      "op": "ADD"
    },
    "2335": {
      "offset": [
        2029,
        2191
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5C2"
    },
    "2338": {
      "op": "JUMP"
    },
    "2339": {
      "offset": [
        2029,
        2191
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2340": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 17,
      "value": "0x944"
    },
    "2343": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2345": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2346": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2347": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2349": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "ADD",
      "path": "4"
    },
    "2350": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2352": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2353": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2354": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2B"
    },
    "2356": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2357": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2358": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2360": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "ADD",
      "path": "4"
    },
    "2361": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16BC"
    },
    "2364": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2B"
    },
    "2366": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2367": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "2368": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5440
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB15"
    },
    "2371": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "jump": "i",
      "offset": [
        5429,
        5487
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2372": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5429,
        5487
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2373": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5523,
        5532
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 18,
      "value": "0x5"
    },
    "2375": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5523,
        5532
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2376": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5505,
        5520
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "2377": {
      "branch": 51,
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5505,
        5532
      ],
      "op": "LT",
      "path": "4"
    },
    "2378": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5497,
        5561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x995"
    },
    "2381": {
      "branch": 51,
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5497,
        5561
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2382": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5497,
        5561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2384": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5497,
        5561
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2385": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2391": {
      "op": "SHL"
    },
    "2392": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5497,
        5561
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2393": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5497,
        5561
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2396": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5497,
        5561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2398": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5497,
        5561
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2399": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5497,
        5561
      ],
      "op": "ADD",
      "path": "4"
    },
    "2400": {
      "op": "MSTORE"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2405": {
      "op": "DUP3"
    },
    "2406": {
      "op": "ADD"
    },
    "2407": {
      "op": "MSTORE"
    },
    "2408": {
      "op": "PUSH32",
      "value": "0x45787069726564206368616C6C656E676520706572696F640000000000000000"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2443": {
      "op": "DUP3"
    },
    "2444": {
      "op": "ADD"
    },
    "2445": {
      "op": "MSTORE"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2448": {
      "op": "ADD"
    },
    "2449": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5497,
        5561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5C2"
    },
    "2452": {
      "op": "JUMP"
    },
    "2453": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5497,
        5561
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2454": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5588,
        5593
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 19,
      "value": "0x6"
    },
    "2456": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5588,
        5593
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2457": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5579,
        5585
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2458": {
      "branch": 52,
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5579,
        5593
      ],
      "op": "GT",
      "path": "4"
    },
    "2459": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5571,
        5642
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9FB"
    },
    "2462": {
      "branch": 52,
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5571,
        5642
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2463": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5571,
        5642
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2465": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5571,
        5642
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2466": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2472": {
      "op": "SHL"
    },
    "2473": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5571,
        5642
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2474": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5571,
        5642
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2477": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5571,
        5642
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2479": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5571,
        5642
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2480": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5571,
        5642
      ],
      "op": "ADD",
      "path": "4"
    },
    "2481": {
      "op": "MSTORE"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2486": {
      "op": "DUP3"
    },
    "2487": {
      "op": "ADD"
    },
    "2488": {
      "op": "MSTORE"
    },
    "2489": {
      "op": "PUSH32",
      "value": "0x4E6F6E6365206D7573742062652067726561746572207468616E207468652063"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2524": {
      "op": "DUP3"
    },
    "2525": {
      "op": "ADD"
    },
    "2526": {
      "op": "MSTORE"
    },
    "2527": {
      "op": "PUSH12",
      "value": "0x757272656E74206E6F6E6365"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2542": {
      "op": "SHL"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2545": {
      "op": "DUP3"
    },
    "2546": {
      "op": "ADD"
    },
    "2547": {
      "op": "MSTORE"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2550": {
      "op": "ADD"
    },
    "2551": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5571,
        5642
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5C2"
    },
    "2554": {
      "op": "JUMP"
    },
    "2555": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5571,
        5642
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2556": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5658,
        5667
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2558": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5653,
        5758
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2559": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5677,
        5693
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2561": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5673,
        5674
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2562": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5673,
        5693
      ],
      "op": "LT",
      "path": "4"
    },
    "2563": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5653,
        5758
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2564": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5653,
        5758
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA62"
    },
    "2567": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5653,
        5758
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2568": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5735,
        5744
      ],
      "op": "DUP9",
      "path": "4",
      "statement": 20
    },
    "2569": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5745,
        5746
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2570": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5735,
        5747
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2572": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5735,
        5747
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2573": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5735,
        5747
      ],
      "op": "LT",
      "path": "4"
    },
    "2574": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5735,
        5747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "2577": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5735,
        5747
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2578": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5735,
        5747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA19"
    },
    "2581": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5735,
        5747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F9"
    },
    "2584": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "jump": "i",
      "offset": [
        5735,
        5747
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2585": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5735,
        5747
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2586": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5735,
        5747
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2588": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5735,
        5747
      ],
      "op": "MUL",
      "path": "4"
    },
    "2589": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5735,
        5747
      ],
      "op": "ADD",
      "path": "4"
    },
    "2590": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5735,
        5747
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2591": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5714,
        5722
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2593": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5714,
        5732
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2595": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5723,
        5728
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2596": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5729,
        5730
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2597": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5723,
        5731
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2599": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5723,
        5731
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2600": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5723,
        5731
      ],
      "op": "LT",
      "path": "4"
    },
    "2601": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5723,
        5731
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA34"
    },
    "2604": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5723,
        5731
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2605": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5723,
        5731
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA34"
    },
    "2608": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5723,
        5731
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F9"
    },
    "2611": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "jump": "i",
      "offset": [
        5723,
        5731
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2612": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5723,
        5731
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2613": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5723,
        5731
      ],
      "op": "ADD",
      "path": "4"
    },
    "2614": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5723,
        5731
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2621": {
      "op": "SHL"
    },
    "2622": {
      "op": "SUB"
    },
    "2623": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5723,
        5731
      ],
      "op": "AND",
      "path": "4"
    },
    "2624": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5714,
        5732
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2625": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5714,
        5732
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2626": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5714,
        5732
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2628": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5714,
        5732
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2629": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5714,
        5732
      ],
      "op": "ADD",
      "path": "4"
    },
    "2630": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5714,
        5732
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2631": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5714,
        5732
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2632": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5714,
        5732
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2633": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5714,
        5732
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2634": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5714,
        5732
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2636": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5714,
        5732
      ],
      "op": "ADD",
      "path": "4"
    },
    "2637": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5723,
        5731
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2639": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5714,
        5732
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2640": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5714,
        5747
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2641": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5695,
        5698
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 21
    },
    "2642": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5695,
        5698
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA5A"
    },
    "2645": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5695,
        5698
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2646": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5695,
        5698
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1425"
    },
    "2649": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "jump": "i",
      "offset": [
        5695,
        5698
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2650": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5695,
        5698
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2651": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5695,
        5698
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2652": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5695,
        5698
      ],
      "op": "POP",
      "path": "4"
    },
    "2653": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5695,
        5698
      ],
      "op": "POP",
      "path": "4"
    },
    "2654": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5653,
        5758
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9FE"
    },
    "2657": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5653,
        5758
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2658": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5653,
        5758
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2659": {
      "op": "POP"
    },
    "2660": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5767,
        5772
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 22,
      "value": "0x6"
    },
    "2662": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5767,
        5781
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2663": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5767,
        5781
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2664": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5767,
        5781
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2665": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5823,
        5838
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 23,
      "value": "0x4"
    },
    "2667": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5823,
        5838
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2668": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5803,
        5839
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA76"
    },
    "2671": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5803,
        5839
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2672": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5803,
        5818
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "2673": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5803,
        5818
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2674": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5803,
        5822
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBAA"
    },
    "2677": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "jump": "i",
      "offset": [
        5803,
        5839
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2678": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5803,
        5839
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2679": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5791,
        5800
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "2681": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5791,
        5839
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2682": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5881,
        5886
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 24,
      "value": "0x6"
    },
    "2684": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5881,
        5886
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2685": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5855,
        5887
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2687": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5855,
        5887
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2688": {
      "op": "SWAP1"
    },
    "2689": {
      "op": "DUP2"
    },
    "2690": {
      "op": "MSTORE"
    },
    "2691": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5869,
        5879
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2692": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5869,
        5879
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2693": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5855,
        5887
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x5050C6E2A6FC173775CE4852F893C9E5AAEFF00101F3AEF75E0EC263CF083CA9"
    },
    "2726": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5855,
        5887
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2729": {
      "op": "ADD"
    },
    "2730": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5855,
        5887
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2732": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5855,
        5887
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2733": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5855,
        5887
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2734": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5855,
        5887
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2735": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5855,
        5887
      ],
      "op": "SUB",
      "path": "4"
    },
    "2736": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5855,
        5887
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2737": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5855,
        5887
      ],
      "op": "LOG2",
      "path": "4"
    },
    "2738": {
      "offset": [
        2212,
        2277
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAD2"
    },
    "2741": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2743": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2744": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2745": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2747": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "ADD",
      "path": "4"
    },
    "2748": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2750": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2751": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2752": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x32"
    },
    "2754": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2755": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2756": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2758": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "ADD",
      "path": "4"
    },
    "2759": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1589"
    },
    "2762": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x32"
    },
    "2764": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2765": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "2766": {
      "offset": [
        2212,
        2223
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB15"
    },
    "2769": {
      "jump": "i",
      "offset": [
        2212,
        2277
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2770": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        2212,
        2277
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2771": {
      "offset": [
        4843,
        4844
      ],
      "op": "POP",
      "path": "4"
    },
    "2772": {
      "offset": [
        4854,
        4921
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAF4"
    },
    "2775": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2777": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2778": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2779": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2781": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "ADD",
      "path": "4"
    },
    "2782": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2784": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2785": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2786": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x34"
    },
    "2788": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2789": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2790": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2792": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "ADD",
      "path": "4"
    },
    "2793": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1784"
    },
    "2796": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x34"
    },
    "2798": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2799": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "2800": {
      "offset": [
        4854,
        4865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB15"
    },
    "2803": {
      "jump": "i",
      "offset": [
        4854,
        4921
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2804": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        4854,
        4921
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2805": {
      "offset": [
        4440,
        4928
      ],
      "op": "POP",
      "path": "4"
    },
    "2806": {
      "offset": [
        5083,
        5084
      ],
      "op": "POP",
      "path": "4"
    },
    "2807": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5083,
        5084
      ],
      "op": "POP",
      "path": "4"
    },
    "2808": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5083,
        5084
      ],
      "op": "POP",
      "path": "4"
    },
    "2809": {
      "offset": [
        5094,
        5154
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x26D"
    },
    "2812": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2814": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2815": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2816": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2818": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "ADD",
      "path": "4"
    },
    "2819": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2821": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2822": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2823": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2D"
    },
    "2825": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2826": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2827": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2829": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "ADD",
      "path": "4"
    },
    "2830": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1757"
    },
    "2833": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2D"
    },
    "2835": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2836": {
      "fn": "BiDirectionalPaymentChannel.challengeExit",
      "offset": [
        5094,
        5154
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "2837": {
      "fn": "console.log",
      "offset": [
        5053,
        5165
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2838": {
      "fn": "console.log",
      "offset": [
        5102,
        5161
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 25,
      "value": "0xB58"
    },
    "2841": {
      "fn": "console.log",
      "offset": [
        5157,
        5159
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2842": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2844": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2845": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "2847": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "ADD",
      "path": "10"
    },
    "2848": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB29"
    },
    "2851": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2852": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2853": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x143E"
    },
    "2856": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        5118,
        5160
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2857": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2858": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2860": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2861": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2864": {
      "op": "NOT"
    },
    "2865": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2866": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2867": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SUB",
      "path": "10"
    },
    "2868": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "ADD",
      "path": "10"
    },
    "2869": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2870": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2871": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2872": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2873": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2874": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2876": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2877": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "ADD",
      "path": "10"
    },
    "2878": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2879": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2886": {
      "op": "SHL"
    },
    "2887": {
      "op": "SUB"
    },
    "2888": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "AND",
      "path": "10"
    },
    "2889": {
      "op": "PUSH4",
      "value": "0x104C13EB"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2896": {
      "op": "SHL"
    },
    "2897": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "OR",
      "path": "10"
    },
    "2898": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2899": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2900": {
      "fn": "console.log",
      "offset": [
        5102,
        5117
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBBD"
    },
    "2903": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        5102,
        5161
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2904": {
      "fn": "console.log",
      "offset": [
        5102,
        5161
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2905": {
      "fn": "console.log",
      "offset": [
        5053,
        5165
      ],
      "op": "POP",
      "path": "10"
    },
    "2906": {
      "fn": "console.log",
      "jump": "o",
      "offset": [
        5053,
        5165
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2907": {
      "fn": "console.log",
      "offset": [
        28174,
        28340
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2908": {
      "fn": "console.log",
      "offset": [
        28250,
        28336
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 26,
      "value": "0xBA4"
    },
    "2911": {
      "fn": "console.log",
      "offset": [
        28320,
        28322
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2912": {
      "fn": "console.log",
      "offset": [
        28324,
        28326
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2913": {
      "fn": "console.log",
      "offset": [
        28328,
        28330
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2914": {
      "fn": "console.log",
      "offset": [
        28332,
        28334
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2915": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2917": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2918": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "2920": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "ADD",
      "path": "10"
    },
    "2921": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB75"
    },
    "2924": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2925": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2926": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2927": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2928": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2929": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1451"
    },
    "2932": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        28266,
        28335
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2933": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2934": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2936": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2937": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2940": {
      "op": "NOT"
    },
    "2941": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2942": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2943": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "SUB",
      "path": "10"
    },
    "2944": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "ADD",
      "path": "10"
    },
    "2945": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2946": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2947": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2948": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2949": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2950": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2952": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2953": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "ADD",
      "path": "10"
    },
    "2954": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2955": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2962": {
      "op": "SHL"
    },
    "2963": {
      "op": "SUB"
    },
    "2964": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "AND",
      "path": "10"
    },
    "2965": {
      "op": "PUSH4",
      "value": "0x4772B33"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2972": {
      "op": "SHL"
    },
    "2973": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "OR",
      "path": "10"
    },
    "2974": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2975": {
      "fn": "console.log",
      "offset": [
        28266,
        28335
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2976": {
      "fn": "console.log",
      "offset": [
        28250,
        28265
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBBD"
    },
    "2979": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        28250,
        28336
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2980": {
      "fn": "console.log",
      "offset": [
        28250,
        28336
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2981": {
      "fn": "console.log",
      "offset": [
        28174,
        28340
      ],
      "op": "POP",
      "path": "10"
    },
    "2982": {
      "fn": "console.log",
      "offset": [
        28174,
        28340
      ],
      "op": "POP",
      "path": "10"
    },
    "2983": {
      "fn": "console.log",
      "offset": [
        28174,
        28340
      ],
      "op": "POP",
      "path": "10"
    },
    "2984": {
      "fn": "console.log",
      "offset": [
        28174,
        28340
      ],
      "op": "POP",
      "path": "10"
    },
    "2985": {
      "fn": "console.log",
      "jump": "o",
      "offset": [
        28174,
        28340
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2986": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2851
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2987": {
      "fn": "SafeMath.add",
      "offset": [
        2813,
        2820
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2989": {
      "fn": "SafeMath.add",
      "offset": [
        2839,
        2844
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 27,
      "value": "0xBB6"
    },
    "2992": {
      "fn": "SafeMath.add",
      "offset": [
        2843,
        2844
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2993": {
      "fn": "SafeMath.add",
      "offset": [
        2839,
        2840
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2994": {
      "fn": "SafeMath.add",
      "offset": [
        2839,
        2844
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1480"
    },
    "2997": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2839,
        2844
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2998": {
      "fn": "SafeMath.add",
      "offset": [
        2839,
        2844
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2999": {
      "fn": "SafeMath.add",
      "offset": [
        2832,
        2844
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3000": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2851
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3001": {
      "op": "POP"
    },
    "3002": {
      "op": "POP"
    },
    "3003": {
      "op": "POP"
    },
    "3004": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        2755,
        2851
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3005": {
      "fn": "console._sendLogPayload",
      "offset": [
        175,
        463
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3006": {
      "fn": "console._sendLogPayload",
      "offset": [
        263,
        277
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3007": {
      "fn": "console._sendLogPayload",
      "offset": [
        263,
        277
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3008": {
      "offset": [
        128,
        170
      ],
      "op": "PUSH11",
      "path": "10",
      "value": "0x636F6E736F6C652E6C6F67"
    },
    "3020": {
      "fn": "console._sendLogPayload",
      "offset": [
        372,
        374
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3022": {
      "fn": "console._sendLogPayload",
      "offset": [
        359,
        375
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3023": {
      "fn": "console._sendLogPayload",
      "offset": [
        359,
        375
      ],
      "op": "ADD",
      "path": "10"
    },
    "3024": {
      "fn": "console._sendLogPayload",
      "offset": [
        239,
        260
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3026": {
      "fn": "console._sendLogPayload",
      "offset": [
        239,
        260
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3027": {
      "fn": "console._sendLogPayload",
      "offset": [
        263,
        277
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3028": {
      "fn": "console._sendLogPayload",
      "offset": [
        359,
        375
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3029": {
      "offset": [
        128,
        170
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3030": {
      "fn": "console._sendLogPayload",
      "offset": [
        399,
        404
      ],
      "op": "GAS",
      "path": "10"
    },
    "3031": {
      "fn": "console._sendLogPayload",
      "offset": [
        388,
        456
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "3032": {
      "fn": "console._sendLogPayload",
      "offset": [
        379,
        456
      ],
      "op": "POP",
      "path": "10"
    },
    "3033": {
      "fn": "console._sendLogPayload",
      "offset": [
        379,
        456
      ],
      "op": "POP",
      "path": "10"
    },
    "3034": {
      "fn": "console._sendLogPayload",
      "offset": [
        334,
        460
      ],
      "op": "POP",
      "path": "10"
    },
    "3035": {
      "fn": "console._sendLogPayload",
      "offset": [
        334,
        460
      ],
      "op": "POP",
      "path": "10"
    },
    "3036": {
      "fn": "console._sendLogPayload",
      "offset": [
        175,
        463
      ],
      "op": "POP",
      "path": "10"
    },
    "3037": {
      "fn": "console._sendLogPayload",
      "jump": "o",
      "offset": [
        175,
        463
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3038": {
      "fn": "console.log",
      "offset": [
        5887,
        6017
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3039": {
      "fn": "console.log",
      "offset": [
        5945,
        6013
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 28,
      "value": "0xC23"
    },
    "3042": {
      "fn": "console.log",
      "offset": [
        6005,
        6007
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3043": {
      "fn": "console.log",
      "offset": [
        6009,
        6011
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3044": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3046": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3047": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "3049": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "ADD",
      "path": "10"
    },
    "3050": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBF4"
    },
    "3053": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3054": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3055": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3056": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1498"
    },
    "3059": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        5961,
        6012
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3060": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3061": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3063": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3064": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3067": {
      "op": "NOT"
    },
    "3068": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3069": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3070": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SUB",
      "path": "10"
    },
    "3071": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "ADD",
      "path": "10"
    },
    "3072": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3073": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3074": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3075": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3076": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3077": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3079": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3080": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "ADD",
      "path": "10"
    },
    "3081": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3082": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3089": {
      "op": "SHL"
    },
    "3090": {
      "op": "SUB"
    },
    "3091": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "AND",
      "path": "10"
    },
    "3092": {
      "op": "PUSH4",
      "value": "0x9710A9D"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "3099": {
      "op": "SHL"
    },
    "3100": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "OR",
      "path": "10"
    },
    "3101": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3102": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3103": {
      "fn": "console.log",
      "offset": [
        5945,
        5960
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBBD"
    },
    "3106": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        5945,
        6013
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3107": {
      "fn": "console.log",
      "offset": [
        5945,
        6013
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3108": {
      "fn": "console.log",
      "offset": [
        5887,
        6017
      ],
      "op": "POP",
      "path": "10"
    },
    "3109": {
      "fn": "console.log",
      "offset": [
        5887,
        6017
      ],
      "op": "POP",
      "path": "10"
    },
    "3110": {
      "fn": "console.log",
      "jump": "o",
      "offset": [
        5887,
        6017
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3111": {
      "fn": "console.log",
      "offset": [
        9846,
        9994
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3112": {
      "fn": "console.log",
      "offset": [
        9913,
        9990
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 29,
      "value": "0x26D"
    },
    "3115": {
      "fn": "console.log",
      "offset": [
        9978,
        9980
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3116": {
      "fn": "console.log",
      "offset": [
        9982,
        9984
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3117": {
      "fn": "console.log",
      "offset": [
        9986,
        9988
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3118": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3120": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3121": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "3123": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "ADD",
      "path": "10"
    },
    "3124": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC3F"
    },
    "3127": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3128": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3129": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3130": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3131": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14BA"
    },
    "3134": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        9929,
        9989
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3135": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3136": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3138": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3139": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3142": {
      "op": "NOT"
    },
    "3143": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3144": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3145": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "SUB",
      "path": "10"
    },
    "3146": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "ADD",
      "path": "10"
    },
    "3147": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3148": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3149": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3150": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3151": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3152": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3154": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3155": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "ADD",
      "path": "10"
    },
    "3156": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3157": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3164": {
      "op": "SHL"
    },
    "3165": {
      "op": "SUB"
    },
    "3166": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "AND",
      "path": "10"
    },
    "3167": {
      "op": "PUSH4",
      "value": "0x969CDD03"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3174": {
      "op": "SHL"
    },
    "3175": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "OR",
      "path": "10"
    },
    "3176": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3177": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3178": {
      "fn": "console.log",
      "offset": [
        9913,
        9928
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBBD"
    },
    "3181": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        9913,
        9990
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3182": {
      "fn": "ECDSA.recover",
      "offset": [
        4308,
        4535
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3183": {
      "fn": "ECDSA.recover",
      "offset": [
        4386,
        4393
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3185": {
      "fn": "ECDSA.recover",
      "offset": [
        4406,
        4423
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3186": {
      "fn": "ECDSA.recover",
      "offset": [
        4425,
        4443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3188": {
      "fn": "ECDSA.recover",
      "offset": [
        4447,
        4474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC7D"
    },
    "3191": {
      "fn": "ECDSA.recover",
      "offset": [
        4458,
        4462
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3192": {
      "fn": "ECDSA.recover",
      "offset": [
        4464,
        4473
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3193": {
      "fn": "ECDSA.recover",
      "offset": [
        4447,
        4457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD1E"
    },
    "3196": {
      "fn": "ECDSA.recover",
      "jump": "i",
      "offset": [
        4447,
        4474
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3197": {
      "fn": "ECDSA.recover",
      "offset": [
        4447,
        4474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3198": {
      "fn": "ECDSA.recover",
      "offset": [
        4405,
        4474
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3199": {
      "fn": "ECDSA.recover",
      "offset": [
        4405,
        4474
      ],
      "op": "POP",
      "path": "2"
    },
    "3200": {
      "fn": "ECDSA.recover",
      "offset": [
        4405,
        4474
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3201": {
      "fn": "ECDSA.recover",
      "offset": [
        4405,
        4474
      ],
      "op": "POP",
      "path": "2"
    },
    "3202": {
      "fn": "ECDSA.recover",
      "offset": [
        4484,
        4502
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 30,
      "value": "0xC8A"
    },
    "3205": {
      "fn": "ECDSA.recover",
      "offset": [
        4496,
        4501
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3206": {
      "fn": "ECDSA.recover",
      "offset": [
        4484,
        4495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD8C"
    },
    "3209": {
      "fn": "ECDSA.recover",
      "jump": "i",
      "offset": [
        4484,
        4502
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3210": {
      "fn": "ECDSA.recover",
      "offset": [
        4484,
        4502
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3211": {
      "op": "POP"
    },
    "3212": {
      "fn": "ECDSA.recover",
      "offset": [
        4519,
        4528
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 31
    },
    "3213": {
      "fn": "ECDSA.recover",
      "offset": [
        4308,
        4535
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3214": {
      "op": "POP"
    },
    "3215": {
      "op": "POP"
    },
    "3216": {
      "op": "POP"
    },
    "3217": {
      "fn": "ECDSA.recover",
      "jump": "o",
      "offset": [
        4308,
        4535
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3218": {
      "fn": "console.log",
      "offset": [
        6297,
        6433
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3219": {
      "fn": "console.log",
      "offset": [
        6358,
        6429
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 32,
      "value": "0xC23"
    },
    "3222": {
      "fn": "console.log",
      "offset": [
        6421,
        6423
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3223": {
      "fn": "console.log",
      "offset": [
        6425,
        6427
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3224": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3226": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3227": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "3229": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "ADD",
      "path": "10"
    },
    "3230": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCA8"
    },
    "3233": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3234": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3235": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3236": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14DF"
    },
    "3239": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        6374,
        6428
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3240": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3241": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3243": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3244": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3247": {
      "op": "NOT"
    },
    "3248": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3249": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3250": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SUB",
      "path": "10"
    },
    "3251": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "ADD",
      "path": "10"
    },
    "3252": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3253": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3254": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3255": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3256": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3257": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3259": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3260": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "ADD",
      "path": "10"
    },
    "3261": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3262": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3269": {
      "op": "SHL"
    },
    "3270": {
      "op": "SUB"
    },
    "3271": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "AND",
      "path": "10"
    },
    "3272": {
      "op": "PUSH4",
      "value": "0x319AF333"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3279": {
      "op": "SHL"
    },
    "3280": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "OR",
      "path": "10"
    },
    "3281": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3282": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3283": {
      "fn": "console.log",
      "offset": [
        6358,
        6373
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBBD"
    },
    "3286": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        6358,
        6429
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3287": {
      "fn": "console.log",
      "offset": [
        11753,
        11907
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3288": {
      "fn": "console.log",
      "offset": [
        11823,
        11903
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 33,
      "value": "0x26D"
    },
    "3291": {
      "fn": "console.log",
      "offset": [
        11891,
        11893
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3292": {
      "fn": "console.log",
      "offset": [
        11895,
        11897
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3293": {
      "fn": "console.log",
      "offset": [
        11899,
        11901
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3294": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3296": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3297": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "3299": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "ADD",
      "path": "10"
    },
    "3300": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCEF"
    },
    "3303": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3304": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3305": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3306": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3307": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1509"
    },
    "3310": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        11839,
        11902
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3311": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3312": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3314": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3315": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3318": {
      "op": "NOT"
    },
    "3319": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3320": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3321": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "SUB",
      "path": "10"
    },
    "3322": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "ADD",
      "path": "10"
    },
    "3323": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3324": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3325": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3326": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3327": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3328": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3330": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3331": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "ADD",
      "path": "10"
    },
    "3332": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3333": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3340": {
      "op": "SHL"
    },
    "3341": {
      "op": "SUB"
    },
    "3342": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "AND",
      "path": "10"
    },
    "3343": {
      "op": "PUSH4",
      "value": "0x7C81217"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3350": {
      "op": "SHL"
    },
    "3351": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "OR",
      "path": "10"
    },
    "3352": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3353": {
      "fn": "console.log",
      "offset": [
        11839,
        11902
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3354": {
      "fn": "console.log",
      "offset": [
        11823,
        11838
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBBD"
    },
    "3357": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        11823,
        11903
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3358": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3359": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2324,
        2331
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3361": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2333,
        2345
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3362": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2554,
        2563
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3363": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2554,
        2570
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3364": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2574,
        2576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x41"
    },
    "3366": {
      "branch": 53,
      "fn": "ECDSA.tryRecover",
      "offset": [
        2554,
        2576
      ],
      "op": "SUB",
      "path": "2"
    },
    "3367": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2550,
        3516
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD54"
    },
    "3370": {
      "branch": 53,
      "fn": "ECDSA.tryRecover",
      "offset": [
        2550,
        3516
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3371": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2843,
        2847
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3373": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2828,
        2848
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3374": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2828,
        2848
      ],
      "op": "ADD",
      "path": "2"
    },
    "3375": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2822,
        2849
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3376": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2892,
        2896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3378": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2877,
        2897
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3379": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2877,
        2897
      ],
      "op": "ADD",
      "path": "2"
    },
    "3380": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2871,
        2898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3381": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2949,
        2953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3383": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2934,
        2954
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3384": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2934,
        2954
      ],
      "op": "ADD",
      "path": "2"
    },
    "3385": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2928,
        2955
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3386": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2592,
        2601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3388": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2920,
        2956
      ],
      "op": "BYTE",
      "path": "2"
    },
    "3389": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2990,
        3015
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 34,
      "value": "0xD48"
    },
    "3392": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3001,
        3005
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3393": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2920,
        2956
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3394": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2822,
        2849
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3395": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2871,
        2898
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3396": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2990,
        3000
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF42"
    },
    "3399": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        2990,
        3015
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3400": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2990,
        3015
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3401": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3402": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "POP",
      "path": "2"
    },
    "3403": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3404": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "POP",
      "path": "2"
    },
    "3405": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "POP",
      "path": "2"
    },
    "3406": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "POP",
      "path": "2"
    },
    "3407": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "POP",
      "path": "2"
    },
    "3408": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD85"
    },
    "3411": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3412": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2550,
        3516
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3413": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3036,
        3045
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3414": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3036,
        3052
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3415": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3056,
        3058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3417": {
      "branch": 54,
      "fn": "ECDSA.tryRecover",
      "offset": [
        3036,
        3058
      ],
      "op": "SUB",
      "path": "2"
    },
    "3418": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3032,
        3516
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD7D"
    },
    "3421": {
      "branch": 54,
      "fn": "ECDSA.tryRecover",
      "offset": [
        3032,
        3516
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3422": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3305,
        3309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3424": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3290,
        3310
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3425": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3290,
        3310
      ],
      "op": "ADD",
      "path": "2"
    },
    "3426": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3284,
        3311
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3427": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3355,
        3359
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3429": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3340,
        3360
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3430": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3340,
        3360
      ],
      "op": "ADD",
      "path": "2"
    },
    "3431": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3334,
        3361
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3432": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3395,
        3418
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 35,
      "value": "0xD72"
    },
    "3435": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3406,
        3410
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3436": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3284,
        3311
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3437": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3334,
        3361
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3438": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3395,
        3405
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x102F"
    },
    "3441": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        3395,
        3418
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3442": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3395,
        3418
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3443": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3444": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "POP",
      "path": "2"
    },
    "3445": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3446": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "POP",
      "path": "2"
    },
    "3447": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "POP",
      "path": "2"
    },
    "3448": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "POP",
      "path": "2"
    },
    "3449": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD85"
    },
    "3452": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3453": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3032,
        3516
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3454": {
      "op": "POP"
    },
    "3455": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3465,
        3466
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 36,
      "value": "0x0"
    },
    "3457": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3465,
        3466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3458": {
      "op": "POP"
    },
    "3459": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3469,
        3504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3461": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3032,
        3516
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3462": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3463": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "POP",
      "path": "2"
    },
    "3464": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3465": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3466": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "POP",
      "path": "2"
    },
    "3467": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        2243,
        3522
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3468": {
      "fn": "ECDSA._throwError",
      "offset": [
        548,
        1179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3469": {
      "fn": "ECDSA._throwError",
      "offset": [
        625,
        645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3471": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        621
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3472": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3474": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3475": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "GT",
      "path": "2"
    },
    "3476": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3477": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA0"
    },
    "3480": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3481": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA0"
    },
    "3484": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1537"
    },
    "3487": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        616,
        645
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3488": {
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3489": {
      "branch": 55,
      "fn": "ECDSA._throwError",
      "offset": [
        616,
        645
      ],
      "op": "SUB",
      "path": "2"
    },
    "3490": {
      "fn": "ECDSA._throwError",
      "offset": [
        612,
        1173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA8"
    },
    "3493": {
      "branch": 55,
      "fn": "ECDSA._throwError",
      "offset": [
        612,
        1173
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3494": {
      "fn": "ECDSA._throwError",
      "offset": [
        548,
        1179
      ],
      "op": "POP",
      "path": "2"
    },
    "3495": {
      "fn": "ECDSA._throwError",
      "jump": "o",
      "offset": [
        548,
        1179
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3496": {
      "fn": "ECDSA._throwError",
      "offset": [
        612,
        1173
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3497": {
      "fn": "ECDSA._throwError",
      "offset": [
        721,
        750
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3499": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        717
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3500": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3502": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3503": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "GT",
      "path": "2"
    },
    "3504": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3505": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDBC"
    },
    "3508": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3509": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDBC"
    },
    "3512": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1537"
    },
    "3515": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        712,
        750
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3516": {
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3517": {
      "branch": 56,
      "fn": "ECDSA._throwError",
      "offset": [
        712,
        750
      ],
      "op": "SUB",
      "path": "2"
    },
    "3518": {
      "fn": "ECDSA._throwError",
      "offset": [
        708,
        1173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE09"
    },
    "3521": {
      "branch": 56,
      "fn": "ECDSA._throwError",
      "offset": [
        708,
        1173
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3522": {
      "fn": "ECDSA._throwError",
      "offset": [
        766,
        800
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 37,
      "value": "0x40"
    },
    "3524": {
      "fn": "ECDSA._throwError",
      "offset": [
        766,
        800
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3525": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3531": {
      "op": "SHL"
    },
    "3532": {
      "fn": "ECDSA._throwError",
      "offset": [
        766,
        800
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3533": {
      "fn": "ECDSA._throwError",
      "offset": [
        766,
        800
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3536": {
      "fn": "ECDSA._throwError",
      "offset": [
        766,
        800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3538": {
      "fn": "ECDSA._throwError",
      "offset": [
        766,
        800
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3539": {
      "fn": "ECDSA._throwError",
      "offset": [
        766,
        800
      ],
      "op": "ADD",
      "path": "2"
    },
    "3540": {
      "op": "MSTORE"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3545": {
      "op": "DUP3"
    },
    "3546": {
      "op": "ADD"
    },
    "3547": {
      "op": "MSTORE"
    },
    "3548": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E61747572650000000000000000"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3583": {
      "op": "DUP3"
    },
    "3584": {
      "op": "ADD"
    },
    "3585": {
      "op": "MSTORE"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3588": {
      "op": "ADD"
    },
    "3589": {
      "fn": "ECDSA._throwError",
      "offset": [
        766,
        800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C2"
    },
    "3592": {
      "op": "JUMP"
    },
    "3593": {
      "fn": "ECDSA._throwError",
      "offset": [
        708,
        1173
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3594": {
      "fn": "ECDSA._throwError",
      "offset": [
        830,
        865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3596": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        826
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3597": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3599": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3600": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "GT",
      "path": "2"
    },
    "3601": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3602": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE1D"
    },
    "3605": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3606": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE1D"
    },
    "3609": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1537"
    },
    "3612": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        821,
        865
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3613": {
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3614": {
      "branch": 57,
      "fn": "ECDSA._throwError",
      "offset": [
        821,
        865
      ],
      "op": "SUB",
      "path": "2"
    },
    "3615": {
      "fn": "ECDSA._throwError",
      "offset": [
        817,
        1173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6A"
    },
    "3618": {
      "branch": 57,
      "fn": "ECDSA._throwError",
      "offset": [
        817,
        1173
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3619": {
      "fn": "ECDSA._throwError",
      "offset": [
        881,
        922
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 38,
      "value": "0x40"
    },
    "3621": {
      "fn": "ECDSA._throwError",
      "offset": [
        881,
        922
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3622": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3628": {
      "op": "SHL"
    },
    "3629": {
      "fn": "ECDSA._throwError",
      "offset": [
        881,
        922
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3630": {
      "fn": "ECDSA._throwError",
      "offset": [
        881,
        922
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3633": {
      "fn": "ECDSA._throwError",
      "offset": [
        881,
        922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3635": {
      "fn": "ECDSA._throwError",
      "offset": [
        881,
        922
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3636": {
      "fn": "ECDSA._throwError",
      "offset": [
        881,
        922
      ],
      "op": "ADD",
      "path": "2"
    },
    "3637": {
      "op": "MSTORE"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3642": {
      "op": "DUP3"
    },
    "3643": {
      "op": "ADD"
    },
    "3644": {
      "op": "MSTORE"
    },
    "3645": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3680": {
      "op": "DUP3"
    },
    "3681": {
      "op": "ADD"
    },
    "3682": {
      "op": "MSTORE"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3685": {
      "op": "ADD"
    },
    "3686": {
      "fn": "ECDSA._throwError",
      "offset": [
        881,
        922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C2"
    },
    "3689": {
      "op": "JUMP"
    },
    "3690": {
      "fn": "ECDSA._throwError",
      "offset": [
        817,
        1173
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3691": {
      "fn": "ECDSA._throwError",
      "offset": [
        952,
        982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3693": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        948
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3694": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3696": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3697": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "GT",
      "path": "2"
    },
    "3698": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3699": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE7E"
    },
    "3702": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3703": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE7E"
    },
    "3706": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1537"
    },
    "3709": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        943,
        982
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3710": {
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3711": {
      "branch": 58,
      "fn": "ECDSA._throwError",
      "offset": [
        943,
        982
      ],
      "op": "SUB",
      "path": "2"
    },
    "3712": {
      "fn": "ECDSA._throwError",
      "offset": [
        939,
        1173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xED6"
    },
    "3715": {
      "branch": 58,
      "fn": "ECDSA._throwError",
      "offset": [
        939,
        1173
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3716": {
      "fn": "ECDSA._throwError",
      "offset": [
        998,
        1042
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 39,
      "value": "0x40"
    },
    "3718": {
      "fn": "ECDSA._throwError",
      "offset": [
        998,
        1042
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3719": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3725": {
      "op": "SHL"
    },
    "3726": {
      "fn": "ECDSA._throwError",
      "offset": [
        998,
        1042
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3727": {
      "fn": "ECDSA._throwError",
      "offset": [
        998,
        1042
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3730": {
      "fn": "ECDSA._throwError",
      "offset": [
        998,
        1042
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3732": {
      "fn": "ECDSA._throwError",
      "offset": [
        998,
        1042
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3733": {
      "fn": "ECDSA._throwError",
      "offset": [
        998,
        1042
      ],
      "op": "ADD",
      "path": "2"
    },
    "3734": {
      "op": "MSTORE"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3739": {
      "op": "DUP3"
    },
    "3740": {
      "op": "ADD"
    },
    "3741": {
      "op": "MSTORE"
    },
    "3742": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265202773272076616C"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3777": {
      "op": "DUP3"
    },
    "3778": {
      "op": "ADD"
    },
    "3779": {
      "op": "MSTORE"
    },
    "3780": {
      "op": "PUSH2",
      "value": "0x7565"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3785": {
      "op": "SHL"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3788": {
      "op": "DUP3"
    },
    "3789": {
      "op": "ADD"
    },
    "3790": {
      "op": "MSTORE"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3793": {
      "op": "ADD"
    },
    "3794": {
      "fn": "ECDSA._throwError",
      "offset": [
        998,
        1042
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C2"
    },
    "3797": {
      "op": "JUMP"
    },
    "3798": {
      "fn": "ECDSA._throwError",
      "offset": [
        939,
        1173
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3799": {
      "fn": "ECDSA._throwError",
      "offset": [
        1072,
        1102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3801": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1068
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3802": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3804": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3805": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "GT",
      "path": "2"
    },
    "3806": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3807": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEEA"
    },
    "3810": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3811": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEEA"
    },
    "3814": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1537"
    },
    "3817": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        1063,
        1102
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3818": {
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3819": {
      "branch": 59,
      "fn": "ECDSA._throwError",
      "offset": [
        1063,
        1102
      ],
      "op": "SUB",
      "path": "2"
    },
    "3820": {
      "fn": "ECDSA._throwError",
      "offset": [
        1059,
        1173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB58"
    },
    "3823": {
      "branch": 59,
      "fn": "ECDSA._throwError",
      "offset": [
        1059,
        1173
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3824": {
      "fn": "ECDSA._throwError",
      "offset": [
        1118,
        1162
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 40,
      "value": "0x40"
    },
    "3826": {
      "fn": "ECDSA._throwError",
      "offset": [
        1118,
        1162
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3827": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3833": {
      "op": "SHL"
    },
    "3834": {
      "fn": "ECDSA._throwError",
      "offset": [
        1118,
        1162
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3835": {
      "fn": "ECDSA._throwError",
      "offset": [
        1118,
        1162
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3838": {
      "fn": "ECDSA._throwError",
      "offset": [
        1118,
        1162
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3840": {
      "fn": "ECDSA._throwError",
      "offset": [
        1118,
        1162
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3841": {
      "fn": "ECDSA._throwError",
      "offset": [
        1118,
        1162
      ],
      "op": "ADD",
      "path": "2"
    },
    "3842": {
      "op": "MSTORE"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3847": {
      "op": "DUP3"
    },
    "3848": {
      "op": "ADD"
    },
    "3849": {
      "op": "MSTORE"
    },
    "3850": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265202776272076616C"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3885": {
      "op": "DUP3"
    },
    "3886": {
      "op": "ADD"
    },
    "3887": {
      "op": "MSTORE"
    },
    "3888": {
      "op": "PUSH2",
      "value": "0x7565"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3893": {
      "op": "SHL"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3896": {
      "op": "DUP3"
    },
    "3897": {
      "op": "ADD"
    },
    "3898": {
      "op": "MSTORE"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3901": {
      "op": "ADD"
    },
    "3902": {
      "fn": "ECDSA._throwError",
      "offset": [
        1118,
        1162
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C2"
    },
    "3905": {
      "op": "JUMP"
    },
    "3906": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3907": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5842,
        5849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3909": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5842,
        5849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3910": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6766,
        6832
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
    },
    "3943": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6753,
        6832
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3944": {
      "branch": 60,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6753,
        6832
      ],
      "op": "GT",
      "path": "2"
    },
    "3945": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6749,
        6910
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3946": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6749,
        6910
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF79"
    },
    "3949": {
      "branch": 60,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6749,
        6910
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3950": {
      "op": "POP"
    },
    "3951": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6864,
        6865
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 41,
      "value": "0x0"
    },
    "3953": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6864,
        6865
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3954": {
      "op": "POP"
    },
    "3955": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6868,
        6898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3957": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6848,
        6899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1026"
    },
    "3960": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6848,
        6899
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3961": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6749,
        6910
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3962": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6924
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3963": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3965": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6930
      ],
      "op": "AND",
      "path": "2"
    },
    "3966": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6928,
        6930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1B"
    },
    "3968": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6930
      ],
      "op": "EQ",
      "path": "2"
    },
    "3969": {
      "branch": 61,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6930
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3970": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3971": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3972": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF91"
    },
    "3975": {
      "branch": 61,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3976": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "POP",
      "path": "2"
    },
    "3977": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6934,
        6935
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3978": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6934,
        6941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3980": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6934,
        6941
      ],
      "op": "AND",
      "path": "2"
    },
    "3981": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6939,
        6941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1C"
    },
    "3983": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6934,
        6941
      ],
      "op": "EQ",
      "path": "2"
    },
    "3984": {
      "branch": 62,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6934,
        6941
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3985": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3986": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6919,
        7019
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3987": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6919,
        7019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA2"
    },
    "3990": {
      "branch": 62,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6919,
        7019
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3991": {
      "op": "POP"
    },
    "3992": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6973,
        6974
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 42,
      "value": "0x0"
    },
    "3994": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6973,
        6974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3995": {
      "op": "POP"
    },
    "3996": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6977,
        7007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3998": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6957,
        7008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1026"
    },
    "4001": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6957,
        7008
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4002": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6919,
        7019
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4003": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4005": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4006": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4007": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7113,
        7127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4009": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4010": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4011": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4012": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4014": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4015": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "ADD",
      "path": "2"
    },
    "4016": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4017": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4018": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4019": {
      "op": "DUP10"
    },
    "4020": {
      "op": "SWAP1"
    },
    "4021": {
      "op": "MSTORE"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4024": {
      "op": "DUP9"
    },
    "4025": {
      "op": "AND"
    },
    "4026": {
      "op": "SWAP3"
    },
    "4027": {
      "op": "DUP3"
    },
    "4028": {
      "op": "ADD"
    },
    "4029": {
      "op": "SWAP3"
    },
    "4030": {
      "op": "SWAP1"
    },
    "4031": {
      "op": "SWAP3"
    },
    "4032": {
      "op": "MSTORE"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4035": {
      "op": "DUP2"
    },
    "4036": {
      "op": "ADD"
    },
    "4037": {
      "op": "DUP7"
    },
    "4038": {
      "op": "SWAP1"
    },
    "4039": {
      "op": "MSTORE"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4042": {
      "op": "DUP2"
    },
    "4043": {
      "op": "ADD"
    },
    "4044": {
      "op": "DUP6"
    },
    "4045": {
      "op": "SWAP1"
    },
    "4046": {
      "op": "MSTORE"
    },
    "4047": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4049": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4052": {
      "op": "ADD"
    },
    "4053": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4055": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4057": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4058": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4060": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4061": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SUB",
      "path": "2"
    },
    "4062": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4063": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4064": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4065": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SUB",
      "path": "2"
    },
    "4066": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4067": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4068": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "GAS",
      "path": "2"
    },
    "4069": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "4070": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4071": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4072": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4073": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFF6"
    },
    "4076": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4077": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4078": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4080": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4081": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4082": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4083": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4085": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4086": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4087": {
      "op": "POP"
    },
    "4088": {
      "op": "POP"
    },
    "4089": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4091": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4094": {
      "op": "NOT"
    },
    "4095": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "ADD",
      "path": "2"
    },
    "4096": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4097": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4098": {
      "op": "POP"
    },
    "4099": {
      "op": "POP"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4106": {
      "op": "SHL"
    },
    "4107": {
      "op": "SUB"
    },
    "4108": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7168,
        7188
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4109": {
      "branch": 63,
      "fn": "ECDSA.tryRecover",
      "offset": [
        7168,
        7188
      ],
      "op": "AND",
      "path": "2"
    },
    "4110": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7164,
        7265
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101F"
    },
    "4113": {
      "branch": 63,
      "fn": "ECDSA.tryRecover",
      "offset": [
        7164,
        7265
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4114": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7220,
        7221
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 43,
      "value": "0x0"
    },
    "4116": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7224,
        7253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4118": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4119": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "POP",
      "path": "2"
    },
    "4120": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4121": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "POP",
      "path": "2"
    },
    "4122": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "POP",
      "path": "2"
    },
    "4123": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1026"
    },
    "4126": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4127": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7164,
        7265
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4128": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7283,
        7289
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 44
    },
    "4129": {
      "op": "POP"
    },
    "4130": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7291,
        7311
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4132": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7291,
        7311
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4133": {
      "op": "POP"
    },
    "4134": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4135": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4136": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "POP",
      "path": "2"
    },
    "4137": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4138": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4139": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "POP",
      "path": "2"
    },
    "4140": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "POP",
      "path": "2"
    },
    "4141": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "POP",
      "path": "2"
    },
    "4142": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        5716,
        7319
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4143": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4144": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4899,
        4906
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4146": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4899,
        4906
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4153": {
      "op": "SHL"
    },
    "4154": {
      "op": "SUB"
    },
    "4155": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4944,
        5024
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4156": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4944,
        5024
      ],
      "op": "AND",
      "path": "2"
    },
    "4157": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4899,
        4906
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4158": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5050,
        5075
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x104C"
    },
    "4161": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5066,
        5069
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4163": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5051,
        5069
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4164": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5051,
        5069
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4165": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5051,
        5069
      ],
      "op": "SHR",
      "path": "2"
    },
    "4166": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5073,
        5075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1B"
    },
    "4168": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5050,
        5075
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1480"
    },
    "4171": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        5050,
        5075
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4172": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5050,
        5075
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4173": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5034,
        5076
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4174": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5034,
        5076
      ],
      "op": "POP",
      "path": "2"
    },
    "4175": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5093,
        5118
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 45,
      "value": "0x105A"
    },
    "4178": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5104,
        5108
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4179": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5110,
        5111
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4180": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5113,
        5114
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4181": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5116,
        5117
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4182": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5093,
        5103
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF42"
    },
    "4185": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        5093,
        5118
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4186": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5093,
        5118
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4187": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4188": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "POP",
      "path": "2"
    },
    "4189": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4190": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "POP",
      "path": "2"
    },
    "4191": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "POP",
      "path": "2"
    },
    "4192": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "POP",
      "path": "2"
    },
    "4193": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4194": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "POP",
      "path": "2"
    },
    "4195": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4196": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4197": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "POP",
      "path": "2"
    },
    "4198": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "POP",
      "path": "2"
    },
    "4199": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        4789,
        5125
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4200": {
      "op": "JUMPDEST"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4203": {
      "op": "MLOAD"
    },
    "4204": {
      "op": "DUP1"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4207": {
      "op": "ADD"
    },
    "4208": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4210": {
      "op": "MSTORE"
    },
    "4211": {
      "op": "DUP1"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4214": {
      "op": "SWAP1"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4217": {
      "op": "DUP3"
    },
    "4218": {
      "op": "MUL"
    },
    "4219": {
      "op": "DUP1"
    },
    "4220": {
      "op": "CALLDATASIZE"
    },
    "4221": {
      "op": "DUP4"
    },
    "4222": {
      "op": "CALLDATACOPY"
    },
    "4223": {
      "op": "POP"
    },
    "4224": {
      "op": "SWAP2"
    },
    "4225": {
      "op": "SWAP3"
    },
    "4226": {
      "op": "SWAP2"
    },
    "4227": {
      "op": "POP"
    },
    "4228": {
      "op": "POP"
    },
    "4229": {
      "jump": "o",
      "op": "JUMP"
    },
    "4230": {
      "op": "JUMPDEST"
    },
    "4231": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4238": {
      "op": "SHL"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4241": {
      "op": "MSTORE"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4246": {
      "op": "MSTORE"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4251": {
      "op": "REVERT"
    },
    "4252": {
      "op": "JUMPDEST"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4255": {
      "op": "DUP1"
    },
    "4256": {
      "op": "MLOAD"
    },
    "4257": {
      "op": "SWAP1"
    },
    "4258": {
      "op": "DUP2"
    },
    "4259": {
      "op": "ADD"
    },
    "4260": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4269": {
      "op": "DUP2"
    },
    "4270": {
      "op": "GT"
    },
    "4271": {
      "op": "DUP3"
    },
    "4272": {
      "op": "DUP3"
    },
    "4273": {
      "op": "LT"
    },
    "4274": {
      "op": "OR"
    },
    "4275": {
      "op": "ISZERO"
    },
    "4276": {
      "op": "PUSH2",
      "value": "0x10BF"
    },
    "4279": {
      "op": "JUMPI"
    },
    "4280": {
      "op": "PUSH2",
      "value": "0x10BF"
    },
    "4283": {
      "op": "PUSH2",
      "value": "0x1086"
    },
    "4286": {
      "jump": "i",
      "op": "JUMP"
    },
    "4287": {
      "op": "JUMPDEST"
    },
    "4288": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4290": {
      "op": "MSTORE"
    },
    "4291": {
      "op": "SWAP1"
    },
    "4292": {
      "jump": "o",
      "op": "JUMP"
    },
    "4293": {
      "op": "JUMPDEST"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4296": {
      "op": "MLOAD"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4299": {
      "op": "DUP3"
    },
    "4300": {
      "op": "ADD"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4303": {
      "op": "NOT"
    },
    "4304": {
      "op": "AND"
    },
    "4305": {
      "op": "DUP2"
    },
    "4306": {
      "op": "ADD"
    },
    "4307": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4316": {
      "op": "DUP2"
    },
    "4317": {
      "op": "GT"
    },
    "4318": {
      "op": "DUP3"
    },
    "4319": {
      "op": "DUP3"
    },
    "4320": {
      "op": "LT"
    },
    "4321": {
      "op": "OR"
    },
    "4322": {
      "op": "ISZERO"
    },
    "4323": {
      "op": "PUSH2",
      "value": "0x10EE"
    },
    "4326": {
      "op": "JUMPI"
    },
    "4327": {
      "op": "PUSH2",
      "value": "0x10EE"
    },
    "4330": {
      "op": "PUSH2",
      "value": "0x1086"
    },
    "4333": {
      "jump": "i",
      "op": "JUMP"
    },
    "4334": {
      "op": "JUMPDEST"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4337": {
      "op": "MSTORE"
    },
    "4338": {
      "op": "SWAP2"
    },
    "4339": {
      "op": "SWAP1"
    },
    "4340": {
      "op": "POP"
    },
    "4341": {
      "jump": "o",
      "op": "JUMP"
    },
    "4342": {
      "op": "JUMPDEST"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4345": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4347": {
      "op": "DUP4"
    },
    "4348": {
      "op": "DUP2"
    },
    "4349": {
      "op": "DUP5"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "op": "SLT"
    },
    "4352": {
      "op": "PUSH2",
      "value": "0x1108"
    },
    "4355": {
      "op": "JUMPI"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4358": {
      "op": "DUP1"
    },
    "4359": {
      "op": "REVERT"
    },
    "4360": {
      "op": "JUMPDEST"
    },
    "4361": {
      "op": "PUSH2",
      "value": "0x1110"
    },
    "4364": {
      "op": "PUSH2",
      "value": "0x109C"
    },
    "4367": {
      "jump": "i",
      "op": "JUMP"
    },
    "4368": {
      "op": "JUMPDEST"
    },
    "4369": {
      "op": "DUP1"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4372": {
      "op": "DUP6"
    },
    "4373": {
      "op": "ADD"
    },
    "4374": {
      "op": "DUP7"
    },
    "4375": {
      "op": "DUP2"
    },
    "4376": {
      "op": "GT"
    },
    "4377": {
      "op": "ISZERO"
    },
    "4378": {
      "op": "PUSH2",
      "value": "0x1122"
    },
    "4381": {
      "op": "JUMPI"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4384": {
      "op": "DUP1"
    },
    "4385": {
      "op": "REVERT"
    },
    "4386": {
      "op": "JUMPDEST"
    },
    "4387": {
      "op": "DUP6"
    },
    "4388": {
      "op": "JUMPDEST"
    },
    "4389": {
      "op": "DUP2"
    },
    "4390": {
      "op": "DUP2"
    },
    "4391": {
      "op": "LT"
    },
    "4392": {
      "op": "ISZERO"
    },
    "4393": {
      "op": "PUSH2",
      "value": "0x11B9"
    },
    "4396": {
      "op": "JUMPI"
    },
    "4397": {
      "op": "DUP1"
    },
    "4398": {
      "op": "CALLDATALOAD"
    },
    "4399": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4408": {
      "op": "DUP1"
    },
    "4409": {
      "op": "DUP3"
    },
    "4410": {
      "op": "GT"
    },
    "4411": {
      "op": "ISZERO"
    },
    "4412": {
      "op": "PUSH2",
      "value": "0x1145"
    },
    "4415": {
      "op": "JUMPI"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4418": {
      "op": "DUP1"
    },
    "4419": {
      "op": "DUP2"
    },
    "4420": {
      "op": "REVERT"
    },
    "4421": {
      "op": "JUMPDEST"
    },
    "4422": {
      "op": "DUP2"
    },
    "4423": {
      "op": "DUP10"
    },
    "4424": {
      "op": "ADD"
    },
    "4425": {
      "op": "SWAP2"
    },
    "4426": {
      "op": "POP"
    },
    "4427": {
      "op": "DUP10"
    },
    "4428": {
      "op": "DUP8"
    },
    "4429": {
      "op": "DUP4"
    },
    "4430": {
      "op": "ADD"
    },
    "4431": {
      "op": "SLT"
    },
    "4432": {
      "op": "PUSH2",
      "value": "0x1159"
    },
    "4435": {
      "op": "JUMPI"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4438": {
      "op": "DUP1"
    },
    "4439": {
      "op": "DUP2"
    },
    "4440": {
      "op": "REVERT"
    },
    "4441": {
      "op": "JUMPDEST"
    },
    "4442": {
      "op": "DUP2"
    },
    "4443": {
      "op": "CALLDATALOAD"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4446": {
      "op": "DUP3"
    },
    "4447": {
      "op": "DUP3"
    },
    "4448": {
      "op": "GT"
    },
    "4449": {
      "op": "ISZERO"
    },
    "4450": {
      "op": "PUSH2",
      "value": "0x116D"
    },
    "4453": {
      "op": "JUMPI"
    },
    "4454": {
      "op": "PUSH2",
      "value": "0x116D"
    },
    "4457": {
      "op": "PUSH2",
      "value": "0x1086"
    },
    "4460": {
      "jump": "i",
      "op": "JUMP"
    },
    "4461": {
      "op": "JUMPDEST"
    },
    "4462": {
      "op": "PUSH2",
      "value": "0x117E"
    },
    "4465": {
      "op": "DUP3"
    },
    "4466": {
      "op": "DUP11"
    },
    "4467": {
      "op": "ADD"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4470": {
      "op": "NOT"
    },
    "4471": {
      "op": "AND"
    },
    "4472": {
      "op": "DUP3"
    },
    "4473": {
      "op": "ADD"
    },
    "4474": {
      "op": "PUSH2",
      "value": "0x10C5"
    },
    "4477": {
      "jump": "i",
      "op": "JUMP"
    },
    "4478": {
      "op": "JUMPDEST"
    },
    "4479": {
      "op": "SWAP3"
    },
    "4480": {
      "op": "POP"
    },
    "4481": {
      "op": "DUP2"
    },
    "4482": {
      "op": "DUP4"
    },
    "4483": {
      "op": "MSTORE"
    },
    "4484": {
      "op": "DUP12"
    },
    "4485": {
      "op": "DUP2"
    },
    "4486": {
      "op": "DUP4"
    },
    "4487": {
      "op": "DUP7"
    },
    "4488": {
      "op": "ADD"
    },
    "4489": {
      "op": "ADD"
    },
    "4490": {
      "op": "GT"
    },
    "4491": {
      "op": "ISZERO"
    },
    "4492": {
      "op": "PUSH2",
      "value": "0x1195"
    },
    "4495": {
      "op": "JUMPI"
    },
    "4496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4498": {
      "op": "DUP1"
    },
    "4499": {
      "op": "DUP2"
    },
    "4500": {
      "op": "REVERT"
    },
    "4501": {
      "op": "JUMPDEST"
    },
    "4502": {
      "op": "DUP2"
    },
    "4503": {
      "op": "DUP2"
    },
    "4504": {
      "op": "DUP6"
    },
    "4505": {
      "op": "ADD"
    },
    "4506": {
      "op": "DUP3"
    },
    "4507": {
      "op": "DUP6"
    },
    "4508": {
      "op": "ADD"
    },
    "4509": {
      "op": "CALLDATACOPY"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4512": {
      "op": "SWAP2"
    },
    "4513": {
      "op": "DUP4"
    },
    "4514": {
      "op": "ADD"
    },
    "4515": {
      "op": "DUP2"
    },
    "4516": {
      "op": "ADD"
    },
    "4517": {
      "op": "SWAP2"
    },
    "4518": {
      "op": "SWAP1"
    },
    "4519": {
      "op": "SWAP2"
    },
    "4520": {
      "op": "MSTORE"
    },
    "4521": {
      "op": "SWAP1"
    },
    "4522": {
      "op": "DUP7"
    },
    "4523": {
      "op": "MSTORE"
    },
    "4524": {
      "op": "SWAP5"
    },
    "4525": {
      "op": "SWAP1"
    },
    "4526": {
      "op": "SWAP5"
    },
    "4527": {
      "op": "ADD"
    },
    "4528": {
      "op": "SWAP4"
    },
    "4529": {
      "op": "POP"
    },
    "4530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4532": {
      "op": "ADD"
    },
    "4533": {
      "op": "PUSH2",
      "value": "0x1124"
    },
    "4536": {
      "op": "JUMP"
    },
    "4537": {
      "op": "JUMPDEST"
    },
    "4538": {
      "op": "POP"
    },
    "4539": {
      "op": "SWAP1"
    },
    "4540": {
      "op": "SWAP7"
    },
    "4541": {
      "op": "SWAP6"
    },
    "4542": {
      "op": "POP"
    },
    "4543": {
      "op": "POP"
    },
    "4544": {
      "op": "POP"
    },
    "4545": {
      "op": "POP"
    },
    "4546": {
      "op": "POP"
    },
    "4547": {
      "op": "POP"
    },
    "4548": {
      "jump": "o",
      "op": "JUMP"
    },
    "4549": {
      "op": "JUMPDEST"
    },
    "4550": {
      "op": "DUP1"
    },
    "4551": {
      "op": "CALLDATALOAD"
    },
    "4552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4558": {
      "op": "SHL"
    },
    "4559": {
      "op": "SUB"
    },
    "4560": {
      "op": "DUP2"
    },
    "4561": {
      "op": "AND"
    },
    "4562": {
      "op": "DUP2"
    },
    "4563": {
      "op": "EQ"
    },
    "4564": {
      "op": "PUSH2",
      "value": "0x11DC"
    },
    "4567": {
      "op": "JUMPI"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4570": {
      "op": "DUP1"
    },
    "4571": {
      "op": "REVERT"
    },
    "4572": {
      "op": "JUMPDEST"
    },
    "4573": {
      "op": "SWAP2"
    },
    "4574": {
      "op": "SWAP1"
    },
    "4575": {
      "op": "POP"
    },
    "4576": {
      "jump": "o",
      "op": "JUMP"
    },
    "4577": {
      "op": "JUMPDEST"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4580": {
      "op": "DUP3"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4583": {
      "op": "DUP4"
    },
    "4584": {
      "op": "ADD"
    },
    "4585": {
      "op": "SLT"
    },
    "4586": {
      "op": "PUSH2",
      "value": "0x11F2"
    },
    "4589": {
      "op": "JUMPI"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4592": {
      "op": "DUP1"
    },
    "4593": {
      "op": "REVERT"
    },
    "4594": {
      "op": "JUMPDEST"
    },
    "4595": {
      "op": "PUSH2",
      "value": "0x11FA"
    },
    "4598": {
      "op": "PUSH2",
      "value": "0x109C"
    },
    "4601": {
      "jump": "i",
      "op": "JUMP"
    },
    "4602": {
      "op": "JUMPDEST"
    },
    "4603": {
      "op": "DUP1"
    },
    "4604": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4606": {
      "op": "DUP5"
    },
    "4607": {
      "op": "ADD"
    },
    "4608": {
      "op": "DUP6"
    },
    "4609": {
      "op": "DUP2"
    },
    "4610": {
      "op": "GT"
    },
    "4611": {
      "op": "ISZERO"
    },
    "4612": {
      "op": "PUSH2",
      "value": "0x120C"
    },
    "4615": {
      "op": "JUMPI"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4618": {
      "op": "DUP1"
    },
    "4619": {
      "op": "REVERT"
    },
    "4620": {
      "op": "JUMPDEST"
    },
    "4621": {
      "op": "DUP5"
    },
    "4622": {
      "op": "JUMPDEST"
    },
    "4623": {
      "op": "DUP2"
    },
    "4624": {
      "op": "DUP2"
    },
    "4625": {
      "op": "LT"
    },
    "4626": {
      "op": "ISZERO"
    },
    "4627": {
      "op": "PUSH2",
      "value": "0x1226"
    },
    "4630": {
      "op": "JUMPI"
    },
    "4631": {
      "op": "DUP1"
    },
    "4632": {
      "op": "CALLDATALOAD"
    },
    "4633": {
      "op": "DUP5"
    },
    "4634": {
      "op": "MSTORE"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4637": {
      "op": "SWAP4"
    },
    "4638": {
      "op": "DUP5"
    },
    "4639": {
      "op": "ADD"
    },
    "4640": {
      "op": "SWAP4"
    },
    "4641": {
      "op": "ADD"
    },
    "4642": {
      "op": "PUSH2",
      "value": "0x120E"
    },
    "4645": {
      "op": "JUMP"
    },
    "4646": {
      "op": "JUMPDEST"
    },
    "4647": {
      "op": "POP"
    },
    "4648": {
      "op": "SWAP1"
    },
    "4649": {
      "op": "SWAP6"
    },
    "4650": {
      "op": "SWAP5"
    },
    "4651": {
      "op": "POP"
    },
    "4652": {
      "op": "POP"
    },
    "4653": {
      "op": "POP"
    },
    "4654": {
      "op": "POP"
    },
    "4655": {
      "op": "POP"
    },
    "4656": {
      "jump": "o",
      "op": "JUMP"
    },
    "4657": {
      "op": "JUMPDEST"
    },
    "4658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4660": {
      "op": "DUP1"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4663": {
      "op": "DUP1"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4668": {
      "op": "DUP7"
    },
    "4669": {
      "op": "DUP9"
    },
    "4670": {
      "op": "SUB"
    },
    "4671": {
      "op": "SLT"
    },
    "4672": {
      "op": "ISZERO"
    },
    "4673": {
      "op": "PUSH2",
      "value": "0x1249"
    },
    "4676": {
      "op": "JUMPI"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4679": {
      "op": "DUP1"
    },
    "4680": {
      "op": "REVERT"
    },
    "4681": {
      "op": "JUMPDEST"
    },
    "4682": {
      "op": "DUP6"
    },
    "4683": {
      "op": "CALLDATALOAD"
    },
    "4684": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4693": {
      "op": "DUP2"
    },
    "4694": {
      "op": "GT"
    },
    "4695": {
      "op": "ISZERO"
    },
    "4696": {
      "op": "PUSH2",
      "value": "0x1260"
    },
    "4699": {
      "op": "JUMPI"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4702": {
      "op": "DUP1"
    },
    "4703": {
      "op": "REVERT"
    },
    "4704": {
      "op": "JUMPDEST"
    },
    "4705": {
      "op": "PUSH2",
      "value": "0x126C"
    },
    "4708": {
      "op": "DUP9"
    },
    "4709": {
      "op": "DUP3"
    },
    "4710": {
      "op": "DUP10"
    },
    "4711": {
      "op": "ADD"
    },
    "4712": {
      "op": "PUSH2",
      "value": "0x10F6"
    },
    "4715": {
      "jump": "i",
      "op": "JUMP"
    },
    "4716": {
      "op": "JUMPDEST"
    },
    "4717": {
      "op": "SWAP6"
    },
    "4718": {
      "op": "POP"
    },
    "4719": {
      "op": "POP"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4722": {
      "op": "PUSH2",
      "value": "0x127C"
    },
    "4725": {
      "op": "DUP2"
    },
    "4726": {
      "op": "DUP9"
    },
    "4727": {
      "op": "ADD"
    },
    "4728": {
      "op": "PUSH2",
      "value": "0x11C5"
    },
    "4731": {
      "jump": "i",
      "op": "JUMP"
    },
    "4732": {
      "op": "JUMPDEST"
    },
    "4733": {
      "op": "SWAP5"
    },
    "4734": {
      "op": "POP"
    },
    "4735": {
      "op": "DUP8"
    },
    "4736": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "4738": {
      "op": "DUP9"
    },
    "4739": {
      "op": "ADD"
    },
    "4740": {
      "op": "SLT"
    },
    "4741": {
      "op": "PUSH2",
      "value": "0x128D"
    },
    "4744": {
      "op": "JUMPI"
    },
    "4745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4747": {
      "op": "DUP1"
    },
    "4748": {
      "op": "REVERT"
    },
    "4749": {
      "op": "JUMPDEST"
    },
    "4750": {
      "op": "PUSH2",
      "value": "0x1295"
    },
    "4753": {
      "op": "PUSH2",
      "value": "0x109C"
    },
    "4756": {
      "jump": "i",
      "op": "JUMP"
    },
    "4757": {
      "op": "JUMPDEST"
    },
    "4758": {
      "op": "DUP1"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4761": {
      "op": "DUP10"
    },
    "4762": {
      "op": "ADD"
    },
    "4763": {
      "op": "DUP11"
    },
    "4764": {
      "op": "DUP2"
    },
    "4765": {
      "op": "GT"
    },
    "4766": {
      "op": "ISZERO"
    },
    "4767": {
      "op": "PUSH2",
      "value": "0x12A7"
    },
    "4770": {
      "op": "JUMPI"
    },
    "4771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4773": {
      "op": "DUP1"
    },
    "4774": {
      "op": "REVERT"
    },
    "4775": {
      "op": "JUMPDEST"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4778": {
      "op": "DUP11"
    },
    "4779": {
      "op": "ADD"
    },
    "4780": {
      "op": "JUMPDEST"
    },
    "4781": {
      "op": "DUP2"
    },
    "4782": {
      "op": "DUP2"
    },
    "4783": {
      "op": "LT"
    },
    "4784": {
      "op": "ISZERO"
    },
    "4785": {
      "op": "PUSH2",
      "value": "0x12CA"
    },
    "4788": {
      "op": "JUMPI"
    },
    "4789": {
      "op": "PUSH2",
      "value": "0x12BD"
    },
    "4792": {
      "op": "DUP2"
    },
    "4793": {
      "op": "PUSH2",
      "value": "0x11C5"
    },
    "4796": {
      "jump": "i",
      "op": "JUMP"
    },
    "4797": {
      "op": "JUMPDEST"
    },
    "4798": {
      "op": "DUP5"
    },
    "4799": {
      "op": "MSTORE"
    },
    "4800": {
      "op": "SWAP3"
    },
    "4801": {
      "op": "DUP5"
    },
    "4802": {
      "op": "ADD"
    },
    "4803": {
      "op": "SWAP3"
    },
    "4804": {
      "op": "DUP5"
    },
    "4805": {
      "op": "ADD"
    },
    "4806": {
      "op": "PUSH2",
      "value": "0x12AC"
    },
    "4809": {
      "op": "JUMP"
    },
    "4810": {
      "op": "JUMPDEST"
    },
    "4811": {
      "op": "POP"
    },
    "4812": {
      "op": "DUP2"
    },
    "4813": {
      "op": "SWAP7"
    },
    "4814": {
      "op": "POP"
    },
    "4815": {
      "op": "PUSH2",
      "value": "0x12D8"
    },
    "4818": {
      "op": "DUP12"
    },
    "4819": {
      "op": "DUP3"
    },
    "4820": {
      "op": "PUSH2",
      "value": "0x11E1"
    },
    "4823": {
      "jump": "i",
      "op": "JUMP"
    },
    "4824": {
      "op": "JUMPDEST"
    },
    "4825": {
      "op": "SWAP9"
    },
    "4826": {
      "op": "SWAP12"
    },
    "4827": {
      "op": "SWAP8"
    },
    "4828": {
      "op": "SWAP11"
    },
    "4829": {
      "op": "POP"
    },
    "4830": {
      "op": "SWAP6"
    },
    "4831": {
      "op": "SWAP9"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4834": {
      "op": "ADD"
    },
    "4835": {
      "op": "CALLDATALOAD"
    },
    "4836": {
      "op": "SWAP7"
    },
    "4837": {
      "op": "SWAP6"
    },
    "4838": {
      "op": "POP"
    },
    "4839": {
      "op": "POP"
    },
    "4840": {
      "op": "POP"
    },
    "4841": {
      "op": "POP"
    },
    "4842": {
      "op": "POP"
    },
    "4843": {
      "op": "POP"
    },
    "4844": {
      "jump": "o",
      "op": "JUMP"
    },
    "4845": {
      "op": "JUMPDEST"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4850": {
      "op": "DUP3"
    },
    "4851": {
      "op": "DUP5"
    },
    "4852": {
      "op": "SUB"
    },
    "4853": {
      "op": "SLT"
    },
    "4854": {
      "op": "ISZERO"
    },
    "4855": {
      "op": "PUSH2",
      "value": "0x12FF"
    },
    "4858": {
      "op": "JUMPI"
    },
    "4859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4861": {
      "op": "DUP1"
    },
    "4862": {
      "op": "REVERT"
    },
    "4863": {
      "op": "JUMPDEST"
    },
    "4864": {
      "op": "PUSH2",
      "value": "0xBB6"
    },
    "4867": {
      "op": "DUP3"
    },
    "4868": {
      "op": "PUSH2",
      "value": "0x11C5"
    },
    "4871": {
      "jump": "i",
      "op": "JUMP"
    },
    "4872": {
      "op": "JUMPDEST"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4877": {
      "op": "DUP3"
    },
    "4878": {
      "op": "DUP5"
    },
    "4879": {
      "op": "SUB"
    },
    "4880": {
      "op": "SLT"
    },
    "4881": {
      "op": "ISZERO"
    },
    "4882": {
      "op": "PUSH2",
      "value": "0x131A"
    },
    "4885": {
      "op": "JUMPI"
    },
    "4886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4888": {
      "op": "DUP1"
    },
    "4889": {
      "op": "REVERT"
    },
    "4890": {
      "op": "JUMPDEST"
    },
    "4891": {
      "op": "POP"
    },
    "4892": {
      "op": "CALLDATALOAD"
    },
    "4893": {
      "op": "SWAP2"
    },
    "4894": {
      "op": "SWAP1"
    },
    "4895": {
      "op": "POP"
    },
    "4896": {
      "jump": "o",
      "op": "JUMP"
    },
    "4897": {
      "op": "JUMPDEST"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4900": {
      "op": "DUP1"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4905": {
      "op": "DUP5"
    },
    "4906": {
      "op": "DUP7"
    },
    "4907": {
      "op": "SUB"
    },
    "4908": {
      "op": "SLT"
    },
    "4909": {
      "op": "ISZERO"
    },
    "4910": {
      "op": "PUSH2",
      "value": "0x1336"
    },
    "4913": {
      "op": "JUMPI"
    },
    "4914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4916": {
      "op": "DUP1"
    },
    "4917": {
      "op": "REVERT"
    },
    "4918": {
      "op": "JUMPDEST"
    },
    "4919": {
      "op": "PUSH2",
      "value": "0x1340"
    },
    "4922": {
      "op": "DUP6"
    },
    "4923": {
      "op": "DUP6"
    },
    "4924": {
      "op": "PUSH2",
      "value": "0x11E1"
    },
    "4927": {
      "jump": "i",
      "op": "JUMP"
    },
    "4928": {
      "op": "JUMPDEST"
    },
    "4929": {
      "op": "SWAP3"
    },
    "4930": {
      "op": "POP"
    },
    "4931": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4933": {
      "op": "DUP5"
    },
    "4934": {
      "op": "ADD"
    },
    "4935": {
      "op": "CALLDATALOAD"
    },
    "4936": {
      "op": "SWAP2"
    },
    "4937": {
      "op": "POP"
    },
    "4938": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4940": {
      "op": "DUP5"
    },
    "4941": {
      "op": "ADD"
    },
    "4942": {
      "op": "CALLDATALOAD"
    },
    "4943": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4952": {
      "op": "DUP2"
    },
    "4953": {
      "op": "GT"
    },
    "4954": {
      "op": "ISZERO"
    },
    "4955": {
      "op": "PUSH2",
      "value": "0x1363"
    },
    "4958": {
      "op": "JUMPI"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4961": {
      "op": "DUP1"
    },
    "4962": {
      "op": "REVERT"
    },
    "4963": {
      "op": "JUMPDEST"
    },
    "4964": {
      "op": "PUSH2",
      "value": "0x136F"
    },
    "4967": {
      "op": "DUP7"
    },
    "4968": {
      "op": "DUP3"
    },
    "4969": {
      "op": "DUP8"
    },
    "4970": {
      "op": "ADD"
    },
    "4971": {
      "op": "PUSH2",
      "value": "0x10F6"
    },
    "4974": {
      "jump": "i",
      "op": "JUMP"
    },
    "4975": {
      "op": "JUMPDEST"
    },
    "4976": {
      "op": "SWAP2"
    },
    "4977": {
      "op": "POP"
    },
    "4978": {
      "op": "POP"
    },
    "4979": {
      "op": "SWAP3"
    },
    "4980": {
      "op": "POP"
    },
    "4981": {
      "op": "SWAP3"
    },
    "4982": {
      "op": "POP"
    },
    "4983": {
      "op": "SWAP3"
    },
    "4984": {
      "jump": "o",
      "op": "JUMP"
    },
    "4985": {
      "op": "JUMPDEST"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4988": {
      "op": "DUP2"
    },
    "4989": {
      "op": "MLOAD"
    },
    "4990": {
      "op": "DUP1"
    },
    "4991": {
      "op": "DUP5"
    },
    "4992": {
      "op": "MSTORE"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4995": {
      "op": "JUMPDEST"
    },
    "4996": {
      "op": "DUP2"
    },
    "4997": {
      "op": "DUP2"
    },
    "4998": {
      "op": "LT"
    },
    "4999": {
      "op": "ISZERO"
    },
    "5000": {
      "op": "PUSH2",
      "value": "0x139F"
    },
    "5003": {
      "op": "JUMPI"
    },
    "5004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5006": {
      "op": "DUP2"
    },
    "5007": {
      "op": "DUP6"
    },
    "5008": {
      "op": "ADD"
    },
    "5009": {
      "op": "DUP2"
    },
    "5010": {
      "op": "ADD"
    },
    "5011": {
      "op": "MLOAD"
    },
    "5012": {
      "op": "DUP7"
    },
    "5013": {
      "op": "DUP4"
    },
    "5014": {
      "op": "ADD"
    },
    "5015": {
      "op": "DUP3"
    },
    "5016": {
      "op": "ADD"
    },
    "5017": {
      "op": "MSTORE"
    },
    "5018": {
      "op": "ADD"
    },
    "5019": {
      "op": "PUSH2",
      "value": "0x1383"
    },
    "5022": {
      "op": "JUMP"
    },
    "5023": {
      "op": "JUMPDEST"
    },
    "5024": {
      "op": "DUP2"
    },
    "5025": {
      "op": "DUP2"
    },
    "5026": {
      "op": "GT"
    },
    "5027": {
      "op": "ISZERO"
    },
    "5028": {
      "op": "PUSH2",
      "value": "0x13B1"
    },
    "5031": {
      "op": "JUMPI"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5036": {
      "op": "DUP4"
    },
    "5037": {
      "op": "DUP8"
    },
    "5038": {
      "op": "ADD"
    },
    "5039": {
      "op": "ADD"
    },
    "5040": {
      "op": "MSTORE"
    },
    "5041": {
      "op": "JUMPDEST"
    },
    "5042": {
      "op": "POP"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5045": {
      "op": "ADD"
    },
    "5046": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5048": {
      "op": "NOT"
    },
    "5049": {
      "op": "AND"
    },
    "5050": {
      "op": "SWAP3"
    },
    "5051": {
      "op": "SWAP1"
    },
    "5052": {
      "op": "SWAP3"
    },
    "5053": {
      "op": "ADD"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5056": {
      "op": "ADD"
    },
    "5057": {
      "op": "SWAP3"
    },
    "5058": {
      "op": "SWAP2"
    },
    "5059": {
      "op": "POP"
    },
    "5060": {
      "op": "POP"
    },
    "5061": {
      "jump": "o",
      "op": "JUMP"
    },
    "5062": {
      "op": "JUMPDEST"
    },
    "5063": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5065": {
      "op": "DUP2"
    },
    "5066": {
      "op": "MSTORE"
    },
    "5067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5069": {
      "op": "PUSH2",
      "value": "0x13D9"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5074": {
      "op": "DUP4"
    },
    "5075": {
      "op": "ADD"
    },
    "5076": {
      "op": "DUP7"
    },
    "5077": {
      "op": "PUSH2",
      "value": "0x1379"
    },
    "5080": {
      "jump": "i",
      "op": "JUMP"
    },
    "5081": {
      "op": "JUMPDEST"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5084": {
      "op": "DUP4"
    },
    "5085": {
      "op": "ADD"
    },
    "5086": {
      "op": "SWAP5"
    },
    "5087": {
      "op": "SWAP1"
    },
    "5088": {
      "op": "SWAP5"
    },
    "5089": {
      "op": "MSTORE"
    },
    "5090": {
      "op": "POP"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5097": {
      "op": "SHL"
    },
    "5098": {
      "op": "SUB"
    },
    "5099": {
      "op": "SWAP2"
    },
    "5100": {
      "op": "SWAP1"
    },
    "5101": {
      "op": "SWAP2"
    },
    "5102": {
      "op": "AND"
    },
    "5103": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5105": {
      "op": "SWAP1"
    },
    "5106": {
      "op": "SWAP2"
    },
    "5107": {
      "op": "ADD"
    },
    "5108": {
      "op": "MSTORE"
    },
    "5109": {
      "op": "SWAP2"
    },
    "5110": {
      "op": "SWAP1"
    },
    "5111": {
      "op": "POP"
    },
    "5112": {
      "jump": "o",
      "op": "JUMP"
    },
    "5113": {
      "op": "JUMPDEST"
    },
    "5114": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5121": {
      "op": "SHL"
    },
    "5122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5124": {
      "op": "MSTORE"
    },
    "5125": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5129": {
      "op": "MSTORE"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5134": {
      "op": "REVERT"
    },
    "5135": {
      "op": "JUMPDEST"
    },
    "5136": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5143": {
      "op": "SHL"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5146": {
      "op": "MSTORE"
    },
    "5147": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5151": {
      "op": "MSTORE"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5156": {
      "op": "REVERT"
    },
    "5157": {
      "op": "JUMPDEST"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5162": {
      "op": "DUP3"
    },
    "5163": {
      "op": "ADD"
    },
    "5164": {
      "op": "PUSH2",
      "value": "0x1437"
    },
    "5167": {
      "op": "JUMPI"
    },
    "5168": {
      "op": "PUSH2",
      "value": "0x1437"
    },
    "5171": {
      "op": "PUSH2",
      "value": "0x140F"
    },
    "5174": {
      "jump": "i",
      "op": "JUMP"
    },
    "5175": {
      "op": "JUMPDEST"
    },
    "5176": {
      "op": "POP"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5179": {
      "op": "ADD"
    },
    "5180": {
      "op": "SWAP1"
    },
    "5181": {
      "jump": "o",
      "op": "JUMP"
    },
    "5182": {
      "op": "JUMPDEST"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5185": {
      "op": "DUP2"
    },
    "5186": {
      "op": "MSTORE"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5189": {
      "op": "PUSH2",
      "value": "0xBB6"
    },
    "5192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5194": {
      "op": "DUP4"
    },
    "5195": {
      "op": "ADD"
    },
    "5196": {
      "op": "DUP5"
    },
    "5197": {
      "op": "PUSH2",
      "value": "0x1379"
    },
    "5200": {
      "jump": "i",
      "op": "JUMP"
    },
    "5201": {
      "op": "JUMPDEST"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5204": {
      "op": "DUP2"
    },
    "5205": {
      "op": "MSTORE"
    },
    "5206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5208": {
      "op": "PUSH2",
      "value": "0x1464"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5213": {
      "op": "DUP4"
    },
    "5214": {
      "op": "ADD"
    },
    "5215": {
      "op": "DUP8"
    },
    "5216": {
      "op": "PUSH2",
      "value": "0x1379"
    },
    "5219": {
      "jump": "i",
      "op": "JUMP"
    },
    "5220": {
      "op": "JUMPDEST"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5223": {
      "op": "DUP4"
    },
    "5224": {
      "op": "ADD"
    },
    "5225": {
      "op": "SWAP6"
    },
    "5226": {
      "op": "SWAP1"
    },
    "5227": {
      "op": "SWAP6"
    },
    "5228": {
      "op": "MSTORE"
    },
    "5229": {
      "op": "POP"
    },
    "5230": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5232": {
      "op": "DUP2"
    },
    "5233": {
      "op": "ADD"
    },
    "5234": {
      "op": "SWAP3"
    },
    "5235": {
      "op": "SWAP1"
    },
    "5236": {
      "op": "SWAP3"
    },
    "5237": {
      "op": "MSTORE"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5240": {
      "op": "SWAP1"
    },
    "5241": {
      "op": "SWAP2"
    },
    "5242": {
      "op": "ADD"
    },
    "5243": {
      "op": "MSTORE"
    },
    "5244": {
      "op": "SWAP2"
    },
    "5245": {
      "op": "SWAP1"
    },
    "5246": {
      "op": "POP"
    },
    "5247": {
      "jump": "o",
      "op": "JUMP"
    },
    "5248": {
      "op": "JUMPDEST"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5251": {
      "op": "DUP3"
    },
    "5252": {
      "op": "NOT"
    },
    "5253": {
      "op": "DUP3"
    },
    "5254": {
      "op": "GT"
    },
    "5255": {
      "op": "ISZERO"
    },
    "5256": {
      "op": "PUSH2",
      "value": "0x1493"
    },
    "5259": {
      "op": "JUMPI"
    },
    "5260": {
      "op": "PUSH2",
      "value": "0x1493"
    },
    "5263": {
      "op": "PUSH2",
      "value": "0x140F"
    },
    "5266": {
      "jump": "i",
      "op": "JUMP"
    },
    "5267": {
      "op": "JUMPDEST"
    },
    "5268": {
      "op": "POP"
    },
    "5269": {
      "op": "ADD"
    },
    "5270": {
      "op": "SWAP1"
    },
    "5271": {
      "jump": "o",
      "op": "JUMP"
    },
    "5272": {
      "op": "JUMPDEST"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5275": {
      "op": "DUP2"
    },
    "5276": {
      "op": "MSTORE"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5279": {
      "op": "PUSH2",
      "value": "0x14AB"
    },
    "5282": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5284": {
      "op": "DUP4"
    },
    "5285": {
      "op": "ADD"
    },
    "5286": {
      "op": "DUP6"
    },
    "5287": {
      "op": "PUSH2",
      "value": "0x1379"
    },
    "5290": {
      "jump": "i",
      "op": "JUMP"
    },
    "5291": {
      "op": "JUMPDEST"
    },
    "5292": {
      "op": "SWAP1"
    },
    "5293": {
      "op": "POP"
    },
    "5294": {
      "op": "DUP3"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5297": {
      "op": "DUP4"
    },
    "5298": {
      "op": "ADD"
    },
    "5299": {
      "op": "MSTORE"
    },
    "5300": {
      "op": "SWAP4"
    },
    "5301": {
      "op": "SWAP3"
    },
    "5302": {
      "op": "POP"
    },
    "5303": {
      "op": "POP"
    },
    "5304": {
      "op": "POP"
    },
    "5305": {
      "jump": "o",
      "op": "JUMP"
    },
    "5306": {
      "op": "JUMPDEST"
    },
    "5307": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5309": {
      "op": "DUP2"
    },
    "5310": {
      "op": "MSTORE"
    },
    "5311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5313": {
      "op": "PUSH2",
      "value": "0x14CD"
    },
    "5316": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5318": {
      "op": "DUP4"
    },
    "5319": {
      "op": "ADD"
    },
    "5320": {
      "op": "DUP7"
    },
    "5321": {
      "op": "PUSH2",
      "value": "0x1379"
    },
    "5324": {
      "jump": "i",
      "op": "JUMP"
    },
    "5325": {
      "op": "JUMPDEST"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5328": {
      "op": "DUP4"
    },
    "5329": {
      "op": "ADD"
    },
    "5330": {
      "op": "SWAP5"
    },
    "5331": {
      "op": "SWAP1"
    },
    "5332": {
      "op": "SWAP5"
    },
    "5333": {
      "op": "MSTORE"
    },
    "5334": {
      "op": "POP"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5337": {
      "op": "ADD"
    },
    "5338": {
      "op": "MSTORE"
    },
    "5339": {
      "op": "SWAP2"
    },
    "5340": {
      "op": "SWAP1"
    },
    "5341": {
      "op": "POP"
    },
    "5342": {
      "jump": "o",
      "op": "JUMP"
    },
    "5343": {
      "op": "JUMPDEST"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5346": {
      "op": "DUP2"
    },
    "5347": {
      "op": "MSTORE"
    },
    "5348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5350": {
      "op": "PUSH2",
      "value": "0x14F2"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5355": {
      "op": "DUP4"
    },
    "5356": {
      "op": "ADD"
    },
    "5357": {
      "op": "DUP6"
    },
    "5358": {
      "op": "PUSH2",
      "value": "0x1379"
    },
    "5361": {
      "jump": "i",
      "op": "JUMP"
    },
    "5362": {
      "op": "JUMPDEST"
    },
    "5363": {
      "op": "SWAP1"
    },
    "5364": {
      "op": "POP"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5367": {
      "op": "DUP1"
    },
    "5368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5370": {
      "op": "SHL"
    },
    "5371": {
      "op": "SUB"
    },
    "5372": {
      "op": "DUP4"
    },
    "5373": {
      "op": "AND"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5376": {
      "op": "DUP4"
    },
    "5377": {
      "op": "ADD"
    },
    "5378": {
      "op": "MSTORE"
    },
    "5379": {
      "op": "SWAP4"
    },
    "5380": {
      "op": "SWAP3"
    },
    "5381": {
      "op": "POP"
    },
    "5382": {
      "op": "POP"
    },
    "5383": {
      "op": "POP"
    },
    "5384": {
      "jump": "o",
      "op": "JUMP"
    },
    "5385": {
      "op": "JUMPDEST"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5388": {
      "op": "DUP2"
    },
    "5389": {
      "op": "MSTORE"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5392": {
      "op": "PUSH2",
      "value": "0x151C"
    },
    "5395": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5397": {
      "op": "DUP4"
    },
    "5398": {
      "op": "ADD"
    },
    "5399": {
      "op": "DUP7"
    },
    "5400": {
      "op": "PUSH2",
      "value": "0x1379"
    },
    "5403": {
      "jump": "i",
      "op": "JUMP"
    },
    "5404": {
      "op": "JUMPDEST"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5411": {
      "op": "SHL"
    },
    "5412": {
      "op": "SUB"
    },
    "5413": {
      "op": "SWAP5"
    },
    "5414": {
      "op": "SWAP1"
    },
    "5415": {
      "op": "SWAP5"
    },
    "5416": {
      "op": "AND"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5419": {
      "op": "DUP4"
    },
    "5420": {
      "op": "ADD"
    },
    "5421": {
      "op": "MSTORE"
    },
    "5422": {
      "op": "POP"
    },
    "5423": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5425": {
      "op": "ADD"
    },
    "5426": {
      "op": "MSTORE"
    },
    "5427": {
      "op": "SWAP2"
    },
    "5428": {
      "op": "SWAP1"
    },
    "5429": {
      "op": "POP"
    },
    "5430": {
      "jump": "o",
      "op": "JUMP"
    },
    "5431": {
      "op": "JUMPDEST"
    },
    "5432": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5437": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5439": {
      "op": "SHL"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5442": {
      "op": "MSTORE"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5447": {
      "op": "MSTORE"
    },
    "5448": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5452": {
      "op": "REVERT"
    }
  },
  "sha1": "f7d0deddeefd03f8fc98b411998b18a6c014d1d8",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.14;\n\n/*\nOpening a channel\n1. Alice and Bob fund a multi-sig wallet\n2. Precompute payment channel address\n3. Alice and Bob exchanges signatures of initial balances\n4. Alice and Bob creates a transaction that can deploy a payment channel from\n   the multi-sig wallet\n\nUpdate channel balances\n1. Repeat steps 1 - 3 from opening a channel\n2. From multi-sig wallet create a transaction that will\n   - delete the transaction that would have deployed the old payment channel\n   - and then create a transaction that can deploy a payment channel with the\n     new balances\n\nClosing a channel when Alice and Bob agree on the final balance\n1. From multi-sig wallet create a transaction that will\n   - send payments to Alice and Bob\n   - and then delete the transaction that would have created the payment channel\n\nClosing a channel when Alice and Bob do not agree on the final balances\n1. Deploy payment channel from multi-sig\n2. call challengeExit() to start the process of closing a channel\n3. Alice and Bob can withdraw funds once the channel is expired\n*/\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"./console.sol\";\n\ncontract BiDirectionalPaymentChannel {\n    using SafeMath for uint256;\n    using ECDSA for bytes32;\n\n    event ChallengeExit(address indexed sender, uint256 nonce);\n    event Withdraw(address indexed to, uint256 amount);\n\n    address payable[2] public users;\n    mapping(address => bool) public isUser;\n\n    mapping(address => uint256) public balances;\n\n    uint256 public challengePeriod;\n    uint256 public expiresAt;\n    uint256 public nonce;\n\n    modifier checkBalances(uint256[2] memory _balances) {\n        console.log(\"BiDirectionalPaymentChannel.checkBalances() called\");\n        console.log(\n            \"contract balance is %d, balances[0] is %d,balances[1] is %d\",\n            address(this).balance,\n            _balances[0],\n            _balances[1]\n        );\n        require(\n            address(this).balance >= _balances[0].add(_balances[1]),\n            \"balance of contract must be >= to the total balance of users\"\n        );\n        _;\n        console.log(\"BiDirectionalPaymentChannel.checkBalances() passed\");\n    }\n\n    // NOTE: deposit from multi-sig wallet\n    constructor(\n        address payable[2] memory _users,\n        uint256[2] memory _balances,\n        uint256 _expiresAt,\n        uint256 _challengePeriod\n    ) payable checkBalances(_balances) {\n        console.log(\"BiDirectionalPaymentChannel.constructor()\");\n        require(_expiresAt > block.timestamp, \"Expiration must be > now\");\n        require(_challengePeriod > 0, \"Challenge period must be > 0\");\n\n        for (uint256 i = 0; i < _users.length; i++) {\n            address payable user = _users[i];\n\n            require(!isUser[user], \"user must be unique\");\n            users[i] = user;\n            isUser[user] = true;\n\n            balances[user] = _balances[i];\n        }\n\n        expiresAt = _expiresAt;\n        challengePeriod = _challengePeriod;\n    }\n\n    function verify(\n        bytes[2] memory _signatures,\n        address _contract,\n        address[2] memory _signers,\n        uint256[2] memory _balances,\n        uint256 _nonce\n    ) public view returns (bool) {\n        console.log(\"BiDirectionalPaymentChannel.verify() called\");\n        console.log(\"nonce is %d\", _nonce);\n        for (uint256 i = 0; i < _signatures.length; i++) {\n            /*\n            NOTE: sign with address of this contract to protect\n                  agains replay attack on other contracts\n            */\n            console.log(\"_signers[%d] is %s\", i, _signers[i]);\n            console.log(\"_balances[%d] is %s\", i, _balances[i]);\n            address decoded = keccak256(\n                abi.encodePacked(_contract, _balances[i], _nonce)\n            ).toEthSignedMessageHash().recover(_signatures[i]);\n            console.log(\"decoded is %s\", decoded);\n            bool valid = _signers[i] ==\n                keccak256(abi.encodePacked(_contract, _balances[i], _nonce))\n                    .toEthSignedMessageHash()\n                    .recover(_signatures[i]);\n\n            if (!valid) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    modifier checkSignatures(\n        bytes[2] memory _signatures,\n        uint256[2] memory _balances,\n        uint256 _nonce\n    ) {\n        console.log(\"BiDirectionalPaymentChannel.checkSignatures() called\");\n        // Note: copy storage array to memory\n        address[2] memory signers;\n        for (uint256 i = 0; i < users.length; i++) {\n            signers[i] = users[i];\n        }\n\n        require(\n            verify(_signatures, address(this), signers, _balances, _nonce),\n            \"Invalid signature\"\n        );\n        _;\n        console.log(\"BiDirectionalPaymentChannel.checkSignatures() passed\");\n    }\n\n    modifier onlyUser() {\n        console.log(\"BiDirectionalPaymentChannel.onlyUser() called\");\n        require(isUser[msg.sender], \"Not user\");\n        _;\n        console.log(\"BiDirectionalPaymentChannel.onlyUser() passed\");\n    }\n\n    function challengeExit(\n        uint256[2] memory _balances,\n        uint256 _nonce,\n        bytes[2] memory _signatures\n    )\n        public\n        onlyUser\n        checkSignatures(_signatures, _balances, _nonce)\n        checkBalances(_balances)\n    {\n        console.log(\"BiDirectionalPaymentChannel.challengeExit()\");\n        require(block.timestamp < expiresAt, \"Expired challenge period\");\n        require(_nonce > nonce, \"Nonce must be greater than the current nonce\");\n\n        for (uint256 i = 0; i < _balances.length; i++) {\n            balances[users[i]] = _balances[i];\n        }\n        nonce = _nonce;\n        expiresAt = block.timestamp.add(challengePeriod);\n\n        emit ChallengeExit(msg.sender, nonce);\n    }\n\n    function withdraw() public onlyUser {\n        // commented out in order to be able to call withdraw(), normally\n        // it should be uncommented\n        //        require(\n        //            block.timestamp >= expiresAt,\n        //            \"Challenge period has not expired yet\"\n        //        );\n        console.log(\"BiDirectionalPaymentChannel.withdraw() called\");\n        uint256 amount = balances[msg.sender];\n        balances[msg.sender] = 0;\n\n        (bool sent, ) = msg.sender.call{value: amount}(\"\");\n        require(sent, \"Failed to send Ether\");\n        console.log(\n            \"BiDirectionalPaymentChannel.withdraw(), msg.sender is %s, amount=%d\",\n            msg.sender,\n            amount\n        );\n        emit Withdraw(msg.sender, amount);\n    }\n\n    receive() external payable {\n        console.log(\n            \"BiDirectionalPaymentChannel.receive(), Receiving %d from %s\",\n            msg.value,\n            msg.sender\n        );\n    }\n\n    fallback() external payable {\n        console.log(\n            \"BiDirectionalPaymentChannel.fallback(), Receiving %d from %s\",\n            msg.value,\n            msg.sender\n        );\n    }\n}\n",
  "sourceMap": "1248:5816:4:-:0;;;2333:765;;;;;;;;;;;;;;;;;;:::i;:::-;2514:9;1761:65;;;;;;;;;;;;;;;;;;:11;;;;;:65;;:::i;:::-;1836:183;;;;;;;;;;;;;;;;;;1971:12;;;1997;;;;1936:21;;1971:12;1836:11;;;;;:183;;:::i;:::-;2092:12;;;;;2075;;:30;;:12;;2092;2075:16;;;;;:30;;:::i;:::-;2050:21;:55;;2029:162;;;;-1:-1:-1;;;2029:162:4;;2212:2:11;2029:162:4;;;2194:21:11;2251:2;2231:18;;;2224:30;2290:34;2270:18;;;2263:62;2361:30;2341:18;;;2334:58;2409:19;;2029:162:4;;;;;;;;;2535:56:::1;;;;;;;;;;;;;;;;;;:11;;;;;:56;;:::i;:::-;2622:15;2609:10;:28;2601:65;;;::::0;-1:-1:-1;;;2601:65:4;;2641:2:11;2601:65:4::1;::::0;::::1;2623:21:11::0;2680:2;2660:18;;;2653:30;2719:26;2699:18;;;2692:54;2763:18;;2601:65:4::1;2439:348:11::0;2601:65:4::1;2703:1;2684:16;:20;2676:61;;;::::0;-1:-1:-1;;;2676:61:4;;2994:2:11;2676:61:4::1;::::0;::::1;2976:21:11::0;3033:2;3013:18;;;3006:30;3072;3052:18;;;3045:58;3120:18;;2676:61:4::1;2792:352:11::0;2676:61:4::1;2753:9;2748:267;2772:13;2768:1;:17;2748:267;;;2806:20;2829:6;2836:1;2829:9;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;2862:12:4;::::1;;::::0;;;:6:::1;:12:::0;;;;;;;;2829:9;;-1:-1:-1;2862:12:4::1;;2861:13;2853:45;;;::::0;-1:-1:-1;;;2853:45:4;;3351:2:11;2853:45:4::1;::::0;::::1;3333:21:11::0;3390:2;3370:18;;;3363:30;3429:21;3409:18;;;3402:49;3468:18;;2853:45:4::1;3149:343:11::0;2853:45:4::1;2923:4;2912:5;2918:1;2912:8;;;;;;;:::i;:::-;;:15:::0;;-1:-1:-1;;;;;;2912:15:4::1;-1:-1:-1::0;;;;;2912:15:4;;::::1;;::::0;;2941:12;::::1;-1:-1:-1::0;2941:12:4;;;:6:::1;:12;::::0;;;;;;;:19;;-1:-1:-1;;2941:19:4::1;-1:-1:-1::0;2941:19:4::1;::::0;;2992:9;;3002:1;;2992:12;::::1;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;2975:14:4;;::::1;;::::0;;;:8:::1;:14:::0;;;;;;:29;2787:3;::::1;::::0;::::1;:::i;:::-;;;;2748:267;;;-1:-1:-1::0;3025:9:4::1;:22:::0;;;3057:15:::1;:34:::0;;;2212:65;;;;;;;;;;;;;;;;;;;;;:11;;;;;:65;;:::i;:::-;2333:765;;;;;1248:5816;;5053:112:10;5102:59;5157:2;5118:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5118:42:10;;;;;;;;;;;;;;-1:-1:-1;;;;;5118:42:10;;;-1:-1:-1;;;5118:42:10;;;;5102:15;:59;:::i;:::-;5053:112;:::o;28174:166::-;28250:86;28320:2;28324;28328;28332;28266:69;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;28266:69:10;;;;;;;;;;;;;;-1:-1:-1;;;;;28266:69:10;;;-1:-1:-1;;;28266:69:10;;;;28250:15;:86;:::i;:::-;28174:166;;;;:::o;2755:96:3:-;2813:7;2839:5;2843:1;2839;:5;:::i;:::-;2832:12;2755:96;-1:-1:-1;;;2755:96:3:o;175:288:10:-;263:14;;128:42;372:2;359:16;;239:21;;263:14;359:16;128:42;399:5;388:68;379:77;;334:126;;175:288;:::o;14:343:11:-;81:2;75:9;;;111:15;;-1:-1:-1;;;;;141:34:11;;177:22;;;138:62;135:185;;;242:10;237:3;233:20;230:1;223:31;277:4;274:1;267:15;305:4;302:1;295:15;135:185;336:2;329:22;14:343;:::o;362:483::-;423:5;476:3;469:4;461:6;457:17;453:27;443:55;;494:1;491;484:12;443:55;518:17;;:::i;:::-;557:3;595:2;587:6;583:15;621:3;613:6;610:15;607:35;;;638:1;635;628:12;607:35;662:6;677:139;693:6;688:3;685:15;677:139;;;761:10;;749:23;;801:4;792:14;;;;710;677:139;;;-1:-1:-1;834:5:11;;362:483;-1:-1:-1;;;;;362:483:11:o;850:1023::-;1001:6;1009;1017;1025;1078:3;1066:9;1057:7;1053:23;1049:33;1046:53;;;1095:1;1092;1085:12;1046:53;1144:7;1137:4;1126:9;1122:20;1118:34;1108:62;;1166:1;1163;1156:12;1108:62;1190:17;;:::i;:::-;1229:3;1270:2;1259:9;1255:18;1296:7;1288:6;1285:19;1282:39;;;1317:1;1314;1307:12;1282:39;1341:9;1359:323;1375:6;1370:3;1367:15;1359:323;;;1444:10;;-1:-1:-1;;;;;1487:31:11;;1477:42;;1467:140;;1561:1;1590:2;1586;1579:14;1467:140;1620:18;;1667:4;1658:14;;;;1392;1359:323;;;1363:3;1701:5;1691:15;;1725:52;1769:7;1761:6;1725:52;:::i;:::-;1817:3;1802:19;;1796:26;1862:3;1847:19;;;1841:26;850:1023;;1715:62;;-1:-1:-1;850:1023:11;-1:-1:-1;;;;;;850:1023:11:o;1878:127::-;1939:10;1934:3;1930:20;1927:1;1920:31;1970:4;1967:1;1960:15;1994:4;1991:1;1984:15;3497:127;3558:10;3553:3;3549:20;3546:1;3539:31;3589:4;3586:1;3579:15;3613:4;3610:1;3603:15;3629:135;3668:3;3689:17;;;3686:43;;3709:18;;:::i;:::-;-1:-1:-1;3756:1:11;3745:13;;3629:135::o;3769:472::-;3811:3;3849:5;3843:12;3876:6;3871:3;3864:19;3901:1;3911:162;3925:6;3922:1;3919:13;3911:162;;;3987:4;4043:13;;;4039:22;;4033:29;4015:11;;;4011:20;;4004:59;3940:12;3911:162;;;4091:6;4088:1;4085:13;4082:87;;;4157:1;4150:4;4141:6;4136:3;4132:16;4128:27;4121:38;4082:87;-1:-1:-1;4223:2:11;4202:15;-1:-1:-1;;4198:29:11;4189:39;;;;4230:4;4185:50;;3769:472;-1:-1:-1;;3769:472:11:o;4246:220::-;4395:2;4384:9;4377:21;4358:4;4415:45;4456:2;4445:9;4441:18;4433:6;4415:45;:::i;4471:435::-;4704:3;4693:9;4686:22;4667:4;4725:46;4766:3;4755:9;4751:19;4743:6;4725:46;:::i;:::-;4802:2;4787:18;;4780:34;;;;-1:-1:-1;4845:2:11;4830:18;;4823:34;;;;4888:2;4873:18;;;4866:34;4717:54;4471:435;-1:-1:-1;4471:435:11:o;4911:128::-;4951:3;4982:1;4978:6;4975:1;4972:13;4969:39;;;4988:18;;:::i;:::-;-1:-1:-1;5024:9:11;;4911:128::o;:::-;1248:5816:4;;;;;;",
  "sourcePath": "contracts/BidirectionalPayment.sol",
  "type": "contract"
}